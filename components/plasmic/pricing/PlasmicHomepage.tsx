// @ts-nocheck
/* eslint-disable */
/* tslint:disable */
/* prettier-ignore-start */

/** @jsxRuntime classic */
/** @jsx createPlasmicElementProxy */
/** @jsxFrag React.Fragment */

// This class is auto-generated by Plasmic; please do not edit!
// Plasmic Project: seYsnBL1P3AiXaFGNEMUUM
// Component: g64VYoCfAKTS

import * as React from "react";

import Head from "next/head";
import Link, { LinkProps } from "next/link";
import { useRouter } from "next/router";

import {
  Flex as Flex__,
  MultiChoiceArg,
  PlasmicDataSourceContextProvider as PlasmicDataSourceContextProvider__,
  PlasmicIcon as PlasmicIcon__,
  PlasmicImg as PlasmicImg__,
  PlasmicLink as PlasmicLink__,
  PlasmicPageGuard as PlasmicPageGuard__,
  SingleBooleanChoiceArg,
  SingleChoiceArg,
  Stack as Stack__,
  StrictProps,
  Trans as Trans__,
  classNames,
  createPlasmicElementProxy,
  deriveRenderOpts,
  ensureGlobalVariants,
  generateOnMutateForSpec,
  generateStateOnChangeProp,
  generateStateOnChangePropForCodeComponents,
  generateStateValueProp,
  get as $stateGet,
  hasVariant,
  initializeCodeComponentStates,
  initializePlasmicStates,
  makeFragment,
  omit,
  pick,
  renderPlasmicSlot,
  set as $stateSet,
  useCurrentUser,
  useDollarState,
  usePlasmicTranslator,
  useTrigger,
  wrapWithClassName
} from "@plasmicapp/react-web";
import {
  DataCtxReader as DataCtxReader__,
  useDataEnv,
  useGlobalActions
} from "@plasmicapp/react-web/lib/host";

import Button from "../../Button"; // plasmic-import: oVzoHzMf1TLl/component
import { Slider } from "@/fragment/components/slider"; // plasmic-import: IwfvOcf1tP7X/codeComponent
import TextInput from "../../TextInput"; // plasmic-import: ZdzGQGZE4mJ7/component
import Checkbox from "../../Checkbox"; // plasmic-import: dk4vJhcf_j2D/component
import { SideEffect } from "@plasmicpkgs/plasmic-basic-components";
import { Fetcher } from "@plasmicapp/react-web/lib/data-sources";

import { useScreenVariants as useScreenVariantsebUcSKv8J57Q } from "./PlasmicGlobalVariant__Screen"; // plasmic-import: ebUcSKv8j57Q/globalVariant

import "@plasmicapp/react-web/lib/plasmic.css";

import plasmic_fragment_design_system_css from "../fragment_design_system/plasmic.module.css"; // plasmic-import: h9Dbk9ygddw7UVEq1NNhKi/projectcss
import projectcss from "./plasmic.module.css"; // plasmic-import: seYsnBL1P3AiXaFGNEMUUM/projectcss
import sty from "./PlasmicHomepage.module.css"; // plasmic-import: g64VYoCfAKTS/css

import Icon11Icon from "./icons/PlasmicIcon__Icon11"; // plasmic-import: YXzAIe4mJWDL/icon
import Icon6Icon from "./icons/PlasmicIcon__Icon6"; // plasmic-import: WvR12xDIGLgz/icon
import ChevronRightIcon from "../fragment_icons/icons/PlasmicIcon__ChevronRight"; // plasmic-import: GHdF3hS-oP_3/icon
import ChevronLeftIcon from "../fragment_icons/icons/PlasmicIcon__ChevronLeft"; // plasmic-import: r9Upp9NbiZkf/icon
import Icon3Icon from "./icons/PlasmicIcon__Icon3"; // plasmic-import: jRHPVqrBy9SV/icon
import Icon4Icon from "./icons/PlasmicIcon__Icon4"; // plasmic-import: gsRGA0OcKSmi/icon
import Icon15Icon from "./icons/PlasmicIcon__Icon15"; // plasmic-import: jAui2HVvT8Qw/icon
import Icon5Icon from "./icons/PlasmicIcon__Icon5"; // plasmic-import: HAnMzYJg5d76/icon
import Icon7Icon from "./icons/PlasmicIcon__Icon7"; // plasmic-import: 1eqoHYLc_fOB/icon
import Icon8Icon from "./icons/PlasmicIcon__Icon8"; // plasmic-import: fEKKJ-2F5BD1/icon
import Icon9Icon from "./icons/PlasmicIcon__Icon9"; // plasmic-import: JK4sPT7lqUH1/icon
import Icon12Icon from "./icons/PlasmicIcon__Icon12"; // plasmic-import: 8GqB7Ju9fvrK/icon
import Icon16Icon from "./icons/PlasmicIcon__Icon16"; // plasmic-import: wgGgWP4KVX41/icon
import Icon10Icon from "./icons/PlasmicIcon__Icon10"; // plasmic-import: 5Kdxmn_uOBnI/icon
import SearchsvgIcon from "./icons/PlasmicIcon__Searchsvg"; // plasmic-import: 2VY19-xmXXIp/icon
import ChecksvgIcon from "./icons/PlasmicIcon__Checksvg"; // plasmic-import: 22TzxIplc3cE/icon

createPlasmicElementProxy;

export type PlasmicHomepage__VariantMembers = {};
export type PlasmicHomepage__VariantsArgs = {};
type VariantPropType = keyof PlasmicHomepage__VariantsArgs;
export const PlasmicHomepage__VariantProps = new Array<VariantPropType>();

export type PlasmicHomepage__ArgsType = {};
type ArgPropType = keyof PlasmicHomepage__ArgsType;
export const PlasmicHomepage__ArgProps = new Array<ArgPropType>();

export type PlasmicHomepage__OverridesType = {
  root?: Flex__<"div">;
  h1?: Flex__<"h1">;
  btnDashboard3?: Flex__<"div">;
  lblUser?: Flex__<"div">;
  btnLogin?: Flex__<typeof Button>;
  btnReservation?: Flex__<"div">;
  btnReservation3?: Flex__<"div">;
  btnReservation2?: Flex__<"div">;
  btnAnnouncement?: Flex__<"div">;
  btnCalculation?: Flex__<"div">;
  btnOnlinepayment?: Flex__<"div">;
  btnApi?: Flex__<"div">;
  btnEhr?: Flex__<"div">;
  btnSpecialsite?: Flex__<"div">;
  btnSpecialsite2?: Flex__<"div">;
  btnDashboard?: Flex__<"div">;
  gridCalculator?: Flex__<"div">;
  fragmentSlider?: Flex__<typeof Slider>;
  txtResevationCount?: Flex__<typeof TextInput>;
  reservationCheck?: Flex__<typeof Checkbox>;
  txtReservationInternetResult?: Flex__<"div">;
  reservationPhoneCheck?: Flex__<typeof Checkbox>;
  txtReservationPhoneResult?: Flex__<"div">;
  kioskResevationCheck?: Flex__<typeof Checkbox>;
  txtReservationKioskResult?: Flex__<"div">;
  announcementCheck?: Flex__<typeof Checkbox>;
  txtAnnouncementResult?: Flex__<"div">;
  calculationCheck?: Flex__<typeof Checkbox>;
  txtCalculationResult?: Flex__<"div">;
  onlinepaymentCheck?: Flex__<typeof Checkbox>;
  txtOnlinePaymentResult?: Flex__<"div">;
  apiCheck?: Flex__<typeof Checkbox>;
  txtapiResult?: Flex__<"div">;
  ehrCheck?: Flex__<typeof Checkbox>;
  txtReservationKioskResult6?: Flex__<"div">;
  specialSiteCheck?: Flex__<typeof Checkbox>;
  txtSpecialSiteResult?: Flex__<"div">;
  referralCheck?: Flex__<typeof Checkbox>;
  txtRefferalResult?: Flex__<"div">;
  dashboardCheck?: Flex__<typeof Checkbox>;
  txtDashboardResult?: Flex__<"div">;
  txtSumInvoice?: Flex__<"div">;
  sideEffectCalculator?: Flex__<typeof SideEffect>;
  gridReservation?: Flex__<"div">;
  gridPhoneReserve?: Flex__<"div">;
  gridKiosk?: Flex__<"div">;
  gridAnnouncement?: Flex__<"div">;
  gridCalculation?: Flex__<"div">;
  gridOnlinePayment?: Flex__<"div">;
  gridApi?: Flex__<"div">;
  gridEhr?: Flex__<"div">;
  gridSpecialSite?: Flex__<"div">;
  gridReferral?: Flex__<"div">;
  gridDashboard?: Flex__<"div">;
  btnFixedCalculator?: Flex__<"div">;
  sideEffectPageLoad?: Flex__<typeof SideEffect>;
};

export interface DefaultHomepageProps {}

const $$ = {};

function useNextRouter() {
  try {
    return useRouter();
  } catch {}
  return undefined;
}

function PlasmicHomepage__RenderFunc(props: {
  variants: PlasmicHomepage__VariantsArgs;
  args: PlasmicHomepage__ArgsType;
  overrides: PlasmicHomepage__OverridesType;
  forNode?: string;
}) {
  const { variants, overrides, forNode } = props;

  const args = React.useMemo(() => Object.assign({}, props.args), [props.args]);

  const $props = {
    ...args,
    ...variants
  };

  const __nextRouter = useNextRouter();
  const $ctx = useDataEnv?.() || {};
  const refsRef = React.useRef({});
  const $refs = refsRef.current;

  const $globalActions = useGlobalActions?.();

  const stateSpecs: Parameters<typeof useDollarState>[0] = React.useMemo(
    () => [
      {
        path: "user",
        type: "private",
        variableType: "object",
        initFunc: ({ $props, $state, $queries, $ctx }) => ({})
      },
      {
        path: "clReservationState",
        type: "private",
        variableType: "boolean",
        initFunc: ({ $props, $state, $queries, $ctx }) => true
      },
      {
        path: "clAnnouncementState",
        type: "private",
        variableType: "boolean",
        initFunc: ({ $props, $state, $queries, $ctx }) => true
      },
      {
        path: "clCalculationState",
        type: "private",
        variableType: "boolean",
        initFunc: ({ $props, $state, $queries, $ctx }) => true
      },
      {
        path: "clOnlinepaymentState",
        type: "private",
        variableType: "boolean",
        initFunc: ({ $props, $state, $queries, $ctx }) => true
      },
      {
        path: "clApiState",
        type: "private",
        variableType: "boolean",
        initFunc: ({ $props, $state, $queries, $ctx }) => true
      },
      {
        path: "clEhrState",
        type: "private",
        variableType: "boolean",
        initFunc: ({ $props, $state, $queries, $ctx }) => true
      },
      {
        path: "clSpecialsiteState",
        type: "private",
        variableType: "boolean",
        initFunc: ({ $props, $state, $queries, $ctx }) => true
      },
      {
        path: "clDashboardState",
        type: "private",
        variableType: "boolean",
        initFunc: ({ $props, $state, $queries, $ctx }) => true
      },
      {
        path: "clMainState",
        type: "private",
        variableType: "boolean",
        initFunc: ({ $props, $state, $queries, $ctx }) => false
      },
      {
        path: "reservationInternetPrice",
        type: "private",
        variableType: "number",
        initFunc: ({ $props, $state, $queries, $ctx }) => 700
      },
      {
        path: "reservationPhonePrice",
        type: "private",
        variableType: "number",
        initFunc: ({ $props, $state, $queries, $ctx }) => 400
      },
      {
        path: "reservationKioskPrice",
        type: "private",
        variableType: "number",
        initFunc: ({ $props, $state, $queries, $ctx }) => 400
      },
      {
        path: "reservationInternetResult",
        type: "private",
        variableType: "number",
        initFunc: ({ $props, $state, $queries, $ctx }) => 0
      },
      {
        path: "reservsationPhoneResult",
        type: "private",
        variableType: "number",
        initFunc: ({ $props, $state, $queries, $ctx }) => 0
      },
      {
        path: "reservationKioskResult",
        type: "private",
        variableType: "number",
        initFunc: ({ $props, $state, $queries, $ctx }) => 0
      },
      {
        path: "txtResevationCount.value",
        type: "private",
        variableType: "text",
        initFunc: ({ $props, $state, $queries, $ctx }) =>
          (() => {
            try {
              return $state.fragmentSlider.value;
            } catch (e) {
              if (
                e instanceof TypeError ||
                e?.plasmicType === "PlasmicUndefinedDataError"
              ) {
                return undefined;
              }
              throw e;
            }
          })()
      },
      {
        path: "reservationCheck.isChecked",
        type: "private",
        variableType: "boolean",
        initFunc: ({ $props, $state, $queries, $ctx }) => "isChecked"
      },
      {
        path: "reservationPhoneCheck.isChecked",
        type: "private",
        variableType: "boolean",
        initFunc: ({ $props, $state, $queries, $ctx }) => undefined
      },
      {
        path: "kioskResevationCheck.isChecked",
        type: "private",
        variableType: "boolean",
        initFunc: ({ $props, $state, $queries, $ctx }) => undefined
      },
      {
        path: "announcementCheck.isChecked",
        type: "private",
        variableType: "boolean",
        initFunc: ({ $props, $state, $queries, $ctx }) => undefined
      },
      {
        path: "calculationCheck.isChecked",
        type: "private",
        variableType: "boolean",
        initFunc: ({ $props, $state, $queries, $ctx }) => undefined
      },
      {
        path: "onlinepaymentCheck.isChecked",
        type: "private",
        variableType: "boolean",
        initFunc: ({ $props, $state, $queries, $ctx }) => undefined
      },
      {
        path: "apiCheck.isChecked",
        type: "private",
        variableType: "boolean",
        initFunc: ({ $props, $state, $queries, $ctx }) => undefined
      },
      {
        path: "ehrCheck.isChecked",
        type: "private",
        variableType: "boolean",
        initFunc: ({ $props, $state, $queries, $ctx }) => undefined
      },
      {
        path: "specialSiteCheck.isChecked",
        type: "private",
        variableType: "boolean",
        initFunc: ({ $props, $state, $queries, $ctx }) => undefined
      },
      {
        path: "referralCheck.isChecked",
        type: "private",
        variableType: "boolean",
        initFunc: ({ $props, $state, $queries, $ctx }) => undefined
      },
      {
        path: "announcementResult",
        type: "private",
        variableType: "number",
        initFunc: ({ $props, $state, $queries, $ctx }) => 0
      },
      {
        path: "calculationResult",
        type: "private",
        variableType: "number",
        initFunc: ({ $props, $state, $queries, $ctx }) => 0
      },
      {
        path: "onlinePayemntResult",
        type: "private",
        variableType: "number",
        initFunc: ({ $props, $state, $queries, $ctx }) => 0
      },
      {
        path: "apiResult",
        type: "private",
        variableType: "number",
        initFunc: ({ $props, $state, $queries, $ctx }) => 0
      },
      {
        path: "ehrResult",
        type: "private",
        variableType: "number",
        initFunc: ({ $props, $state, $queries, $ctx }) => 0
      },
      {
        path: "specialSiteResult",
        type: "private",
        variableType: "number",
        initFunc: ({ $props, $state, $queries, $ctx }) => 0
      },
      {
        path: "dashboardResult",
        type: "private",
        variableType: "number",
        initFunc: ({ $props, $state, $queries, $ctx }) => 0
      },
      {
        path: "suminvoiceResult",
        type: "private",
        variableType: "number",
        initFunc: ({ $props, $state, $queries, $ctx }) => 0
      },
      {
        path: "calculationPrice",
        type: "private",
        variableType: "number",
        initFunc: ({ $props, $state, $queries, $ctx }) => 200
      },
      {
        path: "onlinePayemntPrice",
        type: "private",
        variableType: "number",
        initFunc: ({ $props, $state, $queries, $ctx }) => 500
      },
      {
        path: "apiPrice",
        type: "private",
        variableType: "number",
        initFunc: ({ $props, $state, $queries, $ctx }) => 200
      },
      {
        path: "dashboardPrice",
        type: "private",
        variableType: "number",
        initFunc: ({ $props, $state, $queries, $ctx }) => 100
      },
      {
        path: "announcementPrice",
        type: "private",
        variableType: "number",
        initFunc: ({ $props, $state, $queries, $ctx }) => 100
      },
      {
        path: "ehrPrice",
        type: "private",
        variableType: "number",
        initFunc: ({ $props, $state, $queries, $ctx }) => 1000
      },
      {
        path: "specialSitePrice",
        type: "private",
        variableType: "number",
        initFunc: ({ $props, $state, $queries, $ctx }) => 100
      },
      {
        path: "clPhoneReservationStatus",
        type: "private",
        variableType: "boolean",
        initFunc: ({ $props, $state, $queries, $ctx }) => true
      },
      {
        path: "clCalculatorStatus",
        type: "private",
        variableType: "boolean",
        initFunc: ({ $props, $state, $queries, $ctx }) => true
      },
      {
        path: "minCount",
        type: "private",
        variableType: "number",
        initFunc: ({ $props, $state, $queries, $ctx }) => 1000
      },
      {
        path: "maxCount",
        type: "private",
        variableType: "number",
        initFunc: ({ $props, $state, $queries, $ctx }) => 10000
      },
      {
        path: "dashboardCheck.isChecked",
        type: "private",
        variableType: "boolean",
        initFunc: ({ $props, $state, $queries, $ctx }) => undefined
      },
      {
        path: "referralPrice",
        type: "private",
        variableType: "number",
        initFunc: ({ $props, $state, $queries, $ctx }) => 100
      },
      {
        path: "referralResult",
        type: "private",
        variableType: "number",
        initFunc: ({ $props, $state, $queries, $ctx }) => 0
      },
      {
        path: "fragmentSlider.value",
        type: "private",
        variableType: "number",
        initFunc: ({ $props, $state, $queries, $ctx }) => 1000
      },
      {
        path: "clKioskStatus",
        type: "private",
        variableType: "boolean",
        initFunc: ({ $props, $state, $queries, $ctx }) => true
      },
      {
        path: "clReferralState",
        type: "private",
        variableType: "boolean",
        initFunc: ({ $props, $state, $queries, $ctx }) => true
      },
      {
        path: "btnFixedCalculatorStatus",
        type: "private",
        variableType: "boolean",
        initFunc: ({ $props, $state, $queries, $ctx }) => false
      },
      {
        path: "txtUserName",
        type: "private",
        variableType: "text",
        initFunc: ({ $props, $state, $queries, $ctx }) => ""
      },
      {
        path: "btnLoginShow",
        type: "private",
        variableType: "boolean",
        initFunc: ({ $props, $state, $queries, $ctx }) => false
      }
    ],
    [$props, $ctx, $refs]
  );
  const $state = useDollarState(stateSpecs, {
    $props,
    $ctx,
    $queries: {},
    $refs
  });

  const globalVariants = ensureGlobalVariants({
    screen: useScreenVariantsebUcSKv8J57Q()
  });

  return (
    <React.Fragment>
      <Head>
        <meta name="twitter:card" content="summary_large_image" />
        <title key="title">{PlasmicHomepage.pageMetadata.title}</title>
        <meta
          key="og:title"
          property="og:title"
          content={PlasmicHomepage.pageMetadata.title}
        />
        <meta
          key="twitter:title"
          name="twitter:title"
          content={PlasmicHomepage.pageMetadata.title}
        />
        <meta
          key="description"
          name="description"
          content={PlasmicHomepage.pageMetadata.description}
        />
        <meta
          key="og:description"
          property="og:description"
          content={PlasmicHomepage.pageMetadata.description}
        />
        <meta
          key="twitter:description"
          name="twitter:description"
          content={PlasmicHomepage.pageMetadata.description}
        />
        <meta
          key="og:image"
          property="og:image"
          content={PlasmicHomepage.pageMetadata.ogImageSrc}
        />
        <meta
          key="twitter:image"
          name="twitter:image"
          content={PlasmicHomepage.pageMetadata.ogImageSrc}
        />
      </Head>

      <style>{`
        body {
          margin: 0;
        }
      `}</style>

      <div className={projectcss.plasmic_page_wrapper}>
        {(() => {
          try {
            return true;
          } catch (e) {
            if (
              e instanceof TypeError ||
              e?.plasmicType === "PlasmicUndefinedDataError"
            ) {
              return true;
            }
            throw e;
          }
        })() ? (
          <div
            data-plasmic-name={"root"}
            data-plasmic-override={overrides.root}
            data-plasmic-root={true}
            data-plasmic-for-node={forNode}
            className={classNames(
              projectcss.all,
              projectcss.root_reset,
              projectcss.plasmic_default_styles,
              projectcss.plasmic_mixins,
              projectcss.plasmic_tokens,
              plasmic_fragment_design_system_css.plasmic_tokens,
              sty.root
            )}
            dir={"rtl"}
          >
            <Stack__
              as={"div"}
              hasGap={true}
              className={classNames(projectcss.all, sty.freeBox__vst7D)}
            >
              <div className={classNames(projectcss.all, sty.freeBox__v9Efc)}>
                <div
                  className={classNames(projectcss.all, sty.freeBox__cnJt3)}
                />

                <div className={classNames(projectcss.all, sty.freeBox__jcWd6)}>
                  <div
                    className={classNames(projectcss.all, sty.freeBox__v6Ysz)}
                  >
                    <Icon11Icon
                      className={classNames(projectcss.all, sty.svg___0HXtL)}
                      onClick={async event => {
                        const $steps = {};

                        $steps["goToHttpspaziresh24Com"] = true
                          ? (() => {
                              const actionArgs = {
                                destination: "https://paziresh24.com"
                              };
                              return (({ destination }) => {
                                if (
                                  typeof destination === "string" &&
                                  destination.startsWith("#")
                                ) {
                                  document
                                    .getElementById(destination.substr(1))
                                    .scrollIntoView({ behavior: "smooth" });
                                } else {
                                  __nextRouter?.push(destination);
                                }
                              })?.apply(null, [actionArgs]);
                            })()
                          : undefined;
                        if (
                          $steps["goToHttpspaziresh24Com"] != null &&
                          typeof $steps["goToHttpspaziresh24Com"] ===
                            "object" &&
                          typeof $steps["goToHttpspaziresh24Com"].then ===
                            "function"
                        ) {
                          $steps["goToHttpspaziresh24Com"] = await $steps[
                            "goToHttpspaziresh24Com"
                          ];
                        }
                      }}
                      role={"img"}
                    />

                    <h1
                      data-plasmic-name={"h1"}
                      data-plasmic-override={overrides.h1}
                      className={classNames(
                        projectcss.all,
                        projectcss.h1,
                        projectcss.__wab_text,
                        sty.h1
                      )}
                    >
                      {
                        "\u062a\u0639\u0631\u0641\u0647 \u0645\u062d\u0635\u0648\u0644\u0627\u062a \u067e\u0630\u06cc\u0631\u0634\u06f2\u06f4"
                      }
                    </h1>
                  </div>
                </div>
                <div className={classNames(projectcss.all, sty.freeBox__vcShm)}>
                  <div
                    data-plasmic-name={"btnDashboard3"}
                    data-plasmic-override={overrides.btnDashboard3}
                    className={classNames(projectcss.all, sty.btnDashboard3)}
                    onClick={async event => {
                      const $steps = {};

                      $steps["runCode"] = true
                        ? (() => {
                            const actionArgs = {
                              customFunction: async () => {
                                return (() => {
                                  return document
                                    .querySelector(".grid_calculator")
                                    .scrollIntoView({ behavior: "smooth" });
                                })();
                              }
                            };
                            return (({ customFunction }) => {
                              return customFunction();
                            })?.apply(null, [actionArgs]);
                          })()
                        : undefined;
                      if (
                        $steps["runCode"] != null &&
                        typeof $steps["runCode"] === "object" &&
                        typeof $steps["runCode"].then === "function"
                      ) {
                        $steps["runCode"] = await $steps["runCode"];
                      }
                    }}
                  >
                    <Icon6Icon
                      className={classNames(projectcss.all, sty.svg__wlhgA)}
                      role={"img"}
                    />

                    <div
                      className={classNames(
                        projectcss.all,
                        projectcss.__wab_text,
                        sty.text___4BMg6
                      )}
                    >
                      {
                        "\u0645\u0627\u0634\u06cc\u0646 \u062d\u0633\u0627\u0628"
                      }
                    </div>
                  </div>
                </div>
                <div className={classNames(projectcss.all, sty.freeBox__w4DUt)}>
                  <div
                    data-plasmic-name={"lblUser"}
                    data-plasmic-override={overrides.lblUser}
                    className={classNames(
                      projectcss.all,
                      projectcss.__wab_text,
                      sty.lblUser
                    )}
                  >
                    <React.Fragment>
                      {(() => {
                        try {
                          return $state.txtUserName;
                        } catch (e) {
                          if (
                            e instanceof TypeError ||
                            e?.plasmicType === "PlasmicUndefinedDataError"
                          ) {
                            return "\u062d\u062c\u062a \u062e\u0648\u0627\u062c\u0648\u06cc";
                          }
                          throw e;
                        }
                      })()}
                    </React.Fragment>
                  </div>
                  <PlasmicLink__
                    className={classNames(
                      projectcss.all,
                      projectcss.a,
                      sty.link__b4SzU
                    )}
                    component={Link}
                    platform={"nextjs"}
                  >
                    {(() => {
                      try {
                        return $state.btnLoginShow;
                      } catch (e) {
                        if (
                          e instanceof TypeError ||
                          e?.plasmicType === "PlasmicUndefinedDataError"
                        ) {
                          return true;
                        }
                        throw e;
                      }
                    })() ? (
                      <Button
                        data-plasmic-name={"btnLogin"}
                        data-plasmic-override={overrides.btnLogin}
                        children2={
                          "\u0648\u0631\u0648\u062f \u0628\u0647 \u062d\u0633\u0627\u0628 \u06a9\u0627\u0631\u0628\u0631\u06cc"
                        }
                        className={classNames("__wab_instance", sty.btnLogin)}
                        link={
                          "https://www.paziresh24.com/login/?redirect_url=https://pricing.paziresh24.com/"
                        }
                        outline={true}
                      />
                    ) : null}
                  </PlasmicLink__>
                </div>
              </div>
            </Stack__>
            <section
              className={classNames(
                projectcss.all,
                sty.section__wtTOr,
                "menu_top"
              )}
            >
              <div className={classNames(projectcss.all, sty.freeBox__kQeHz)}>
                <Stack__
                  as={"div"}
                  data-plasmic-name={"btnReservation"}
                  data-plasmic-override={overrides.btnReservation}
                  hasGap={true}
                  className={classNames(
                    projectcss.all,
                    sty.btnReservation,
                    "grid_reservation"
                  )}
                  onClick={async event => {
                    const $steps = {};

                    $steps["runCode"] = true
                      ? (() => {
                          const actionArgs = {
                            customFunction: async () => {
                              return (() => {
                                return document
                                  .querySelector(".grid_reservation0")
                                  .scrollIntoView({ behavior: "smooth" });
                              })();
                            }
                          };
                          return (({ customFunction }) => {
                            return customFunction();
                          })?.apply(null, [actionArgs]);
                        })()
                      : undefined;
                    if (
                      $steps["runCode"] != null &&
                      typeof $steps["runCode"] === "object" &&
                      typeof $steps["runCode"].then === "function"
                    ) {
                      $steps["runCode"] = await $steps["runCode"];
                    }
                  }}
                >
                  <Icon3Icon
                    className={classNames(projectcss.all, sty.svg__oe24N)}
                    role={"img"}
                  />

                  <div
                    className={classNames(
                      projectcss.all,
                      projectcss.__wab_text,
                      sty.text__gDcpR
                    )}
                  >
                    {
                      "\u0646\u0648\u0628\u062a \u062f\u0647\u06cc \u067e\u0627\u06cc\u0647"
                    }
                  </div>
                </Stack__>
                <Stack__
                  as={"div"}
                  data-plasmic-name={"btnReservation3"}
                  data-plasmic-override={overrides.btnReservation3}
                  hasGap={true}
                  className={classNames(projectcss.all, sty.btnReservation3)}
                  onClick={async event => {
                    const $steps = {};

                    $steps["runCode"] = true
                      ? (() => {
                          const actionArgs = {
                            customFunction: async () => {
                              return (() => {
                                return document
                                  .querySelector(".grid_phonereservation")
                                  .scrollIntoView({ behavior: "smooth" });
                              })();
                            }
                          };
                          return (({ customFunction }) => {
                            return customFunction();
                          })?.apply(null, [actionArgs]);
                        })()
                      : undefined;
                    if (
                      $steps["runCode"] != null &&
                      typeof $steps["runCode"] === "object" &&
                      typeof $steps["runCode"].then === "function"
                    ) {
                      $steps["runCode"] = await $steps["runCode"];
                    }
                  }}
                >
                  <Icon4Icon
                    className={classNames(projectcss.all, sty.svg__hhs13)}
                    role={"img"}
                  />

                  <div
                    className={classNames(
                      projectcss.all,
                      projectcss.__wab_text,
                      sty.text___5VXzU
                    )}
                  >
                    {
                      "\u0646\u0648\u0628\u062a \u062f\u0647\u06cc \u062a\u0644\u0641\u0646\u06cc"
                    }
                  </div>
                </Stack__>
                <Stack__
                  as={"div"}
                  data-plasmic-name={"btnReservation2"}
                  data-plasmic-override={overrides.btnReservation2}
                  hasGap={true}
                  className={classNames(projectcss.all, sty.btnReservation2)}
                  onClick={async event => {
                    const $steps = {};

                    $steps["runCode"] = true
                      ? (() => {
                          const actionArgs = {
                            customFunction: async () => {
                              return (() => {
                                return document
                                  .querySelector(".grid_kiosk")
                                  .scrollIntoView({ behavior: "smooth" });
                              })();
                            }
                          };
                          return (({ customFunction }) => {
                            return customFunction();
                          })?.apply(null, [actionArgs]);
                        })()
                      : undefined;
                    if (
                      $steps["runCode"] != null &&
                      typeof $steps["runCode"] === "object" &&
                      typeof $steps["runCode"].then === "function"
                    ) {
                      $steps["runCode"] = await $steps["runCode"];
                    }
                  }}
                >
                  <Icon15Icon
                    className={classNames(projectcss.all, sty.svg___0V4Cq)}
                    role={"img"}
                  />

                  <div
                    className={classNames(
                      projectcss.all,
                      projectcss.__wab_text,
                      sty.text__qCfl
                    )}
                  >
                    {
                      "\u0635\u0641 \u0648 \u0641\u0631\u0627\u062e\u0648\u0627\u0646 "
                    }
                  </div>
                </Stack__>
                <Stack__
                  as={"div"}
                  data-plasmic-name={"btnAnnouncement"}
                  data-plasmic-override={overrides.btnAnnouncement}
                  hasGap={true}
                  className={classNames(projectcss.all, sty.btnAnnouncement)}
                  onClick={async event => {
                    const $steps = {};

                    $steps["runCode"] = true
                      ? (() => {
                          const actionArgs = {
                            customFunction: async () => {
                              return (() => {
                                return document
                                  .querySelector(".grid_announcement")
                                  .scrollIntoView({ behavior: "smooth" });
                              })();
                            }
                          };
                          return (({ customFunction }) => {
                            return customFunction();
                          })?.apply(null, [actionArgs]);
                        })()
                      : undefined;
                    if (
                      $steps["runCode"] != null &&
                      typeof $steps["runCode"] === "object" &&
                      typeof $steps["runCode"].then === "function"
                    ) {
                      $steps["runCode"] = await $steps["runCode"];
                    }
                  }}
                >
                  <Icon5Icon
                    className={classNames(projectcss.all, sty.svg__klDLi)}
                    role={"img"}
                  />

                  <div
                    className={classNames(
                      projectcss.all,
                      projectcss.__wab_text,
                      sty.text___3UtJs
                    )}
                  >
                    {"\u0627\u0639\u0644\u0627\u0646\u0627\u062a"}
                  </div>
                </Stack__>
                <Stack__
                  as={"div"}
                  data-plasmic-name={"btnCalculation"}
                  data-plasmic-override={overrides.btnCalculation}
                  hasGap={true}
                  className={classNames(projectcss.all, sty.btnCalculation)}
                  onClick={async event => {
                    const $steps = {};

                    $steps["runCode"] = true
                      ? (() => {
                          const actionArgs = {
                            customFunction: async () => {
                              return (() => {
                                return document
                                  .querySelector(".grid_calculation")
                                  .scrollIntoView({ behavior: "smooth" });
                              })();
                            }
                          };
                          return (({ customFunction }) => {
                            return customFunction();
                          })?.apply(null, [actionArgs]);
                        })()
                      : undefined;
                    if (
                      $steps["runCode"] != null &&
                      typeof $steps["runCode"] === "object" &&
                      typeof $steps["runCode"].then === "function"
                    ) {
                      $steps["runCode"] = await $steps["runCode"];
                    }
                  }}
                >
                  <Icon6Icon
                    className={classNames(projectcss.all, sty.svg__erDi)}
                    role={"img"}
                  />

                  <div
                    className={classNames(
                      projectcss.all,
                      projectcss.__wab_text,
                      sty.text__lXhUl
                    )}
                  >
                    {"\u0645\u062d\u0627\u0633\u0628\u0627\u062a"}
                  </div>
                </Stack__>
                <div
                  data-plasmic-name={"btnOnlinepayment"}
                  data-plasmic-override={overrides.btnOnlinepayment}
                  className={classNames(projectcss.all, sty.btnOnlinepayment)}
                  onClick={async event => {
                    const $steps = {};

                    $steps["runCode"] = true
                      ? (() => {
                          const actionArgs = {
                            customFunction: async () => {
                              return (() => {
                                return document
                                  .querySelector(".grid_onlinepayment")
                                  .scrollIntoView({ behavior: "smooth" });
                              })();
                            }
                          };
                          return (({ customFunction }) => {
                            return customFunction();
                          })?.apply(null, [actionArgs]);
                        })()
                      : undefined;
                    if (
                      $steps["runCode"] != null &&
                      typeof $steps["runCode"] === "object" &&
                      typeof $steps["runCode"].then === "function"
                    ) {
                      $steps["runCode"] = await $steps["runCode"];
                    }
                  }}
                >
                  <Icon7Icon
                    className={classNames(projectcss.all, sty.svg___575U)}
                    role={"img"}
                  />

                  <div
                    className={classNames(
                      projectcss.all,
                      projectcss.__wab_text,
                      sty.text__zMPa
                    )}
                  >
                    {
                      "\u067e\u0631\u062f\u0627\u062e\u062a \u0622\u0646\u0644\u0627\u06cc\u0646"
                    }
                  </div>
                </div>
                <Stack__
                  as={"div"}
                  data-plasmic-name={"btnApi"}
                  data-plasmic-override={overrides.btnApi}
                  hasGap={true}
                  className={classNames(projectcss.all, sty.btnApi)}
                  onClick={async event => {
                    const $steps = {};

                    $steps["runCode"] = true
                      ? (() => {
                          const actionArgs = {
                            customFunction: async () => {
                              return (() => {
                                return document
                                  .querySelector(".grid_api")
                                  .scrollIntoView({ behavior: "smooth" });
                              })();
                            }
                          };
                          return (({ customFunction }) => {
                            return customFunction();
                          })?.apply(null, [actionArgs]);
                        })()
                      : undefined;
                    if (
                      $steps["runCode"] != null &&
                      typeof $steps["runCode"] === "object" &&
                      typeof $steps["runCode"].then === "function"
                    ) {
                      $steps["runCode"] = await $steps["runCode"];
                    }
                  }}
                >
                  <Icon8Icon
                    className={classNames(projectcss.all, sty.svg___1PipE)}
                    role={"img"}
                  />

                  <div
                    className={classNames(
                      projectcss.all,
                      projectcss.__wab_text,
                      sty.text__iAgvm
                    )}
                  >
                    {
                      "\u0627\u0631\u062a\u0628\u0627\u0637 \u0628\u0627 \u0633\u0627\u06cc\u0631 \u0646\u0631\u0645 \u0627\u0641\u0632\u0627\u0631 \u0647\u0627"
                    }
                  </div>
                </Stack__>
                <Stack__
                  as={"div"}
                  data-plasmic-name={"btnEhr"}
                  data-plasmic-override={overrides.btnEhr}
                  hasGap={true}
                  className={classNames(projectcss.all, sty.btnEhr)}
                  onClick={async event => {
                    const $steps = {};

                    $steps["runCode"] = true
                      ? (() => {
                          const actionArgs = {
                            customFunction: async () => {
                              return (() => {
                                return document
                                  .querySelector(".grid_ehr")
                                  .scrollIntoView({ behavior: "smooth" });
                              })();
                            }
                          };
                          return (({ customFunction }) => {
                            return customFunction();
                          })?.apply(null, [actionArgs]);
                        })()
                      : undefined;
                    if (
                      $steps["runCode"] != null &&
                      typeof $steps["runCode"] === "object" &&
                      typeof $steps["runCode"].then === "function"
                    ) {
                      $steps["runCode"] = await $steps["runCode"];
                    }
                  }}
                >
                  <Icon9Icon
                    className={classNames(projectcss.all, sty.svg__j4W6K)}
                    role={"img"}
                  />

                  <div
                    className={classNames(
                      projectcss.all,
                      projectcss.__wab_text,
                      sty.text__nU9TK
                    )}
                  >
                    {
                      "\u067e\u0631\u0648\u0646\u062f\u0647 \u0628\u06cc\u0645\u0627\u0631"
                    }
                  </div>
                </Stack__>
                <Stack__
                  as={"div"}
                  data-plasmic-name={"btnSpecialsite"}
                  data-plasmic-override={overrides.btnSpecialsite}
                  hasGap={true}
                  className={classNames(projectcss.all, sty.btnSpecialsite)}
                  onClick={async event => {
                    const $steps = {};

                    $steps["runCode"] = true
                      ? (() => {
                          const actionArgs = {
                            customFunction: async () => {
                              return (() => {
                                return document
                                  .querySelector(".grid_specialsite")
                                  .scrollIntoView({ behavior: "smooth" });
                              })();
                            }
                          };
                          return (({ customFunction }) => {
                            return customFunction();
                          })?.apply(null, [actionArgs]);
                        })()
                      : undefined;
                    if (
                      $steps["runCode"] != null &&
                      typeof $steps["runCode"] === "object" &&
                      typeof $steps["runCode"].then === "function"
                    ) {
                      $steps["runCode"] = await $steps["runCode"];
                    }
                  }}
                >
                  <Icon12Icon
                    className={classNames(projectcss.all, sty.svg__wtosz)}
                    role={"img"}
                  />

                  <div
                    className={classNames(
                      projectcss.all,
                      projectcss.__wab_text,
                      sty.text___9P8M
                    )}
                  >
                    {
                      "\u0633\u0627\u06cc\u062a \u0627\u062e\u062a\u0635\u0627\u0635\u06cc"
                    }
                  </div>
                </Stack__>
                <Stack__
                  as={"div"}
                  data-plasmic-name={"btnSpecialsite2"}
                  data-plasmic-override={overrides.btnSpecialsite2}
                  hasGap={true}
                  className={classNames(projectcss.all, sty.btnSpecialsite2)}
                  onClick={async event => {
                    const $steps = {};

                    $steps["runCode"] = true
                      ? (() => {
                          const actionArgs = {
                            customFunction: async () => {
                              return (() => {
                                return document
                                  .querySelector(".grid_referral")
                                  .scrollIntoView({ behavior: "smooth" });
                              })();
                            }
                          };
                          return (({ customFunction }) => {
                            return customFunction();
                          })?.apply(null, [actionArgs]);
                        })()
                      : undefined;
                    if (
                      $steps["runCode"] != null &&
                      typeof $steps["runCode"] === "object" &&
                      typeof $steps["runCode"].then === "function"
                    ) {
                      $steps["runCode"] = await $steps["runCode"];
                    }
                  }}
                >
                  <Icon16Icon
                    className={classNames(projectcss.all, sty.svg__eKrUb)}
                    role={"img"}
                  />

                  <div
                    className={classNames(
                      projectcss.all,
                      projectcss.__wab_text,
                      sty.text__ximKh
                    )}
                  >
                    {"\u0646\u0638\u0627\u0645 \u0627\u0631\u062c\u0627\u0639"}
                  </div>
                </Stack__>
                <Stack__
                  as={"div"}
                  data-plasmic-name={"btnDashboard"}
                  data-plasmic-override={overrides.btnDashboard}
                  hasGap={true}
                  className={classNames(projectcss.all, sty.btnDashboard)}
                  onClick={async event => {
                    const $steps = {};

                    $steps["runCode"] = true
                      ? (() => {
                          const actionArgs = {
                            customFunction: async () => {
                              return (() => {
                                return document
                                  .querySelector(".grid_dashboard")
                                  .scrollIntoView({ behavior: "smooth" });
                              })();
                            }
                          };
                          return (({ customFunction }) => {
                            return customFunction();
                          })?.apply(null, [actionArgs]);
                        })()
                      : undefined;
                    if (
                      $steps["runCode"] != null &&
                      typeof $steps["runCode"] === "object" &&
                      typeof $steps["runCode"].then === "function"
                    ) {
                      $steps["runCode"] = await $steps["runCode"];
                    }
                  }}
                >
                  <Icon10Icon
                    className={classNames(projectcss.all, sty.svg__rNnIv)}
                    role={"img"}
                  />

                  <div
                    className={classNames(
                      projectcss.all,
                      projectcss.__wab_text,
                      sty.text__baG59
                    )}
                  >
                    {hasVariant(globalVariants, "screen", "mobileOnly")
                      ? "\u062f\u0627\u0634\u0628\u0648\u0631\u062f \u0645\u062f\u06cc\u0631\u06cc\u062a\u06cc"
                      : "\u062f\u0627\u0634\u0628\u0648\u0631\u062f \u0645\u062f\u06cc\u0631\u06cc\u062a\u06cc"}
                  </div>
                </Stack__>
              </div>
            </section>
            <section className={classNames(projectcss.all, sty.section__sTanX)}>
              {(() => {
                try {
                  return $state.clCalculatorStatus;
                } catch (e) {
                  if (
                    e instanceof TypeError ||
                    e?.plasmicType === "PlasmicUndefinedDataError"
                  ) {
                    return true;
                  }
                  throw e;
                }
              })() ? (
                <div
                  data-plasmic-name={"gridCalculator"}
                  data-plasmic-override={overrides.gridCalculator}
                  className={classNames(projectcss.all, sty.gridCalculator)}
                >
                  {(() => {
                    try {
                      return $state.clCalculatorStatus;
                    } catch (e) {
                      if (
                        e instanceof TypeError ||
                        e?.plasmicType === "PlasmicUndefinedDataError"
                      ) {
                        return true;
                      }
                      throw e;
                    }
                  })() ? (
                    <div
                      className={classNames(
                        projectcss.all,
                        sty.freeBox___6LVp,
                        "grid_calculator"
                      )}
                    >
                      <div
                        className={classNames(
                          projectcss.all,
                          sty.freeBox___2UrIs
                        )}
                      >
                        <h2
                          className={classNames(
                            projectcss.all,
                            projectcss.h2,
                            projectcss.__wab_text,
                            sty.h2__fmAKb
                          )}
                        >
                          {
                            "\u0645\u0627\u0634\u06cc\u0646 \u062d\u0633\u0627\u0628 \u0645\u062d\u0635\u0648\u0644\u0627\u062a"
                          }
                        </h2>
                      </div>
                      <div
                        className={classNames(
                          projectcss.all,
                          projectcss.__wab_text,
                          sty.text__yUf3P
                        )}
                      >
                        {
                          "\u0634\u06cc\u0648\u0647 \u0642\u06cc\u0645\u062a \u06af\u0630\u0627\u0631\u06cc \u0645\u062d\u0635\u0648\u0644\u0627\u062a \u0628\u0647 \u0627\u0632\u0627\u06cc \u062a\u0639\u062f\u0627\u062f \u0646\u0648\u0628\u062a \u0647\u0627 \u062f\u0631 \u0645\u0627\u0647 \u0645\u06cc \u0628\u0627\u0634\u062f. \u062f\u0631 \u0646\u0638\u0631 \u062f\u0627\u0634\u062a\u0647 \u0628\u0627\u0634\u06cc\u062f \u062d\u062f\u0627\u0642\u0644 \u062a\u0639\u062f\u0627\u062f \u0646\u0648\u0628\u062a \u0647\u0627 1.000 \u0639\u062f\u062f \u0648 \u0628\u06cc\u0634 \u0627\u0632 10.000\u0639\u062f\u062f \u0634\u0627\u0645\u0644 \u062a\u062e\u0641\u06cc\u0641 \u062e\u0648\u0627\u0647\u062f \u0628\u0648\u062f."
                        }
                      </div>
                      <div
                        className={classNames(
                          projectcss.all,
                          sty.freeBox__xNvEz
                        )}
                      >
                        <div
                          className={classNames(
                            projectcss.all,
                            sty.freeBox__rHtRv
                          )}
                          dir={"rtl"}
                        >
                          <Stack__
                            as={"div"}
                            hasGap={true}
                            className={classNames(
                              projectcss.all,
                              sty.freeBox__gnoMt
                            )}
                          >
                            <div
                              className={classNames(
                                projectcss.all,
                                projectcss.__wab_text,
                                sty.text___8Qi4Y
                              )}
                            >
                              {
                                "\u062a\u0639\u062f\u0627\u062f \u0646\u0648\u0628\u062a:"
                              }
                            </div>
                            <Stack__
                              as={"div"}
                              hasGap={true}
                              className={classNames(
                                projectcss.all,
                                sty.freeBox__pn3Fo
                              )}
                            >
                              <Slider
                                data-plasmic-name={"fragmentSlider"}
                                data-plasmic-override={overrides.fragmentSlider}
                                className={classNames(
                                  "__wab_instance",
                                  sty.fragmentSlider
                                )}
                                disabled={false}
                                max={10000}
                                min={1000}
                                onChange={generateStateOnChangeProp($state, [
                                  "fragmentSlider",
                                  "value"
                                ])}
                                step={50}
                                value={generateStateValueProp($state, [
                                  "fragmentSlider",
                                  "value"
                                ])}
                              />

                              <div
                                className={classNames(
                                  projectcss.all,
                                  sty.freeBox__qgpOl
                                )}
                              >
                                <div
                                  className={classNames(
                                    projectcss.all,
                                    projectcss.__wab_text,
                                    sty.text___0PYUf
                                  )}
                                >
                                  {
                                    "\u062d\u062f\u0627\u0642\u0644 \u06f1,\u06f0\u06f0\u06f0"
                                  }
                                </div>
                                <div
                                  className={classNames(
                                    projectcss.all,
                                    projectcss.__wab_text,
                                    sty.text__zz6UJ
                                  )}
                                >
                                  {"+ \u06f1\u06f0,\u06f0\u06f0\u06f0"}
                                </div>
                              </div>
                            </Stack__>
                            <div
                              className={classNames(
                                projectcss.all,
                                sty.freeBox__zbDJc
                              )}
                            >
                              <div
                                className={classNames(
                                  projectcss.all,
                                  projectcss.__wab_text,
                                  sty.text__oE9VP
                                )}
                              >
                                <React.Fragment>
                                  {(() => {
                                    try {
                                      return (
                                        $state.fragmentSlider.value
                                          .toString()
                                          .replace(
                                            /\B(?=(\d{3})+(?!\d))/g,
                                            ","
                                          ) + " نوبت"
                                      );
                                    } catch (e) {
                                      if (
                                        e instanceof TypeError ||
                                        e?.plasmicType ===
                                          "PlasmicUndefinedDataError"
                                      ) {
                                        return "";
                                      }
                                      throw e;
                                    }
                                  })()}
                                </React.Fragment>
                              </div>
                              <TextInput
                                data-plasmic-name={"txtResevationCount"}
                                data-plasmic-override={
                                  overrides.txtResevationCount
                                }
                                className={classNames(
                                  "__wab_instance",
                                  sty.txtResevationCount
                                )}
                                isDisabled={true}
                                onChange={(...eventArgs) => {
                                  generateStateOnChangeProp($state, [
                                    "txtResevationCount",
                                    "value"
                                  ])(
                                    (e => e.target?.value).apply(
                                      null,
                                      eventArgs
                                    )
                                  );
                                }}
                                placeholder={
                                  "\u062a\u0639\u062f\u0627\u062f \u0646\u0648\u0628\u062a"
                                }
                                type={"hidden"}
                                value={
                                  generateStateValueProp($state, [
                                    "txtResevationCount",
                                    "value"
                                  ]) ?? ""
                                }
                              />
                            </div>
                          </Stack__>
                        </div>
                      </div>
                      <div
                        className={classNames(
                          projectcss.all,
                          sty.freeBox__waSp
                        )}
                      >
                        <div
                          className={classNames(
                            projectcss.all,
                            sty.freeBox__rzAu3
                          )}
                        >
                          <div
                            className={classNames(
                              projectcss.all,
                              projectcss.__wab_text,
                              sty.text__sGrp
                            )}
                          >
                            {"\u0639\u0646\u0648\u0627\u0646"}
                          </div>
                        </div>
                        <div
                          className={classNames(
                            projectcss.all,
                            sty.freeBox___7W9B
                          )}
                        >
                          <div
                            className={classNames(
                              projectcss.all,
                              projectcss.__wab_text,
                              sty.text__mNsbb
                            )}
                          >
                            {
                              "\u062a\u0639\u0631\u0641\u0647 \u0647\u0631 \u0646\u0648\u0628\u062a (\u062a\u0648\u0645\u0627\u0646)"
                            }
                          </div>
                        </div>
                        <div
                          className={classNames(
                            projectcss.all,
                            sty.freeBox__z2JNu
                          )}
                        >
                          <div
                            className={classNames(
                              projectcss.all,
                              projectcss.__wab_text,
                              sty.text__hkUm
                            )}
                          >
                            {"\u062c\u0645\u0639"}
                          </div>
                        </div>
                      </div>
                      <div
                        className={classNames(
                          projectcss.all,
                          sty.freeBox__wX9TB
                        )}
                      >
                        <div
                          className={classNames(
                            projectcss.all,
                            sty.freeBox__an2Xd
                          )}
                          dir={"rtl"}
                        >
                          <div
                            className={classNames(
                              projectcss.all,
                              sty.freeBox__n0Ja
                            )}
                          >
                            <Checkbox
                              data-plasmic-name={"reservationCheck"}
                              data-plasmic-override={overrides.reservationCheck}
                              className={classNames(
                                "__wab_instance",
                                sty.reservationCheck
                              )}
                              isChecked={
                                generateStateValueProp($state, [
                                  "reservationCheck",
                                  "isChecked"
                                ]) ?? false
                              }
                              isDisabled={true}
                              onChange={(...eventArgs) => {
                                generateStateOnChangeProp($state, [
                                  "reservationCheck",
                                  "isChecked"
                                ])(eventArgs[0]);
                              }}
                            >
                              <div
                                className={classNames(
                                  projectcss.all,
                                  projectcss.__wab_text,
                                  sty.text__l7SdE
                                )}
                              >
                                {
                                  "\u0645\u0627\u0698\u0648\u0644 \u0646\u0648\u0628\u062a \u062f\u0647\u06cc \u067e\u0627\u06cc\u0647 (\u0627\u0644\u0632\u0627\u0645\u06cc)"
                                }
                              </div>
                              <div
                                className={classNames(
                                  projectcss.all,
                                  projectcss.__wab_text,
                                  sty.text__mljSs
                                )}
                              >
                                {""}
                              </div>
                            </Checkbox>
                          </div>
                        </div>
                        <div
                          className={classNames(
                            projectcss.all,
                            sty.freeBox__grh2Y
                          )}
                          dir={"rtl"}
                        >
                          <div
                            className={classNames(
                              projectcss.all,
                              projectcss.__wab_text,
                              sty.text__wxOEm
                            )}
                          >
                            <React.Fragment>
                              {(() => {
                                try {
                                  return $state.reservationInternetPrice
                                    .toString()
                                    .replace(/\B(?=(\d{3})+(?!\d))/g, ",");
                                } catch (e) {
                                  if (
                                    e instanceof TypeError ||
                                    e?.plasmicType ===
                                      "PlasmicUndefinedDataError"
                                  ) {
                                    return "0";
                                  }
                                  throw e;
                                }
                              })()}
                            </React.Fragment>
                          </div>
                        </div>
                        <div
                          className={classNames(
                            projectcss.all,
                            sty.freeBox___7U4Sl
                          )}
                        >
                          <div
                            data-plasmic-name={"txtReservationInternetResult"}
                            data-plasmic-override={
                              overrides.txtReservationInternetResult
                            }
                            className={classNames(
                              projectcss.all,
                              projectcss.__wab_text,
                              sty.txtReservationInternetResult
                            )}
                          >
                            <React.Fragment>
                              {(() => {
                                try {
                                  return $state.reservationInternetResult
                                    .toString()
                                    .replace(/\B(?=(\d{3})+(?!\d))/g, ",");
                                } catch (e) {
                                  if (
                                    e instanceof TypeError ||
                                    e?.plasmicType ===
                                      "PlasmicUndefinedDataError"
                                  ) {
                                    return "0";
                                  }
                                  throw e;
                                }
                              })()}
                            </React.Fragment>
                          </div>
                        </div>
                      </div>
                      <div
                        className={classNames(
                          projectcss.all,
                          sty.freeBox__yfMB
                        )}
                      >
                        <div
                          className={classNames(
                            projectcss.all,
                            sty.freeBox___81XZh
                          )}
                          dir={"rtl"}
                        >
                          <div
                            className={classNames(
                              projectcss.all,
                              sty.freeBox__brM2A
                            )}
                          >
                            <Checkbox
                              data-plasmic-name={"reservationPhoneCheck"}
                              data-plasmic-override={
                                overrides.reservationPhoneCheck
                              }
                              className={classNames(
                                "__wab_instance",
                                sty.reservationPhoneCheck
                              )}
                              isChecked={
                                generateStateValueProp($state, [
                                  "reservationPhoneCheck",
                                  "isChecked"
                                ]) ?? false
                              }
                              onChange={(...eventArgs) => {
                                generateStateOnChangeProp($state, [
                                  "reservationPhoneCheck",
                                  "isChecked"
                                ])(eventArgs[0]);
                              }}
                            >
                              <div
                                className={classNames(
                                  projectcss.all,
                                  projectcss.__wab_text,
                                  sty.text__gxjEp
                                )}
                              >
                                {
                                  "\u0645\u0627\u0698\u0648\u0644 \u0646\u0648\u0628\u062a \u062f\u0647\u06cc \u062a\u0644\u0641\u0646\u06cc"
                                }
                              </div>
                              <div
                                className={classNames(
                                  projectcss.all,
                                  projectcss.__wab_text,
                                  sty.text__c4DKq
                                )}
                              >
                                {""}
                              </div>
                            </Checkbox>
                          </div>
                        </div>
                        <div
                          className={classNames(
                            projectcss.all,
                            sty.freeBox__lYlc3
                          )}
                        >
                          <div
                            className={classNames(
                              projectcss.all,
                              projectcss.__wab_text,
                              sty.text__nPz5Y
                            )}
                          >
                            <React.Fragment>
                              {(() => {
                                try {
                                  return $state.reservationPhonePrice
                                    .toString()
                                    .replace(/\B(?=(\d{3})+(?!\d))/g, ",");
                                } catch (e) {
                                  if (
                                    e instanceof TypeError ||
                                    e?.plasmicType ===
                                      "PlasmicUndefinedDataError"
                                  ) {
                                    return "\u062a\u0639\u0631\u0641\u0647";
                                  }
                                  throw e;
                                }
                              })()}
                            </React.Fragment>
                          </div>
                        </div>
                        <div
                          className={classNames(
                            projectcss.all,
                            sty.freeBox___4OZzs
                          )}
                          dir={"rtl"}
                        >
                          <div
                            data-plasmic-name={"txtReservationPhoneResult"}
                            data-plasmic-override={
                              overrides.txtReservationPhoneResult
                            }
                            className={classNames(
                              projectcss.all,
                              projectcss.__wab_text,
                              sty.txtReservationPhoneResult
                            )}
                          >
                            <React.Fragment>
                              {(() => {
                                try {
                                  return $state.reservsationPhoneResult
                                    .toString()
                                    .replace(/\B(?=(\d{3})+(?!\d))/g, ",");
                                } catch (e) {
                                  if (
                                    e instanceof TypeError ||
                                    e?.plasmicType ===
                                      "PlasmicUndefinedDataError"
                                  ) {
                                    return "";
                                  }
                                  throw e;
                                }
                              })()}
                            </React.Fragment>
                          </div>
                        </div>
                      </div>
                      <div
                        className={classNames(
                          projectcss.all,
                          sty.freeBox__cSq4C
                        )}
                      >
                        <div
                          className={classNames(
                            projectcss.all,
                            sty.freeBox___83JL
                          )}
                          dir={"rtl"}
                        >
                          <div
                            className={classNames(
                              projectcss.all,
                              sty.freeBox__wTwi4
                            )}
                          >
                            <Checkbox
                              data-plasmic-name={"kioskResevationCheck"}
                              data-plasmic-override={
                                overrides.kioskResevationCheck
                              }
                              className={classNames(
                                "__wab_instance",
                                sty.kioskResevationCheck
                              )}
                              isChecked={
                                generateStateValueProp($state, [
                                  "kioskResevationCheck",
                                  "isChecked"
                                ]) ?? false
                              }
                              onChange={(...eventArgs) => {
                                generateStateOnChangeProp($state, [
                                  "kioskResevationCheck",
                                  "isChecked"
                                ])(eventArgs[0]);
                              }}
                            >
                              <div
                                className={classNames(
                                  projectcss.all,
                                  projectcss.__wab_text,
                                  sty.text__xstgH
                                )}
                              >
                                {
                                  "\u0645\u062f\u06cc\u0631\u06cc\u062a \u0635\u0641 \u0648 \u0641\u0631\u0627\u062e\u0648\u0627\u0646"
                                }
                              </div>
                              <div
                                className={classNames(
                                  projectcss.all,
                                  projectcss.__wab_text,
                                  sty.text__qHBw
                                )}
                              >
                                {""}
                              </div>
                            </Checkbox>
                          </div>
                        </div>
                        <div
                          className={classNames(
                            projectcss.all,
                            sty.freeBox__bzk26
                          )}
                        >
                          <div
                            className={classNames(
                              projectcss.all,
                              projectcss.__wab_text,
                              sty.text__bMZL
                            )}
                          >
                            <React.Fragment>
                              {(() => {
                                try {
                                  return $state.reservationKioskPrice
                                    .toString()
                                    .replace(/\B(?=(\d{3})+(?!\d))/g, ",");
                                } catch (e) {
                                  if (
                                    e instanceof TypeError ||
                                    e?.plasmicType ===
                                      "PlasmicUndefinedDataError"
                                  ) {
                                    return "\u062a\u0639\u0631\u0641\u0647";
                                  }
                                  throw e;
                                }
                              })()}
                            </React.Fragment>
                          </div>
                        </div>
                        <div
                          className={classNames(
                            projectcss.all,
                            sty.freeBox__sqHf9
                          )}
                          dir={"rtl"}
                        >
                          <div
                            data-plasmic-name={"txtReservationKioskResult"}
                            data-plasmic-override={
                              overrides.txtReservationKioskResult
                            }
                            className={classNames(
                              projectcss.all,
                              projectcss.__wab_text,
                              sty.txtReservationKioskResult
                            )}
                          >
                            <React.Fragment>
                              {(() => {
                                try {
                                  return $state.reservationKioskResult
                                    .toString()
                                    .replace(/\B(?=(\d{3})+(?!\d))/g, ",");
                                } catch (e) {
                                  if (
                                    e instanceof TypeError ||
                                    e?.plasmicType ===
                                      "PlasmicUndefinedDataError"
                                  ) {
                                    return "";
                                  }
                                  throw e;
                                }
                              })()}
                            </React.Fragment>
                          </div>
                        </div>
                      </div>
                      <div
                        className={classNames(
                          projectcss.all,
                          sty.freeBox__ypsB0
                        )}
                      >
                        <div
                          className={classNames(
                            projectcss.all,
                            sty.freeBox__qMtKh
                          )}
                          dir={"rtl"}
                        >
                          <div
                            className={classNames(
                              projectcss.all,
                              sty.freeBox__niAi
                            )}
                          >
                            <Checkbox
                              data-plasmic-name={"announcementCheck"}
                              data-plasmic-override={
                                overrides.announcementCheck
                              }
                              className={classNames(
                                "__wab_instance",
                                sty.announcementCheck
                              )}
                              isChecked={
                                generateStateValueProp($state, [
                                  "announcementCheck",
                                  "isChecked"
                                ]) ?? false
                              }
                              onChange={(...eventArgs) => {
                                generateStateOnChangeProp($state, [
                                  "announcementCheck",
                                  "isChecked"
                                ])(eventArgs[0]);
                              }}
                            >
                              <div
                                className={classNames(
                                  projectcss.all,
                                  projectcss.__wab_text,
                                  sty.text__j84I
                                )}
                              >
                                {
                                  "\u0645\u0627\u0698\u0648\u0644 \u0627\u0639\u0644\u0627\u0646\u0627\u062a"
                                }
                              </div>
                              <div
                                className={classNames(
                                  projectcss.all,
                                  projectcss.__wab_text,
                                  sty.text___82H0Z
                                )}
                              >
                                {""}
                              </div>
                            </Checkbox>
                          </div>
                        </div>
                        <div
                          className={classNames(
                            projectcss.all,
                            sty.freeBox__sjGz
                          )}
                        >
                          <div
                            className={classNames(
                              projectcss.all,
                              projectcss.__wab_text,
                              sty.text__el3ZR
                            )}
                          >
                            <React.Fragment>
                              {(() => {
                                try {
                                  return $state.announcementPrice
                                    .toString()
                                    .replace(/\B(?=(\d{3})+(?!\d))/g, ",");
                                } catch (e) {
                                  if (
                                    e instanceof TypeError ||
                                    e?.plasmicType ===
                                      "PlasmicUndefinedDataError"
                                  ) {
                                    return "\u062a\u0639\u0631\u0641\u0647";
                                  }
                                  throw e;
                                }
                              })()}
                            </React.Fragment>
                          </div>
                        </div>
                        <div
                          className={classNames(
                            projectcss.all,
                            sty.freeBox__utNh
                          )}
                          dir={"rtl"}
                        >
                          <div
                            data-plasmic-name={"txtAnnouncementResult"}
                            data-plasmic-override={
                              overrides.txtAnnouncementResult
                            }
                            className={classNames(
                              projectcss.all,
                              projectcss.__wab_text,
                              sty.txtAnnouncementResult
                            )}
                          >
                            <React.Fragment>
                              {(() => {
                                try {
                                  return $state.announcementResult
                                    .toString()
                                    .replace(/\B(?=(\d{3})+(?!\d))/g, ",");
                                } catch (e) {
                                  if (
                                    e instanceof TypeError ||
                                    e?.plasmicType ===
                                      "PlasmicUndefinedDataError"
                                  ) {
                                    return "";
                                  }
                                  throw e;
                                }
                              })()}
                            </React.Fragment>
                          </div>
                        </div>
                      </div>
                      <div
                        className={classNames(
                          projectcss.all,
                          sty.freeBox__a44Iy
                        )}
                      >
                        <div
                          className={classNames(
                            projectcss.all,
                            sty.freeBox__zJYbx
                          )}
                          dir={"rtl"}
                        >
                          <div
                            className={classNames(
                              projectcss.all,
                              sty.freeBox__aqPAj
                            )}
                          >
                            <Checkbox
                              data-plasmic-name={"calculationCheck"}
                              data-plasmic-override={overrides.calculationCheck}
                              className={classNames(
                                "__wab_instance",
                                sty.calculationCheck
                              )}
                              isChecked={
                                generateStateValueProp($state, [
                                  "calculationCheck",
                                  "isChecked"
                                ]) ?? false
                              }
                              onChange={(...eventArgs) => {
                                generateStateOnChangeProp($state, [
                                  "calculationCheck",
                                  "isChecked"
                                ])(eventArgs[0]);
                              }}
                            >
                              <div
                                className={classNames(
                                  projectcss.all,
                                  projectcss.__wab_text,
                                  sty.text__xiDui
                                )}
                              >
                                {
                                  "\u0645\u0627\u0698\u0648\u0644 \u0645\u062d\u0627\u0633\u0628\u0627\u062a"
                                }
                              </div>
                              <div
                                className={classNames(
                                  projectcss.all,
                                  projectcss.__wab_text,
                                  sty.text__af52S
                                )}
                              >
                                {""}
                              </div>
                            </Checkbox>
                          </div>
                        </div>
                        <div
                          className={classNames(
                            projectcss.all,
                            sty.freeBox__onh2V
                          )}
                        >
                          <div
                            className={classNames(
                              projectcss.all,
                              projectcss.__wab_text,
                              sty.text__fKaUx
                            )}
                          >
                            <React.Fragment>
                              {(() => {
                                try {
                                  return $state.calculationPrice
                                    .toString()
                                    .replace(/\B(?=(\d{3})+(?!\d))/g, ",");
                                } catch (e) {
                                  if (
                                    e instanceof TypeError ||
                                    e?.plasmicType ===
                                      "PlasmicUndefinedDataError"
                                  ) {
                                    return "\u062a\u0639\u0631\u0641\u0647";
                                  }
                                  throw e;
                                }
                              })()}
                            </React.Fragment>
                          </div>
                        </div>
                        <div
                          className={classNames(
                            projectcss.all,
                            sty.freeBox__eBe7H
                          )}
                          dir={"rtl"}
                        >
                          <div
                            data-plasmic-name={"txtCalculationResult"}
                            data-plasmic-override={
                              overrides.txtCalculationResult
                            }
                            className={classNames(
                              projectcss.all,
                              projectcss.__wab_text,
                              sty.txtCalculationResult
                            )}
                          >
                            <React.Fragment>
                              {(() => {
                                try {
                                  return $state.calculationResult
                                    .toString()
                                    .replace(/\B(?=(\d{3})+(?!\d))/g, ",");
                                } catch (e) {
                                  if (
                                    e instanceof TypeError ||
                                    e?.plasmicType ===
                                      "PlasmicUndefinedDataError"
                                  ) {
                                    return "";
                                  }
                                  throw e;
                                }
                              })()}
                            </React.Fragment>
                          </div>
                        </div>
                      </div>
                      <div
                        className={classNames(
                          projectcss.all,
                          sty.freeBox__vstLs
                        )}
                      >
                        <div
                          className={classNames(
                            projectcss.all,
                            sty.freeBox__cHbRg
                          )}
                          dir={"rtl"}
                        >
                          <div
                            className={classNames(
                              projectcss.all,
                              sty.freeBox__cGbx3
                            )}
                          >
                            <Checkbox
                              data-plasmic-name={"onlinepaymentCheck"}
                              data-plasmic-override={
                                overrides.onlinepaymentCheck
                              }
                              className={classNames(
                                "__wab_instance",
                                sty.onlinepaymentCheck
                              )}
                              isChecked={
                                generateStateValueProp($state, [
                                  "onlinepaymentCheck",
                                  "isChecked"
                                ]) ?? false
                              }
                              onChange={(...eventArgs) => {
                                generateStateOnChangeProp($state, [
                                  "onlinepaymentCheck",
                                  "isChecked"
                                ])(eventArgs[0]);
                              }}
                            >
                              <div
                                className={classNames(
                                  projectcss.all,
                                  projectcss.__wab_text,
                                  sty.text__mFmSg
                                )}
                              >
                                {
                                  "\u0645\u0627\u0698\u0648\u0644 \u067e\u0631\u062f\u0627\u062e\u062a \u0622\u0646\u0644\u0627\u06cc\u0646"
                                }
                              </div>
                              <div
                                className={classNames(
                                  projectcss.all,
                                  projectcss.__wab_text,
                                  sty.text__cAzUv
                                )}
                              >
                                {""}
                              </div>
                            </Checkbox>
                          </div>
                        </div>
                        <div
                          className={classNames(
                            projectcss.all,
                            sty.freeBox__gelw8
                          )}
                        >
                          <div
                            className={classNames(
                              projectcss.all,
                              projectcss.__wab_text,
                              sty.text__g0J6P
                            )}
                          >
                            <React.Fragment>
                              {(() => {
                                try {
                                  return $state.onlinePayemntPrice
                                    .toString()
                                    .replace(/\B(?=(\d{3})+(?!\d))/g, ",");
                                } catch (e) {
                                  if (
                                    e instanceof TypeError ||
                                    e?.plasmicType ===
                                      "PlasmicUndefinedDataError"
                                  ) {
                                    return "\u062a\u0639\u0631\u0641\u0647";
                                  }
                                  throw e;
                                }
                              })()}
                            </React.Fragment>
                          </div>
                        </div>
                        <div
                          className={classNames(
                            projectcss.all,
                            sty.freeBox__ctwHa
                          )}
                          dir={"rtl"}
                        >
                          <div
                            data-plasmic-name={"txtOnlinePaymentResult"}
                            data-plasmic-override={
                              overrides.txtOnlinePaymentResult
                            }
                            className={classNames(
                              projectcss.all,
                              projectcss.__wab_text,
                              sty.txtOnlinePaymentResult
                            )}
                          >
                            <React.Fragment>
                              {(() => {
                                try {
                                  return $state.onlinePayemntResult
                                    .toString()
                                    .replace(/\B(?=(\d{3})+(?!\d))/g, ",");
                                } catch (e) {
                                  if (
                                    e instanceof TypeError ||
                                    e?.plasmicType ===
                                      "PlasmicUndefinedDataError"
                                  ) {
                                    return "";
                                  }
                                  throw e;
                                }
                              })()}
                            </React.Fragment>
                          </div>
                        </div>
                      </div>
                      <div
                        className={classNames(
                          projectcss.all,
                          sty.freeBox__eDdxo
                        )}
                      >
                        <div
                          className={classNames(
                            projectcss.all,
                            sty.freeBox__ubeCl
                          )}
                          dir={"rtl"}
                        >
                          <div
                            className={classNames(
                              projectcss.all,
                              sty.freeBox__nbN3X
                            )}
                          >
                            <Checkbox
                              data-plasmic-name={"apiCheck"}
                              data-plasmic-override={overrides.apiCheck}
                              className={classNames(
                                "__wab_instance",
                                sty.apiCheck
                              )}
                              isChecked={
                                generateStateValueProp($state, [
                                  "apiCheck",
                                  "isChecked"
                                ]) ?? false
                              }
                              onChange={(...eventArgs) => {
                                generateStateOnChangeProp($state, [
                                  "apiCheck",
                                  "isChecked"
                                ])(eventArgs[0]);
                              }}
                            >
                              <div
                                className={classNames(
                                  projectcss.all,
                                  projectcss.__wab_text,
                                  sty.text__mqwTe
                                )}
                              >
                                {
                                  "\u0645\u0627\u0698\u0648\u0644 \u0627\u0631\u062a\u0628\u0627\u0637 \u0628\u0627 \u0633\u0627\u06cc\u0631 \u0646\u0631\u0645 \u0627\u0641\u0632\u0627\u0631 \u0647\u0627"
                                }
                              </div>
                              <div
                                className={classNames(
                                  projectcss.all,
                                  projectcss.__wab_text,
                                  sty.text__mbY0
                                )}
                              >
                                {""}
                              </div>
                            </Checkbox>
                          </div>
                        </div>
                        <div
                          className={classNames(
                            projectcss.all,
                            sty.freeBox___79ONb
                          )}
                        >
                          <div
                            className={classNames(
                              projectcss.all,
                              projectcss.__wab_text,
                              sty.text__gVSd4
                            )}
                          >
                            <React.Fragment>
                              {(() => {
                                try {
                                  return $state.apiPrice
                                    .toString()
                                    .replace(/\B(?=(\d{3})+(?!\d))/g, ",");
                                } catch (e) {
                                  if (
                                    e instanceof TypeError ||
                                    e?.plasmicType ===
                                      "PlasmicUndefinedDataError"
                                  ) {
                                    return "\u062a\u0639\u0631\u0641\u0647";
                                  }
                                  throw e;
                                }
                              })()}
                            </React.Fragment>
                          </div>
                        </div>
                        <div
                          className={classNames(
                            projectcss.all,
                            sty.freeBox__lQiZc
                          )}
                          dir={"rtl"}
                        >
                          <div
                            data-plasmic-name={"txtapiResult"}
                            data-plasmic-override={overrides.txtapiResult}
                            className={classNames(
                              projectcss.all,
                              projectcss.__wab_text,
                              sty.txtapiResult
                            )}
                          >
                            <React.Fragment>
                              {(() => {
                                try {
                                  return $state.apiResult
                                    .toString()
                                    .replace(/\B(?=(\d{3})+(?!\d))/g, ",");
                                } catch (e) {
                                  if (
                                    e instanceof TypeError ||
                                    e?.plasmicType ===
                                      "PlasmicUndefinedDataError"
                                  ) {
                                    return "";
                                  }
                                  throw e;
                                }
                              })()}
                            </React.Fragment>
                          </div>
                        </div>
                      </div>
                      <div
                        className={classNames(
                          projectcss.all,
                          sty.freeBox__th79A
                        )}
                      >
                        <div
                          className={classNames(
                            projectcss.all,
                            sty.freeBox__oanOw
                          )}
                          dir={"rtl"}
                        >
                          <div
                            className={classNames(
                              projectcss.all,
                              sty.freeBox__s7Hu
                            )}
                          >
                            <Checkbox
                              data-plasmic-name={"ehrCheck"}
                              data-plasmic-override={overrides.ehrCheck}
                              className={classNames(
                                "__wab_instance",
                                sty.ehrCheck
                              )}
                              isChecked={
                                generateStateValueProp($state, [
                                  "ehrCheck",
                                  "isChecked"
                                ]) ?? false
                              }
                              onChange={(...eventArgs) => {
                                generateStateOnChangeProp($state, [
                                  "ehrCheck",
                                  "isChecked"
                                ])(eventArgs[0]);
                              }}
                            >
                              <div
                                className={classNames(
                                  projectcss.all,
                                  projectcss.__wab_text,
                                  sty.text__zzTaF
                                )}
                              >
                                {
                                  "\u0645\u0627\u0698\u0648\u0644 \u067e\u0631\u0648\u0646\u062f\u0647 \u0628\u06cc\u0645\u0627\u0631"
                                }
                              </div>
                              <div
                                className={classNames(
                                  projectcss.all,
                                  projectcss.__wab_text,
                                  sty.text__aM0FL
                                )}
                              >
                                {""}
                              </div>
                            </Checkbox>
                          </div>
                        </div>
                        <div
                          className={classNames(
                            projectcss.all,
                            sty.freeBox__uy11O
                          )}
                        >
                          <div
                            className={classNames(
                              projectcss.all,
                              projectcss.__wab_text,
                              sty.text___1B53V
                            )}
                          >
                            <React.Fragment>
                              {(() => {
                                try {
                                  return $state.ehrPrice
                                    .toString()
                                    .replace(/\B(?=(\d{3})+(?!\d))/g, ",");
                                } catch (e) {
                                  if (
                                    e instanceof TypeError ||
                                    e?.plasmicType ===
                                      "PlasmicUndefinedDataError"
                                  ) {
                                    return "\u062a\u0639\u0631\u0641\u0647";
                                  }
                                  throw e;
                                }
                              })()}
                            </React.Fragment>
                          </div>
                        </div>
                        <div
                          className={classNames(
                            projectcss.all,
                            sty.freeBox__hxRxo
                          )}
                          dir={"rtl"}
                        >
                          <div
                            data-plasmic-name={"txtReservationKioskResult6"}
                            data-plasmic-override={
                              overrides.txtReservationKioskResult6
                            }
                            className={classNames(
                              projectcss.all,
                              projectcss.__wab_text,
                              sty.txtReservationKioskResult6
                            )}
                          >
                            <React.Fragment>
                              {(() => {
                                try {
                                  return $state.ehrResult
                                    .toString()
                                    .replace(/\B(?=(\d{3})+(?!\d))/g, ",");
                                } catch (e) {
                                  if (
                                    e instanceof TypeError ||
                                    e?.plasmicType ===
                                      "PlasmicUndefinedDataError"
                                  ) {
                                    return "";
                                  }
                                  throw e;
                                }
                              })()}
                            </React.Fragment>
                          </div>
                        </div>
                      </div>
                      <div
                        className={classNames(
                          projectcss.all,
                          sty.freeBox__ufKuf
                        )}
                      >
                        <div
                          className={classNames(
                            projectcss.all,
                            sty.freeBox__dnhQr
                          )}
                          dir={"rtl"}
                        >
                          <div
                            className={classNames(
                              projectcss.all,
                              sty.freeBox__w6Zdw
                            )}
                          >
                            <Checkbox
                              data-plasmic-name={"specialSiteCheck"}
                              data-plasmic-override={overrides.specialSiteCheck}
                              className={classNames(
                                "__wab_instance",
                                sty.specialSiteCheck
                              )}
                              isChecked={
                                generateStateValueProp($state, [
                                  "specialSiteCheck",
                                  "isChecked"
                                ]) ?? false
                              }
                              onChange={(...eventArgs) => {
                                generateStateOnChangeProp($state, [
                                  "specialSiteCheck",
                                  "isChecked"
                                ])(eventArgs[0]);
                              }}
                            >
                              <div
                                className={classNames(
                                  projectcss.all,
                                  projectcss.__wab_text,
                                  sty.text__dXYjf
                                )}
                              >
                                {
                                  "\u0633\u0627\u06cc\u062a \u0627\u062e\u062a\u0635\u0627\u0635\u06cc \u0645\u0631\u06a9\u0632"
                                }
                              </div>
                              <div
                                className={classNames(
                                  projectcss.all,
                                  projectcss.__wab_text,
                                  sty.text__dmeaD
                                )}
                              >
                                {""}
                              </div>
                            </Checkbox>
                          </div>
                        </div>
                        <div
                          className={classNames(
                            projectcss.all,
                            sty.freeBox__k5HGh
                          )}
                        >
                          <div
                            className={classNames(
                              projectcss.all,
                              projectcss.__wab_text,
                              sty.text___81R5A
                            )}
                          >
                            <React.Fragment>
                              {(() => {
                                try {
                                  return $state.specialSitePrice
                                    .toString()
                                    .replace(/\B(?=(\d{3})+(?!\d))/g, ",");
                                } catch (e) {
                                  if (
                                    e instanceof TypeError ||
                                    e?.plasmicType ===
                                      "PlasmicUndefinedDataError"
                                  ) {
                                    return "\u062a\u0639\u0631\u0641\u0647";
                                  }
                                  throw e;
                                }
                              })()}
                            </React.Fragment>
                          </div>
                        </div>
                        <div
                          className={classNames(
                            projectcss.all,
                            sty.freeBox__fKKm5
                          )}
                          dir={"rtl"}
                        >
                          <div
                            data-plasmic-name={"txtSpecialSiteResult"}
                            data-plasmic-override={
                              overrides.txtSpecialSiteResult
                            }
                            className={classNames(
                              projectcss.all,
                              projectcss.__wab_text,
                              sty.txtSpecialSiteResult
                            )}
                          >
                            <React.Fragment>
                              {(() => {
                                try {
                                  return $state.specialSiteResult
                                    .toString()
                                    .replace(/\B(?=(\d{3})+(?!\d))/g, ",");
                                } catch (e) {
                                  if (
                                    e instanceof TypeError ||
                                    e?.plasmicType ===
                                      "PlasmicUndefinedDataError"
                                  ) {
                                    return "";
                                  }
                                  throw e;
                                }
                              })()}
                            </React.Fragment>
                          </div>
                        </div>
                      </div>
                      <div
                        className={classNames(
                          projectcss.all,
                          sty.freeBox__swDcY
                        )}
                      >
                        <div
                          className={classNames(
                            projectcss.all,
                            sty.freeBox__ple
                          )}
                          dir={"rtl"}
                        >
                          <div
                            className={classNames(
                              projectcss.all,
                              sty.freeBox__yw5To
                            )}
                          >
                            <Checkbox
                              data-plasmic-name={"referralCheck"}
                              data-plasmic-override={overrides.referralCheck}
                              className={classNames(
                                "__wab_instance",
                                sty.referralCheck
                              )}
                              isChecked={
                                generateStateValueProp($state, [
                                  "referralCheck",
                                  "isChecked"
                                ]) ?? false
                              }
                              onChange={(...eventArgs) => {
                                generateStateOnChangeProp($state, [
                                  "referralCheck",
                                  "isChecked"
                                ])(eventArgs[0]);
                              }}
                            >
                              <div
                                className={classNames(
                                  projectcss.all,
                                  projectcss.__wab_text,
                                  sty.text__rgMxE
                                )}
                              >
                                {
                                  "\u0627\u0631\u062a\u0628\u0627\u0637 \u0628\u0627 \u0646\u0638\u0627\u0645 \u0627\u0631\u062c\u0627\u0639"
                                }
                              </div>
                              <div
                                className={classNames(
                                  projectcss.all,
                                  projectcss.__wab_text,
                                  sty.text__nw1Q6
                                )}
                              >
                                {""}
                              </div>
                            </Checkbox>
                          </div>
                        </div>
                        <div
                          className={classNames(
                            projectcss.all,
                            sty.freeBox__kvblj
                          )}
                        >
                          <div
                            className={classNames(
                              projectcss.all,
                              projectcss.__wab_text,
                              sty.text__ilj0C
                            )}
                          >
                            <React.Fragment>
                              {(() => {
                                try {
                                  return $state.referralPrice
                                    .toString()
                                    .replace(/\B(?=(\d{3})+(?!\d))/g, ",");
                                } catch (e) {
                                  if (
                                    e instanceof TypeError ||
                                    e?.plasmicType ===
                                      "PlasmicUndefinedDataError"
                                  ) {
                                    return "\u062a\u0639\u0631\u0641\u0647";
                                  }
                                  throw e;
                                }
                              })()}
                            </React.Fragment>
                          </div>
                        </div>
                        <div
                          className={classNames(
                            projectcss.all,
                            sty.freeBox__yfTLj
                          )}
                          dir={"rtl"}
                        >
                          <div
                            data-plasmic-name={"txtRefferalResult"}
                            data-plasmic-override={overrides.txtRefferalResult}
                            className={classNames(
                              projectcss.all,
                              projectcss.__wab_text,
                              sty.txtRefferalResult
                            )}
                          >
                            <React.Fragment>
                              {(() => {
                                try {
                                  return $state.referralResult
                                    .toString()
                                    .replace(/\B(?=(\d{3})+(?!\d))/g, ",");
                                } catch (e) {
                                  if (
                                    e instanceof TypeError ||
                                    e?.plasmicType ===
                                      "PlasmicUndefinedDataError"
                                  ) {
                                    return "";
                                  }
                                  throw e;
                                }
                              })()}
                            </React.Fragment>
                          </div>
                        </div>
                      </div>
                      <div
                        className={classNames(
                          projectcss.all,
                          sty.freeBox___18Nxv
                        )}
                      >
                        <div
                          className={classNames(
                            projectcss.all,
                            sty.freeBox__h3D5V
                          )}
                          dir={"rtl"}
                        >
                          <div
                            className={classNames(
                              projectcss.all,
                              sty.freeBox__cxLIj
                            )}
                          >
                            <Checkbox
                              data-plasmic-name={"dashboardCheck"}
                              data-plasmic-override={overrides.dashboardCheck}
                              className={classNames(
                                "__wab_instance",
                                sty.dashboardCheck
                              )}
                              isChecked={
                                generateStateValueProp($state, [
                                  "dashboardCheck",
                                  "isChecked"
                                ]) ?? false
                              }
                              onChange={(...eventArgs) => {
                                generateStateOnChangeProp($state, [
                                  "dashboardCheck",
                                  "isChecked"
                                ])(eventArgs[0]);
                              }}
                            >
                              <div
                                className={classNames(
                                  projectcss.all,
                                  projectcss.__wab_text,
                                  sty.text__emp2F
                                )}
                              >
                                {
                                  "\u062f\u0627\u0634\u0628\u0648\u0631\u062f \u06af\u0632\u0627\u0631\u0634\u0627\u062a \u0645\u062f\u06cc\u0631\u06cc\u062a\u06cc"
                                }
                              </div>
                              <div
                                className={classNames(
                                  projectcss.all,
                                  projectcss.__wab_text,
                                  sty.text__iSbJ
                                )}
                              >
                                {""}
                              </div>
                            </Checkbox>
                          </div>
                        </div>
                        <div
                          className={classNames(
                            projectcss.all,
                            sty.freeBox__leV5E
                          )}
                        >
                          <div
                            className={classNames(
                              projectcss.all,
                              projectcss.__wab_text,
                              sty.text__zmKrI
                            )}
                          >
                            <React.Fragment>
                              {(() => {
                                try {
                                  return $state.dashboardPrice
                                    .toString()
                                    .replace(/\B(?=(\d{3})+(?!\d))/g, ",");
                                } catch (e) {
                                  if (
                                    e instanceof TypeError ||
                                    e?.plasmicType ===
                                      "PlasmicUndefinedDataError"
                                  ) {
                                    return "\u062a\u0639\u0631\u0641\u0647";
                                  }
                                  throw e;
                                }
                              })()}
                            </React.Fragment>
                          </div>
                        </div>
                        <div
                          className={classNames(
                            projectcss.all,
                            sty.freeBox__sbcFb
                          )}
                          dir={"rtl"}
                        >
                          <div
                            data-plasmic-name={"txtDashboardResult"}
                            data-plasmic-override={overrides.txtDashboardResult}
                            className={classNames(
                              projectcss.all,
                              projectcss.__wab_text,
                              sty.txtDashboardResult
                            )}
                          >
                            <React.Fragment>
                              {(() => {
                                try {
                                  return $state.dashboardResult
                                    .toString()
                                    .replace(/\B(?=(\d{3})+(?!\d))/g, ",");
                                } catch (e) {
                                  if (
                                    e instanceof TypeError ||
                                    e?.plasmicType ===
                                      "PlasmicUndefinedDataError"
                                  ) {
                                    return "";
                                  }
                                  throw e;
                                }
                              })()}
                            </React.Fragment>
                          </div>
                        </div>
                      </div>
                      <div
                        className={classNames(
                          projectcss.all,
                          sty.freeBox___7VpRn
                        )}
                      >
                        <div
                          className={classNames(
                            projectcss.all,
                            sty.freeBox__yHFc8
                          )}
                          dir={"rtl"}
                        >
                          <div
                            className={classNames(
                              projectcss.all,
                              sty.freeBox__kpiXf
                            )}
                          />
                        </div>
                        <div
                          className={classNames(
                            projectcss.all,
                            sty.freeBox___0BfO
                          )}
                        />

                        <div
                          className={classNames(
                            projectcss.all,
                            sty.freeBox__l1HBn
                          )}
                          dir={"rtl"}
                        >
                          <div
                            className={classNames(
                              projectcss.all,
                              sty.freeBox___7AvPu
                            )}
                          >
                            <div
                              className={classNames(
                                projectcss.all,
                                sty.freeBox__bVOuU
                              )}
                            >
                              <div
                                className={classNames(
                                  projectcss.all,
                                  projectcss.__wab_text,
                                  sty.text___7T6Q
                                )}
                              >
                                {"\u062c\u0645\u0639 \u06a9\u0644:"}
                              </div>
                            </div>
                            <div
                              className={classNames(
                                projectcss.all,
                                sty.freeBox__fqPfv
                              )}
                            >
                              <div
                                className={classNames(
                                  projectcss.all,
                                  sty.freeBox__rgO4F
                                )}
                              >
                                <div
                                  data-plasmic-name={"txtSumInvoice"}
                                  data-plasmic-override={
                                    overrides.txtSumInvoice
                                  }
                                  className={classNames(
                                    projectcss.all,
                                    projectcss.__wab_text,
                                    sty.txtSumInvoice
                                  )}
                                >
                                  <React.Fragment>
                                    {(() => {
                                      try {
                                        return $state.suminvoiceResult
                                          .toString()
                                          .replace(
                                            /\B(?=(\d{3})+(?!\d))/g,
                                            ","
                                          );
                                      } catch (e) {
                                        if (
                                          e instanceof TypeError ||
                                          e?.plasmicType ===
                                            "PlasmicUndefinedDataError"
                                        ) {
                                          return "";
                                        }
                                        throw e;
                                      }
                                    })()}
                                  </React.Fragment>
                                </div>
                              </div>
                            </div>
                          </div>
                        </div>
                      </div>
                      <SideEffect
                        data-plasmic-name={"sideEffectCalculator"}
                        data-plasmic-override={overrides.sideEffectCalculator}
                        className={classNames(
                          "__wab_instance",
                          sty.sideEffectCalculator
                        )}
                        deps={(() => {
                          try {
                            return [
                              $state.reservationCheck.isChecked,
                              $state.referralCheck.isChecked,
                              $state.specialSiteCheck.isChecked,
                              $state.ehrCheck.isChecked,
                              $state.calculationCheck.isChecked,
                              $state.announcementCheck.isChecked,
                              $state.onlinepaymentCheck.isChecked,
                              $state.kioskResevationCheck.isChecked,
                              $state.reservationPhoneCheck.isChecked,
                              $state.apiCheck.isChecked,
                              $state.referralCheck.isChecked,
                              $state.dashboardCheck.isChecked,
                              $state.txtResevationCount.value
                            ];
                          } catch (e) {
                            if (
                              e instanceof TypeError ||
                              e?.plasmicType === "PlasmicUndefinedDataError"
                            ) {
                              return undefined;
                            }
                            throw e;
                          }
                        })()}
                        onMount={async () => {
                          const $steps = {};

                          $steps["runCode"] = true
                            ? (() => {
                                const actionArgs = {
                                  customFunction: async () => {
                                    return (() => {
                                      $state.reservationCheck.isChecked
                                        ? ($state.reservationInternetResult =
                                            $state.reservationInternetPrice *
                                            $state.txtResevationCount.value)
                                        : ($state.reservationInternetResult = 0);
                                      $state.reservationPhoneCheck.isChecked
                                        ? ($state.reservsationPhoneResult =
                                            $state.reservationPhonePrice *
                                            $state.txtResevationCount.value)
                                        : ($state.reservsationPhoneResult = 0);
                                      $state.kioskResevationCheck.isChecked
                                        ? ($state.reservationKioskResult =
                                            $state.reservationKioskPrice *
                                            $state.txtResevationCount.value)
                                        : ($state.reservationKioskResult = 0);
                                      $state.announcementCheck.isChecked
                                        ? ($state.announcementResult =
                                            $state.announcementPrice *
                                            $state.txtResevationCount.value)
                                        : ($state.announcementResult = 0);
                                      $state.calculationCheck.isChecked
                                        ? ($state.calculationResult =
                                            $state.calculationPrice *
                                            $state.txtResevationCount.value)
                                        : ($state.calculationResult = 0);
                                      $state.onlinepaymentCheck.isChecked
                                        ? ($state.onlinePayemntResult =
                                            $state.onlinePayemntPrice *
                                            $state.txtResevationCount.value)
                                        : ($state.onlinePayemntResult = 0);
                                      $state.apiCheck.isChecked
                                        ? ($state.apiResult =
                                            $state.apiPrice *
                                            $state.txtResevationCount.value)
                                        : ($state.apiResult = 0);
                                      $state.ehrCheck.isChecked
                                        ? ($state.ehrResult =
                                            $state.ehrPrice *
                                            $state.txtResevationCount.value)
                                        : ($state.ehrResult = 0);
                                      $state.specialSiteCheck.isChecked
                                        ? ($state.specialSiteResult =
                                            $state.specialSitePrice *
                                            $state.txtResevationCount.value)
                                        : ($state.specialSiteResult = 0);
                                      $state.dashboardCheck.isChecked
                                        ? ($state.dashboardResult =
                                            $state.dashboardPrice *
                                            $state.txtResevationCount.value)
                                        : ($state.dashboardResult = 0);
                                      $state.referralCheck.isChecked
                                        ? ($state.referralResult =
                                            $state.referralPrice *
                                            $state.txtResevationCount.value)
                                        : ($state.referralResult = 0);
                                      return ($state.suminvoiceResult =
                                        $state.dashboardResult +
                                        $state.specialSiteResult +
                                        $state.ehrResult +
                                        $state.apiResult +
                                        $state.onlinePayemntResult +
                                        $state.calculationResult +
                                        $state.announcementResult +
                                        $state.reservationKioskResult +
                                        $state.reservsationPhoneResult +
                                        $state.reservationInternetResult +
                                        $state.referralResult +
                                        "تومان");
                                    })();
                                  }
                                };
                                return (({ customFunction }) => {
                                  return customFunction();
                                })?.apply(null, [actionArgs]);
                              })()
                            : undefined;
                          if (
                            $steps["runCode"] != null &&
                            typeof $steps["runCode"] === "object" &&
                            typeof $steps["runCode"].then === "function"
                          ) {
                            $steps["runCode"] = await $steps["runCode"];
                          }
                        }}
                      />
                    </div>
                  ) : null}
                  {(() => {
                    try {
                      return $state.clCalculatorStatus;
                    } catch (e) {
                      if (
                        e instanceof TypeError ||
                        e?.plasmicType === "PlasmicUndefinedDataError"
                      ) {
                        return true;
                      }
                      throw e;
                    }
                  })() ? (
                    <div
                      className={classNames(projectcss.all, sty.freeBox__ebkVj)}
                    >
                      <div
                        className={classNames(
                          projectcss.all,
                          sty.freeBox__lJuo9
                        )}
                      >
                        <h2
                          className={classNames(
                            projectcss.all,
                            projectcss.h2,
                            projectcss.__wab_text,
                            sty.h2__c6NHj
                          )}
                        >
                          {
                            "\u062a\u0639\u0631\u0641\u0647 \u067e\u0634\u062a\u06cc\u0628\u0627\u0646\u06cc"
                          }
                        </h2>
                      </div>
                      <div
                        className={classNames(
                          projectcss.all,
                          projectcss.__wab_text,
                          sty.text___5DgVg
                        )}
                      >
                        {
                          "\u067e\u0634\u062a\u06cc\u0628\u0627\u0646\u06cc \u0628\u0635\u0648\u0631\u062a \u062a\u06cc\u06a9\u062a \u0631\u0627\u06cc\u06af\u0627\u0646 \u0648 \u067e\u0634\u062a\u06cc\u0628\u0627\u0646\u06cc \u062a\u0644\u0641\u0646\u06cc\u060c \u062d\u0636\u0648\u0631\u06cc\u060c \u0622\u0645\u0648\u0632\u0634 \u0645\u062c\u062f\u062f \u0648 \u067e\u0634\u062a\u06cc\u0628\u0627\u0646\u06cc \u0633\u0631\u0648\u0631 \u0637\u0628\u0642 \u062c\u062f\u0648\u0644 \u0632\u06cc\u0631 \u0645\u062d\u0627\u0633\u0628\u0647 \u062e\u0648\u0627\u0647\u062f \u0634\u062f."
                        }
                      </div>
                      <div
                        className={classNames(
                          projectcss.all,
                          sty.freeBox__ixn6J
                        )}
                      >
                        <div
                          className={classNames(
                            projectcss.all,
                            sty.freeBox__hPiA4
                          )}
                        >
                          <div
                            className={classNames(
                              projectcss.all,
                              sty.freeBox___9J
                            )}
                          >
                            <div
                              className={classNames(
                                projectcss.all,
                                projectcss.__wab_text,
                                sty.text__tCexL
                              )}
                            >
                              {"\u0639\u0646\u0648\u0627\u0646"}
                            </div>
                          </div>
                          <div
                            className={classNames(
                              projectcss.all,
                              sty.freeBox__qZoTp
                            )}
                          >
                            <div
                              className={classNames(
                                projectcss.all,
                                projectcss.__wab_text,
                                sty.text__xrIvV
                              )}
                            >
                              {"\u062a\u0639\u0631\u0641\u0647"}
                            </div>
                          </div>
                          <div
                            className={classNames(
                              projectcss.all,
                              sty.freeBox__sgy2
                            )}
                          >
                            <div
                              className={classNames(
                                projectcss.all,
                                projectcss.__wab_text,
                                sty.text__yiqsd
                              )}
                            >
                              {"\u0647\u0632\u06cc\u0646\u0647"}
                            </div>
                          </div>
                        </div>
                        <div
                          className={classNames(
                            projectcss.all,
                            sty.freeBox__ex009
                          )}
                        >
                          <div
                            className={classNames(
                              projectcss.all,
                              sty.freeBox___0Giwe
                            )}
                            dir={"rtl"}
                          >
                            <div
                              className={classNames(
                                projectcss.all,
                                sty.freeBox__xQnDd
                              )}
                            >
                              <div
                                className={classNames(
                                  projectcss.all,
                                  projectcss.__wab_text,
                                  sty.text__kU6Nw
                                )}
                              >
                                {
                                  "\u067e\u0634\u062a\u06cc\u0628\u0627\u0646\u06cc \u062a\u06cc\u06a9\u062a"
                                }
                              </div>
                            </div>
                          </div>
                          <div
                            className={classNames(
                              projectcss.all,
                              sty.freeBox__zr7Q
                            )}
                            dir={"rtl"}
                          >
                            <div
                              className={classNames(
                                projectcss.all,
                                projectcss.__wab_text,
                                sty.text__cuoe2
                              )}
                            >
                              {
                                "\u067e\u0627\u0633\u062e \u06af\u0648\u06cc\u06cc \u0628\u0647 \u062a\u06cc\u06a9\u062a \u0647\u0627 \u06a9\u0645\u062a\u0631 \u0627\u0632 1 \u0631\u0648\u0632 \u06a9\u0627\u0631\u06cc"
                              }
                            </div>
                          </div>
                          <div
                            className={classNames(
                              projectcss.all,
                              sty.freeBox___6MXxw
                            )}
                          >
                            <div
                              className={classNames(
                                projectcss.all,
                                projectcss.__wab_text,
                                sty.text__utuaz
                              )}
                            >
                              {"0"}
                            </div>
                          </div>
                        </div>
                        <div
                          className={classNames(
                            projectcss.all,
                            sty.freeBox__yd7Cq
                          )}
                        >
                          <div
                            className={classNames(
                              projectcss.all,
                              sty.freeBox__c1Z88
                            )}
                            dir={"rtl"}
                          >
                            <div
                              className={classNames(
                                projectcss.all,
                                sty.freeBox__eUwnn
                              )}
                            >
                              <div
                                className={classNames(
                                  projectcss.all,
                                  projectcss.__wab_text,
                                  sty.text__qHQft
                                )}
                              >
                                {
                                  "\u067e\u0634\u062a\u06cc\u0628\u0627\u0646\u06cc \u062a\u0644\u0641\u0646\u06cc"
                                }
                              </div>
                            </div>
                          </div>
                          <div
                            className={classNames(
                              projectcss.all,
                              sty.freeBox__yUuO
                            )}
                            dir={"rtl"}
                          >
                            <div
                              className={classNames(
                                projectcss.all,
                                projectcss.__wab_text,
                                sty.text__z02Ep
                              )}
                            >
                              {
                                "\u062d\u0642 \u0627\u0634\u062a\u0631\u0627\u06a9 \u0645\u0627\u0647\u06cc\u0627\u0646\u0647 \u067e\u0627\u0633\u062e \u06af\u0648\u06cc\u06cc \u0628\u0635\u0648\u0631\u062a \u062a\u0644\u0641\u0646\u06cc (7 \u0635\u0628\u062d \u062a\u0627 18 \u0639\u0635\u0631 \u0631\u0648\u0632\u0647\u0627\u06cc \u06a9\u0627\u0631\u06cc)"
                              }
                            </div>
                          </div>
                          <div
                            className={classNames(
                              projectcss.all,
                              sty.freeBox___7Xgo
                            )}
                          >
                            <div
                              className={classNames(
                                projectcss.all,
                                projectcss.__wab_text,
                                sty.text___1KutF
                              )}
                            >
                              {"2,900,000"}
                            </div>
                          </div>
                        </div>
                        <div
                          className={classNames(
                            projectcss.all,
                            sty.freeBox__agdK
                          )}
                        >
                          <div
                            className={classNames(
                              projectcss.all,
                              sty.freeBox__v8B1C
                            )}
                            dir={"rtl"}
                          >
                            <div
                              className={classNames(
                                projectcss.all,
                                sty.freeBox__hQyn1
                              )}
                            >
                              <div
                                className={classNames(
                                  projectcss.all,
                                  projectcss.__wab_text,
                                  sty.text__hGbCk
                                )}
                              >
                                {
                                  "\u067e\u0634\u062a\u06cc\u0628\u0627\u0646\u06cc \u062d\u0636\u0648\u0631\u06cc \u06cc\u0627 \u0622\u0645\u0648\u0632\u0634 \u0645\u062c\u062f\u062f"
                                }
                              </div>
                            </div>
                          </div>
                          <div
                            className={classNames(
                              projectcss.all,
                              sty.freeBox__sbd7F
                            )}
                            dir={"rtl"}
                          >
                            <div
                              className={classNames(
                                projectcss.all,
                                projectcss.__wab_text,
                                sty.text__fKbif
                              )}
                            >
                              {
                                "\u067e\u0634\u062a\u06cc\u0628\u0627\u0646\u06cc \u0628\u0635\u0648\u0631\u062a \u0627\u0639\u0632\u0627\u0645 \u0646\u06cc\u0631\u0648 \u062f\u0631 \u0645\u062d\u0644 \u06cc\u0627 \u062c\u0644\u0633\u0647 \u0622\u0646\u0644\u0627\u06cc\u0646 \u0628\u0647 \u0627\u0632\u0627\u06cc \u0647\u0631 \u0631\u0648\u0632"
                              }
                            </div>
                          </div>
                          <div
                            className={classNames(
                              projectcss.all,
                              sty.freeBox__b1IGf
                            )}
                          >
                            <div
                              className={classNames(
                                projectcss.all,
                                projectcss.__wab_text,
                                sty.text__l16TJ
                              )}
                            >
                              {"950,000"}
                            </div>
                          </div>
                        </div>
                        <div
                          className={classNames(
                            projectcss.all,
                            sty.freeBox__n7Qvq
                          )}
                        >
                          <div
                            className={classNames(
                              projectcss.all,
                              sty.freeBox__q8SIt
                            )}
                            dir={"rtl"}
                          >
                            <div
                              className={classNames(
                                projectcss.all,
                                sty.freeBox__qeYe1
                              )}
                            >
                              <div
                                className={classNames(
                                  projectcss.all,
                                  projectcss.__wab_text,
                                  sty.text__qWKf
                                )}
                              >
                                {
                                  "\u067e\u0634\u062a\u06cc\u0628\u0627\u0646\u06cc \u0633\u0631\u0648\u0631"
                                }
                              </div>
                            </div>
                          </div>
                          <div
                            className={classNames(
                              projectcss.all,
                              sty.freeBox__r5QBw
                            )}
                            dir={"rtl"}
                          >
                            <div
                              className={classNames(
                                projectcss.all,
                                projectcss.__wab_text,
                                sty.text__zrFim
                              )}
                            >
                              {
                                "\u067e\u06cc\u06a9\u0631\u0628\u0646\u062f\u06cc \u0648 \u0646\u06af\u0647\u062f\u0627\u0631\u06cc \u0633\u0631\u0648\u0631 \u0628\u0635\u0648\u0631\u062a \u0645\u0627\u0647\u06cc\u0627\u0646\u0647"
                              }
                            </div>
                          </div>
                          <div
                            className={classNames(
                              projectcss.all,
                              sty.freeBox__rF5S
                            )}
                          >
                            <div
                              className={classNames(
                                projectcss.all,
                                projectcss.__wab_text,
                                sty.text__wkPmX
                              )}
                            >
                              {"2,750,000"}
                            </div>
                          </div>
                        </div>
                        <div
                          className={classNames(
                            projectcss.all,
                            sty.freeBox__r5B1D
                          )}
                        >
                          <PlasmicLink__
                            className={classNames(
                              projectcss.all,
                              projectcss.a,
                              projectcss.__wab_text,
                              sty.link__dc5Eu
                            )}
                            component={Link}
                            href={"https://www.paziresh24.com/home/contact-us/"}
                            platform={"nextjs"}
                            target={"_blank"}
                          >
                            {
                              "\u062f\u0631 \u0635\u0648\u0631\u062a\u06cc \u06a9\u0647 \u0634\u0631\u0627\u06cc\u0637 \u067e\u0634\u062a\u06cc\u0628\u0627\u0646\u06cc \u0641\u0648\u0642 \u0628\u0631\u0627\u06cc \u0634\u0645\u0627 \u0645\u0646\u0627\u0633\u0628 \u0646\u06cc\u0633\u062a \u0648 \u0646\u06cc\u0627\u0632 \u0628\u0647 \u067e\u0634\u062a\u06cc\u0628\u0627\u0646\u06cc \u0628\u0627 \u0634\u0631\u0627\u06cc\u0637 \u062e\u0627\u0635\u06cc \u062f\u0627\u0631\u06cc\u062f \u0644\u0637\u0641\u0627 \u0628\u0627 \u0645\u0627 \u062a\u0645\u0627\u0633 \u0628\u06af\u06cc\u0631\u06cc\u062f.\t\t\t"
                            }
                          </PlasmicLink__>
                        </div>
                      </div>
                    </div>
                  ) : null}
                </div>
              ) : null}
              {(() => {
                try {
                  return $state.clReservationState;
                } catch (e) {
                  if (
                    e instanceof TypeError ||
                    e?.plasmicType === "PlasmicUndefinedDataError"
                  ) {
                    return true;
                  }
                  throw e;
                }
              })() ? (
                <div
                  data-plasmic-name={"gridReservation"}
                  data-plasmic-override={overrides.gridReservation}
                  className={classNames(
                    projectcss.all,
                    sty.gridReservation,
                    "grid_reservation0"
                  )}
                  dir={"rtl"}
                >
                  <div
                    className={classNames(projectcss.all, sty.freeBox___4HLow)}
                  >
                    <div
                      className={classNames(projectcss.all, sty.freeBox__nopqu)}
                    >
                      <div
                        className={classNames(
                          projectcss.all,
                          sty.freeBox___2Faw9
                        )}
                      >
                        <h2
                          className={classNames(
                            projectcss.all,
                            projectcss.h2,
                            projectcss.__wab_text,
                            sty.h2__xfcwc
                          )}
                        >
                          {"\u0646\u0648\u0628\u062a \u062f\u0647\u06cc"}
                        </h2>
                      </div>
                    </div>
                  </div>
                  <div
                    className={classNames(projectcss.all, sty.freeBox__rYn2U)}
                  />

                  <div
                    className={classNames(projectcss.all, sty.freeBox__dwxs6)}
                    dir={"rtl"}
                  >
                    <div
                      className={classNames(projectcss.all, sty.freeBox__u6XXr)}
                    >
                      <h3
                        className={classNames(
                          projectcss.all,
                          projectcss.h3,
                          projectcss.__wab_text,
                          sty.h3__qy73F
                        )}
                      >
                        {"\u0646\u0648\u0628\u062a \u062f\u0647\u06cc"}
                      </h3>
                    </div>
                    <ul
                      className={classNames(
                        projectcss.all,
                        projectcss.ul,
                        sty.ul__lwy9C
                      )}
                      dir={"rtl"}
                    >
                      <li
                        className={classNames(
                          projectcss.all,
                          projectcss.li,
                          sty.li__rzv5X
                        )}
                      >
                        <div
                          className={classNames(
                            projectcss.all,
                            sty.freeBox__b1YS
                          )}
                        >
                          <div
                            className={classNames(
                              projectcss.all,
                              projectcss.__wab_text,
                              sty.text__ave3F
                            )}
                          >
                            {
                              "\u0646\u0648\u0628\u062a \u062f\u0647\u06cc \u0628\u0647 \u0634\u06cc\u0648\u0647 \u0627\u06cc\u0646\u062a\u0631\u0646\u062a\u06cc\u060c \u0627\u067e\u0644\u06cc\u06a9\u06cc\u0634\u0646 \u0648 \u062d\u0636\u0648\u0631\u06cc "
                            }
                          </div>
                        </div>
                      </li>
                      <li
                        className={classNames(
                          projectcss.all,
                          projectcss.li,
                          sty.li___90Y7J
                        )}
                      >
                        <div
                          className={classNames(
                            projectcss.all,
                            sty.freeBox__xgWxa
                          )}
                        >
                          <div
                            className={classNames(
                              projectcss.all,
                              projectcss.__wab_text,
                              sty.text__o1Am8
                            )}
                          >
                            {
                              "\u0627\u0645\u06a9\u0627\u0646 \u062b\u0628\u062a\u060c \u062d\u0630\u0641 \u0648 \u06cc\u0627 \u062c\u0627\u0628\u0647 \u062c\u0627\u06cc\u06cc \u0646\u0648\u0628\u062a \u062a\u0648\u0633\u0637 \u0628\u06cc\u0645\u0627\u0631 \u0648 \u06a9\u0627\u0631\u0628\u0631 \u0645\u0631\u06a9\u0632 \u062f\u0631\u0645\u0627\u0646\u06cc"
                            }
                          </div>
                        </div>
                      </li>
                      <li
                        className={classNames(
                          projectcss.all,
                          projectcss.li,
                          sty.li__eQxaN
                        )}
                      >
                        <div
                          className={classNames(
                            projectcss.all,
                            sty.freeBox___4TUzi
                          )}
                        >
                          <div
                            className={classNames(
                              projectcss.all,
                              projectcss.__wab_text,
                              sty.text__qgSvM
                            )}
                          >
                            {
                              "\u0627\u0645\u06a9\u0627\u0646 \u062d\u0630\u0641 \u0648 \u06cc\u0627 \u062c\u0627\u0628\u0647 \u062c\u0627\u06cc\u06cc \u0646\u0648\u0628\u062a \u0647\u0627 \u0628\u0647 \u0635\u0648\u0631\u062a \u06af\u0631\u0648\u0647\u06cc"
                            }
                          </div>
                        </div>
                      </li>
                      <li
                        className={classNames(
                          projectcss.all,
                          projectcss.li,
                          sty.li__x1Ka9
                        )}
                      >
                        <div
                          className={classNames(
                            projectcss.all,
                            sty.freeBox___9FQc
                          )}
                        >
                          <div
                            className={classNames(
                              projectcss.all,
                              projectcss.__wab_text,
                              sty.text__dTReh
                            )}
                          >
                            {
                              "\u06cc\u06a9\u067e\u0627\u0631\u0686\u06af\u06cc \u06a9\u0627\u0645\u0644 \u0646\u0648\u0628\u062a \u0647\u0627\u06cc \u0631\u0632\u0631\u0648 \u0634\u062f\u0647 \u0627\u0632 \u06a9\u0627\u0646\u0627\u0644 \u0647\u0627\u06cc \u0645\u062e\u062a\u0644\u0641 \u0646\u0648\u0628\u062a \u062f\u0647\u06cc \u062f\u0631 \u0633\u0627\u0645\u0627\u0646\u0647 \u0645\u0631\u06a9\u0632\u06cc"
                            }
                          </div>
                        </div>
                      </li>
                      <li
                        className={classNames(
                          projectcss.all,
                          projectcss.li,
                          sty.li__yvVu1
                        )}
                      >
                        <div
                          className={classNames(
                            projectcss.all,
                            sty.freeBox__tuSod
                          )}
                        >
                          <div
                            className={classNames(
                              projectcss.all,
                              projectcss.__wab_text,
                              sty.text__rAcWs
                            )}
                          >
                            {
                              "\u0627\u0646\u062a\u062e\u0627\u0628 \u0646\u0648\u0628\u062a \u0628\u0631\u0627\u0633\u0627\u0633 \u062a\u0627\u0631\u06cc\u062e \u0648 \u0632\u0645\u0627\u0646 \u062f\u0644\u062e\u0648\u0627\u0647 \u0648 \u062b\u0628\u062a \u0627\u0637\u0644\u0627\u0639\u0627\u062a \u0628\u06cc\u0645\u0627\u0631 \u062c\u0647\u062a \u0627\u062e\u0630 \u0646\u0648\u0628\u062a"
                            }
                          </div>
                        </div>
                      </li>
                      <li
                        className={classNames(
                          projectcss.all,
                          projectcss.li,
                          sty.li___92At
                        )}
                      >
                        <div
                          className={classNames(
                            projectcss.all,
                            sty.freeBox__looxe
                          )}
                        >
                          <div
                            className={classNames(
                              projectcss.all,
                              projectcss.__wab_text,
                              sty.text__yjPyg
                            )}
                          >
                            {
                              "\u0627\u0645\u06a9\u0627\u0646 \u062a\u0639\u06cc\u06cc\u0646 \u0645\u062f\u062a \u0632\u0645\u0627\u0646 \u0627\u0631\u0627\u0626\u0647 \u062e\u062f\u0645\u062a (\u0628\u0631\u0627\u06cc \u0645\u062b\u0627\u0644 \u0645\u062f\u062a \u0648\u06cc\u0632\u06cc\u062a \u067e\u0632\u0634\u06a9)"
                            }
                          </div>
                        </div>
                      </li>
                      <li
                        className={classNames(
                          projectcss.all,
                          projectcss.li,
                          sty.li___6Cre4
                        )}
                      >
                        <div
                          className={classNames(
                            projectcss.all,
                            sty.freeBox__yjrZa
                          )}
                        >
                          <div
                            className={classNames(
                              projectcss.all,
                              projectcss.__wab_text,
                              sty.text__aCgF
                            )}
                          >
                            {
                              "\u0627\u0645\u06a9\u0627\u0646 \u062a\u0639\u06cc\u06cc\u0646 \u062a\u0639\u062f\u0627\u062f \u0646\u0648\u0628\u062a \u0642\u0627\u0628\u0644 \u0627\u0631\u0627\u0626\u0647 \u062f\u0631 \u0647\u0631 \u0633\u0627\u0639\u062a \u0628\u0647 \u0635\u0648\u0631\u062a \u062b\u0627\u0628\u062a \u0648 \u067e\u0648\u06cc\u0627"
                            }
                          </div>
                        </div>
                      </li>
                      <li
                        className={classNames(
                          projectcss.all,
                          projectcss.li,
                          sty.li__a3Ete
                        )}
                      >
                        <div
                          className={classNames(
                            projectcss.all,
                            sty.freeBox__aNc0W
                          )}
                        >
                          <div
                            className={classNames(
                              projectcss.all,
                              projectcss.__wab_text,
                              sty.text__fVzBb
                            )}
                          >
                            {
                              "\u0627\u0645\u06a9\u0627\u0646 \u062a\u0639\u0631\u06cc\u0641 \u0633\u0627\u0639\u062a \u06a9\u0627\u0631\u06cc \u0628\u0647 \u0627\u0632\u0627\u06cc \u0647\u0631 \u067e\u0632\u0634\u06a9 \u0648 \u062e\u062f\u0645\u062a"
                            }
                          </div>
                        </div>
                      </li>
                      <li
                        className={classNames(
                          projectcss.all,
                          projectcss.li,
                          sty.li__s4H73
                        )}
                      >
                        <div
                          className={classNames(
                            projectcss.all,
                            sty.freeBox__hdO9
                          )}
                        >
                          <div
                            className={classNames(
                              projectcss.all,
                              projectcss.__wab_text,
                              sty.text___2BPhw
                            )}
                          >
                            {
                              "\u062a\u0639\u06cc\u06cc\u0646 \u0645\u06cc\u0632\u0627\u0646 \u0646\u0648\u0628\u062a \u0642\u0627\u0628\u0644 \u0627\u062e\u062a\u0635\u0627\u0635 \u0628\u0647 \u0631\u0648\u0634\u0647\u0627\u06cc \u0645\u062e\u062a\u0644\u0641 \u0646\u0648\u0628\u062a \u062f\u0647\u06cc"
                            }
                          </div>
                        </div>
                      </li>
                      <li
                        className={classNames(
                          projectcss.all,
                          projectcss.li,
                          sty.li__qgOfb
                        )}
                      >
                        <div
                          className={classNames(
                            projectcss.all,
                            sty.freeBox__rilQq
                          )}
                        >
                          <div
                            className={classNames(
                              projectcss.all,
                              projectcss.__wab_text,
                              sty.text___6WCQ
                            )}
                          >
                            {
                              "\u062a\u0639\u06cc\u06cc\u0646 \u062d\u062f\u0627\u06a9\u062b\u0631 \u062a\u0639\u062f\u0627\u062f \u0646\u0648\u0628\u062a \u0645\u062c\u0627\u0632 \u0628\u0627 \u06cc\u06a9 \u0634\u0645\u0627\u0631\u0647 \u062a\u0644\u0641\u0646 \u06cc\u0627 \u06cc\u06a9 \u06a9\u062f\u0645\u0644\u06cc"
                            }
                          </div>
                        </div>
                      </li>
                      <li
                        className={classNames(
                          projectcss.all,
                          projectcss.li,
                          sty.li__gZji6
                        )}
                      >
                        <div
                          className={classNames(
                            projectcss.all,
                            sty.freeBox__jbKg
                          )}
                        >
                          <div
                            className={classNames(
                              projectcss.all,
                              projectcss.__wab_text,
                              sty.text__uQf8E
                            )}
                          >
                            {
                              "\u0627\u0645\u06a9\u0627\u0646 \u067e\u06cc\u0627\u062f\u0647 \u0633\u0627\u0632\u06cc \u0644\u06cc\u0633\u062a \u0633\u06cc\u0627\u0647"
                            }
                          </div>
                        </div>
                      </li>
                      <li
                        className={classNames(
                          projectcss.all,
                          projectcss.li,
                          sty.li___7Vb8
                        )}
                      >
                        <div
                          className={classNames(
                            projectcss.all,
                            sty.freeBox__r7Lc0
                          )}
                        >
                          <div
                            className={classNames(
                              projectcss.all,
                              projectcss.__wab_text,
                              sty.text__dd30E
                            )}
                          >
                            {
                              "\u0627\u0645\u06a9\u0627\u0646 \u062b\u0628\u062a \u0686\u0646\u062f \u062e\u062f\u0645\u062a \u0628\u0631\u0627\u06cc \u06cc\u06a9 \u0646\u0648\u0628\u062a"
                            }
                          </div>
                        </div>
                      </li>
                    </ul>
                  </div>
                  <div
                    className={classNames(projectcss.all, sty.freeBox__sbXna)}
                    dir={"rtl"}
                  >
                    <div
                      className={classNames(projectcss.all, sty.freeBox__nlV9G)}
                    >
                      <h3
                        className={classNames(
                          projectcss.all,
                          projectcss.h3,
                          projectcss.__wab_text,
                          sty.h3__r1Nyk
                        )}
                      >
                        {
                          "\u06a9\u0627\u0631\u0628\u0631\u0627\u0646 \u0648 \u067e\u0632\u0634\u06a9\u0627\u0646"
                        }
                      </h3>
                    </div>
                    <ul
                      className={classNames(
                        projectcss.all,
                        projectcss.ul,
                        sty.ul__kK3ML
                      )}
                      dir={"rtl"}
                    >
                      <li
                        className={classNames(
                          projectcss.all,
                          projectcss.li,
                          sty.li__wv2Yt
                        )}
                      >
                        <div
                          className={classNames(
                            projectcss.all,
                            sty.freeBox__x9QU
                          )}
                        >
                          <div
                            className={classNames(
                              projectcss.all,
                              projectcss.__wab_text,
                              sty.text__zfhQb
                            )}
                          >
                            {
                              "\u0627\u0645\u06a9\u0627\u0646 \u062a\u0639\u0631\u06cc\u0641 \u0644\u06cc\u0633\u062a \u06a9\u0627\u0631\u0628\u0631\u0627\u0646 \u0648 \u067e\u0632\u0634\u06a9\u0627\u0646 \u0645\u0631\u06a9\u0632 \u062f\u0631\u0645\u0627\u0646\u06cc"
                            }
                          </div>
                        </div>
                      </li>
                      <li
                        className={classNames(
                          projectcss.all,
                          projectcss.li,
                          sty.li__x1Eg
                        )}
                      >
                        <div
                          className={classNames(
                            projectcss.all,
                            sty.freeBox__raRAw
                          )}
                        >
                          <div
                            className={classNames(
                              projectcss.all,
                              projectcss.__wab_text,
                              sty.text__ijBh
                            )}
                          >
                            {
                              "\u062b\u0628\u062a \u06a9\u0644\u06cc\u0647 \u0627\u0637\u0644\u0627\u0639\u0627\u062a \u0634\u062e\u0635\u06cc \u0648 \u062a\u062e\u0635\u0635\u06cc \u067e\u0632\u0634\u06a9 \u0648 \u067e\u0631\u0633\u0646\u0644 \u0645\u0631\u06a9\u0632"
                            }
                          </div>
                        </div>
                      </li>
                      <li
                        className={classNames(
                          projectcss.all,
                          projectcss.li,
                          sty.li__dE5Gf
                        )}
                      >
                        <div
                          className={classNames(
                            projectcss.all,
                            sty.freeBox__sTj34
                          )}
                        >
                          <div
                            className={classNames(
                              projectcss.all,
                              projectcss.__wab_text,
                              sty.text__oki60
                            )}
                          >
                            {
                              "\u062b\u0628\u062a \u0648 \u0648\u06cc\u0631\u0627\u06cc\u0634 \u0627\u0637\u0644\u0627\u0639\u0627\u062a \u067e\u0631\u0648\u0641\u0627\u06cc\u0644 \u0645\u0631\u06a9\u0632 \u062f\u0631\u0645\u0627\u0646\u06cc"
                            }
                          </div>
                        </div>
                      </li>
                    </ul>
                  </div>
                  <div
                    className={classNames(projectcss.all, sty.freeBox__woJgy)}
                    dir={"rtl"}
                  >
                    <div
                      className={classNames(projectcss.all, sty.freeBox__zji3T)}
                    >
                      <h3
                        className={classNames(
                          projectcss.all,
                          projectcss.h3,
                          projectcss.__wab_text,
                          sty.h3__jwL8L
                        )}
                      >
                        {
                          "\u062a\u0642\u0648\u06cc\u0645 \u06a9\u0627\u0631\u06cc:"
                        }
                      </h3>
                    </div>
                    <ul
                      className={classNames(
                        projectcss.all,
                        projectcss.ul,
                        sty.ul__bq50
                      )}
                      dir={"rtl"}
                    >
                      <li
                        className={classNames(
                          projectcss.all,
                          projectcss.li,
                          sty.li___2UgEs
                        )}
                      >
                        <div
                          className={classNames(
                            projectcss.all,
                            sty.freeBox__caiB8
                          )}
                        >
                          <div
                            className={classNames(
                              projectcss.all,
                              projectcss.__wab_text,
                              sty.text__zGVvb
                            )}
                          >
                            {
                              "\u062a\u0642\u0648\u06cc\u0645 \u06a9\u0627\u0631\u06cc \u0628\u0627 \u0646\u0645\u0627\u06cc \u0647\u0641\u062a\u06af\u06cc \u062c\u0647\u062a \u0645\u062f\u06cc\u0631\u06cc\u062a \u0646\u0648\u0628\u062a \u0647\u0627"
                            }
                          </div>
                        </div>
                      </li>
                      <li
                        className={classNames(
                          projectcss.all,
                          projectcss.li,
                          sty.li__ayUiG
                        )}
                      >
                        <div
                          className={classNames(
                            projectcss.all,
                            sty.freeBox__v56Nn
                          )}
                        >
                          <div
                            className={classNames(
                              projectcss.all,
                              projectcss.__wab_text,
                              sty.text__uNmo
                            )}
                          >
                            {
                              "\u0627\u0645\u06a9\u0627\u0646 \u0645\u0634\u0627\u0647\u062f\u0647 \u0622\u0645\u0627\u0631 \u0646\u0648\u0628\u062a \u0647\u0627 \u0628\u0647 \u062a\u0641\u06a9\u06cc\u06a9 \u0631\u0648\u0632 \u0648 \u0646\u0648\u0639 \u0646\u0648\u0628\u062a"
                            }
                          </div>
                        </div>
                      </li>
                      <li
                        className={classNames(
                          projectcss.all,
                          projectcss.li,
                          sty.li__thAor
                        )}
                      >
                        <div
                          className={classNames(
                            projectcss.all,
                            sty.freeBox__oSqqn
                          )}
                        >
                          <div
                            className={classNames(
                              projectcss.all,
                              projectcss.__wab_text,
                              sty.text__tGpJq
                            )}
                          >
                            {
                              "\u062a\u0642\u0648\u06cc\u0645 \u06a9\u0627\u0631\u06cc \u0628\u0627 \u0646\u0645\u0627\u06cc \u0644\u06cc\u0633\u062a\u06cc"
                            }
                          </div>
                        </div>
                      </li>
                      <li
                        className={classNames(
                          projectcss.all,
                          projectcss.li,
                          sty.li__nz4Y9
                        )}
                      >
                        <div
                          className={classNames(
                            projectcss.all,
                            sty.freeBox__lm9NC
                          )}
                        >
                          <div
                            className={classNames(
                              projectcss.all,
                              projectcss.__wab_text,
                              sty.text__w6F0B
                            )}
                          >
                            {
                              "\u062a\u0642\u0648\u06cc\u0645 \u06a9\u0627\u0631\u06cc \u0628\u0627 \u0646\u0645\u0627\u06cc \u0633\u0627\u0644\u0646 \u0627\u0646\u062a\u0638\u0627\u0631 \u0648 \u0644\u06cc\u0633\u062a \u0635\u0646\u062f\u0644\u06cc \u0647\u0627 \u0628\u0647 \u0635\u0648\u0631\u062a \u0646\u0648\u0628\u062a \u067e\u0631\u0634\u062f\u0647 \u0648 \u0646\u0648\u0628\u062a \u062e\u0627\u0644\u06cc"
                            }
                          </div>
                        </div>
                      </li>
                      <li
                        className={classNames(
                          projectcss.all,
                          projectcss.li,
                          sty.li__xjRqb
                        )}
                      >
                        <div
                          className={classNames(
                            projectcss.all,
                            sty.freeBox__abK3X
                          )}
                        >
                          <div
                            className={classNames(
                              projectcss.all,
                              projectcss.__wab_text,
                              sty.text__hbnvx
                            )}
                          >
                            {
                              "\u0627\u0645\u06a9\u0627\u0646 \u062c\u0633\u062a\u062c\u0648 \u0628\u06cc\u0646 \u0646\u0648\u0628\u062a \u0647\u0627\u06cc \u062b\u0628\u062a \u0634\u062f\u0647 \u0628\u0631 \u0627\u0633\u0627\u0633 \u06a9\u0644\u06cc\u0647 \u0627\u0637\u0644\u0627\u0639\u0627\u062a \u0646\u0648\u0628\u062a"
                            }
                          </div>
                        </div>
                      </li>
                    </ul>
                  </div>
                  <div
                    className={classNames(projectcss.all, sty.freeBox__smLx)}
                    dir={"rtl"}
                  >
                    <h3
                      className={classNames(
                        projectcss.all,
                        projectcss.h3,
                        projectcss.__wab_text,
                        sty.h3__pP6Ai
                      )}
                    >
                      {
                        "\u0627\u0645\u06a9\u0627\u0646 \u062b\u0628\u062a \u0631\u0648\u0632\u0647\u0627\u06cc \u062a\u0639\u0637\u06cc\u0644 \u06cc\u0627 \u0645\u0631\u062e\u0635\u06cc:"
                      }
                    </h3>
                    <ul
                      className={classNames(
                        projectcss.all,
                        projectcss.ul,
                        sty.ul__yqwrK
                      )}
                      dir={"rtl"}
                    >
                      <li
                        className={classNames(
                          projectcss.all,
                          projectcss.li,
                          sty.li__qHqKk
                        )}
                      >
                        <div
                          className={classNames(
                            projectcss.all,
                            sty.freeBox__leQvg
                          )}
                        >
                          <div
                            className={classNames(
                              projectcss.all,
                              projectcss.__wab_text,
                              sty.text__mRk0M
                            )}
                          >
                            {
                              "\u0627\u0645\u06a9\u0627\u0646 \u062a\u0639\u0631\u06cc\u0641 \u0631\u0648\u0632 \u062a\u0639\u0637\u06cc\u0644 \u0628\u0647 \u0627\u0632\u0627\u06cc \u0647\u0631 \u067e\u0632\u0634\u06a9 \u06cc\u0627 \u06a9\u0644 \u0645\u0631\u06a9\u0632 \u062f\u0631\u0645\u0627\u0646\u06cc"
                            }
                          </div>
                        </div>
                      </li>
                      <li
                        className={classNames(
                          projectcss.all,
                          projectcss.li,
                          sty.li__ir8S
                        )}
                      >
                        <div
                          className={classNames(
                            projectcss.all,
                            sty.freeBox__la0E
                          )}
                        >
                          <div
                            className={classNames(
                              projectcss.all,
                              projectcss.__wab_text,
                              sty.text__qgJgh
                            )}
                          >
                            {
                              "\u0627\u0645\u06a9\u0627\u0646 \u062a\u0639\u0631\u06cc\u0641 \u06cc\u06a9 \u0628\u0627\u0632\u0647 \u0632\u0645\u0627\u0646\u06cc \u062a\u0639\u0637\u06cc\u0644 \u0628\u0647 \u0627\u0632\u0627\u06cc \u0647\u0631 \u067e\u0632\u0634\u06a9 \u06cc\u0627 \u06a9\u0644 \u0645\u0631\u06a9\u0632 \u062f\u0631\u0645\u0627\u0646\u06cc"
                            }
                          </div>
                        </div>
                      </li>
                      <li
                        className={classNames(
                          projectcss.all,
                          projectcss.li,
                          sty.li__wGfG1
                        )}
                      >
                        <div
                          className={classNames(
                            projectcss.all,
                            sty.freeBox__vjDvi
                          )}
                        >
                          <div
                            className={classNames(
                              projectcss.all,
                              projectcss.__wab_text,
                              sty.text__gz96J
                            )}
                          >
                            {
                              "\u0627\u0645\u06a9\u0627\u0646 \u062a\u0639\u0631\u06cc\u0641 \u0645\u0631\u062e\u0635\u06cc \u0628\u0647 \u0635\u0648\u0631\u062a \u0633\u0627\u0639\u062a\u06cc \u0628\u0631\u0627\u06cc \u067e\u0632\u0634\u06a9 "
                            }
                          </div>
                        </div>
                      </li>
                      <li
                        className={classNames(
                          projectcss.all,
                          projectcss.li,
                          sty.li__uMFlB
                        )}
                      >
                        <div
                          className={classNames(
                            projectcss.all,
                            sty.freeBox__yPr6V
                          )}
                        >
                          <div
                            className={classNames(
                              projectcss.all,
                              projectcss.__wab_text,
                              sty.text__wQVw
                            )}
                          >
                            {
                              "\u0648\u062c\u0648\u062f \u0644\u06cc\u0633\u062a \u06a9\u0644\u06cc\u0647 \u062a\u0639\u0637\u06cc\u0644\u0627\u062a \u0634\u0645\u0633\u06cc \u0648 \u0642\u0645\u0631\u06cc \u0648 \u0645\u06cc\u0644\u0627\u062f\u06cc"
                            }
                          </div>
                        </div>
                      </li>
                    </ul>
                  </div>
                  <div
                    className={classNames(projectcss.all, sty.freeBox__tcdV)}
                    dir={"rtl"}
                  >
                    <h3
                      className={classNames(
                        projectcss.all,
                        projectcss.h3,
                        projectcss.__wab_text,
                        sty.h3__vrmnr
                      )}
                    >
                      {
                        "\u06af\u0632\u0627\u0631\u0634 \u06af\u06cc\u0631\u06cc:"
                      }
                    </h3>
                    <ul
                      className={classNames(
                        projectcss.all,
                        projectcss.ul,
                        sty.ul__f1Zir
                      )}
                      dir={"rtl"}
                    >
                      <li
                        className={classNames(
                          projectcss.all,
                          projectcss.li,
                          sty.li__hx9Ku
                        )}
                      >
                        <div
                          className={classNames(
                            projectcss.all,
                            sty.freeBox__q4Pc
                          )}
                        >
                          <div
                            className={classNames(
                              projectcss.all,
                              projectcss.__wab_text,
                              sty.text__mK4Ca
                            )}
                          >
                            {
                              "\u06af\u0632\u0627\u0631\u0634 \u0646\u0648\u0628\u062a \u062f\u0647\u06cc \u0645\u0631\u06a9\u0632 \u0628\u0627 \u0641\u06cc\u0644\u062a\u0631\u0647\u0627\u06cc \u0645\u062a\u0646\u0648\u0639"
                            }
                          </div>
                        </div>
                      </li>
                      <li
                        className={classNames(
                          projectcss.all,
                          projectcss.li,
                          sty.li__i7Ixm
                        )}
                      >
                        <div
                          className={classNames(
                            projectcss.all,
                            sty.freeBox___8SCwT
                          )}
                        >
                          <div
                            className={classNames(
                              projectcss.all,
                              projectcss.__wab_text,
                              sty.text__wBogG
                            )}
                          >
                            {
                              "\u0627\u0631\u0627\u0626\u0647 \u06af\u0632\u0627\u0631\u0634 \u06cc\u0647 \u0634\u06a9\u0644 \u0646\u0645\u0648\u062f\u0627\u0631\u06cc"
                            }
                          </div>
                        </div>
                      </li>
                      <li
                        className={classNames(
                          projectcss.all,
                          projectcss.li,
                          sty.li__a4Df
                        )}
                      >
                        <div
                          className={classNames(
                            projectcss.all,
                            sty.freeBox__yUh3W
                          )}
                        >
                          <div
                            className={classNames(
                              projectcss.all,
                              projectcss.__wab_text,
                              sty.text__wd2X
                            )}
                          >
                            {
                              "\u0627\u0645\u06a9\u0627\u0646 \u062a\u0639\u06cc\u06cc\u0646 \u0644\u06cc\u0633\u062a \u0633\u062a\u0648\u0646 \u0647\u0627\u06cc \u06af\u0632\u0627\u0631\u0634 \u0648 \u0646\u0648\u0639 \u0645\u0631\u062a\u0628 \u0633\u0627\u0632\u06cc \u0628\u0647 \u0635\u0648\u0631\u062a \u067e\u0648\u06cc\u0627"
                            }
                          </div>
                        </div>
                      </li>
                      <li
                        className={classNames(
                          projectcss.all,
                          projectcss.li,
                          sty.li__jnVzP
                        )}
                      >
                        <div
                          className={classNames(
                            projectcss.all,
                            sty.freeBox__zbzpb
                          )}
                        >
                          <div
                            className={classNames(
                              projectcss.all,
                              projectcss.__wab_text,
                              sty.text__k357B
                            )}
                          >
                            {
                              "\u0686\u0627\u067e \u06af\u0632\u0627\u0631\u0634 \u0646\u0648\u0628\u062a \u0647\u0627 \u0648 \u06cc\u0627 \u06af\u0631\u0641\u062a\u0646 \u062e\u0631\u0648\u062c\u06cc \u0628\u0627 \u0641\u0631\u0645\u062a \u0627\u06a9\u0633\u0644"
                            }
                          </div>
                        </div>
                      </li>
                    </ul>
                  </div>
                  <div
                    className={classNames(projectcss.all, sty.freeBox__xv6AY)}
                    dir={"rtl"}
                  >
                    <h3
                      className={classNames(
                        projectcss.all,
                        projectcss.h3,
                        projectcss.__wab_text,
                        sty.h3__ahVCv
                      )}
                    >
                      {
                        "\u0645\u062f\u06cc\u0631\u062a \u062f\u0633\u062a\u0631\u0633\u06cc:"
                      }
                    </h3>
                    <ul
                      className={classNames(
                        projectcss.all,
                        projectcss.ul,
                        sty.ul__eTyTm
                      )}
                      dir={"rtl"}
                    >
                      <li
                        className={classNames(
                          projectcss.all,
                          projectcss.li,
                          sty.li___0Lxjq
                        )}
                      >
                        <div
                          className={classNames(
                            projectcss.all,
                            sty.freeBox__ifcqI
                          )}
                        >
                          <div
                            className={classNames(
                              projectcss.all,
                              projectcss.__wab_text,
                              sty.text__qbugQ
                            )}
                          >
                            {
                              "\u0627\u0645\u06a9\u0627\u0646 \u062a\u0639\u0631\u06cc\u0641 \u062f\u0633\u062a\u0631\u0633\u06cc \u0628\u0647 \u0627\u0632\u0627\u06cc \u0647\u0631 \u0646\u0642\u0634 \u0633\u0627\u0632\u0645\u0627\u0646\u06cc"
                            }
                          </div>
                        </div>
                      </li>
                      <li
                        className={classNames(
                          projectcss.all,
                          projectcss.li,
                          sty.li__zs9Du
                        )}
                      >
                        <div
                          className={classNames(
                            projectcss.all,
                            sty.freeBox__fwxZ
                          )}
                        >
                          <div
                            className={classNames(
                              projectcss.all,
                              projectcss.__wab_text,
                              sty.text__oFlTa
                            )}
                          >
                            {
                              "\u0627\u0645\u06a9\u0627\u0646 \u062a\u0639\u0631\u06cc\u0641 \u0648 \u062a\u062e\u0635\u06cc\u0635 \u0646\u0642\u0634 \u0647\u0627\u06cc \u0633\u0627\u0632\u0645\u0627\u0646\u06cc \u0628\u0647 \u06a9\u0627\u0631\u0628\u0631\u0627\u0646"
                            }
                          </div>
                        </div>
                      </li>
                    </ul>
                  </div>
                  <div
                    className={classNames(projectcss.all, sty.freeBox__wBlFt)}
                    dir={"rtl"}
                  >
                    <Button
                      children2={
                        "\u0627\u0641\u0632\u0648\u062f\u0646 \u0628\u0647 \u0645\u0627\u0634\u06cc\u0646 \u062d\u0633\u0627\u0628"
                      }
                      className={classNames(
                        "__wab_instance",
                        sty.button__a25GC
                      )}
                      onClick={async event => {
                        const $steps = {};

                        $steps["updateReservationCheckIsChecked"] = true
                          ? (() => {
                              const actionArgs = {
                                variable: {
                                  objRoot: $state,
                                  variablePath: [
                                    "reservationCheck",
                                    "isChecked"
                                  ]
                                },
                                operation: 0,
                                value: true
                              };
                              return (({
                                variable,
                                value,
                                startIndex,
                                deleteCount
                              }) => {
                                if (!variable) {
                                  return;
                                }
                                const { objRoot, variablePath } = variable;

                                $stateSet(objRoot, variablePath, value);
                                return value;
                              })?.apply(null, [actionArgs]);
                            })()
                          : undefined;
                        if (
                          $steps["updateReservationCheckIsChecked"] != null &&
                          typeof $steps["updateReservationCheckIsChecked"] ===
                            "object" &&
                          typeof $steps["updateReservationCheckIsChecked"]
                            .then === "function"
                        ) {
                          $steps["updateReservationCheckIsChecked"] =
                            await $steps["updateReservationCheckIsChecked"];
                        }

                        $steps["invokeGlobalAction"] = true
                          ? (() => {
                              const actionArgs = {
                                args: [
                                  "info",
                                  "\u0645\u0627\u0698\u0648\u0644 \u0646\u0648\u0628\u062a \u062f\u0647\u06cc \u0628\u0647 \u0645\u0627\u0634\u06cc\u0646 \u062d\u0633\u0627\u0628 \u0627\u0641\u0632\u0648\u062f\u0647 \u0634\u062f"
                                ]
                              };
                              return $globalActions[
                                "plasmic-antd5-config-provider.showNotification"
                              ]?.apply(null, [...actionArgs.args]);
                            })()
                          : undefined;
                        if (
                          $steps["invokeGlobalAction"] != null &&
                          typeof $steps["invokeGlobalAction"] === "object" &&
                          typeof $steps["invokeGlobalAction"].then ===
                            "function"
                        ) {
                          $steps["invokeGlobalAction"] = await $steps[
                            "invokeGlobalAction"
                          ];
                        }
                      }}
                    />
                  </div>
                </div>
              ) : null}
              {(() => {
                try {
                  return $state.clPhoneReservationStatus;
                } catch (e) {
                  if (
                    e instanceof TypeError ||
                    e?.plasmicType === "PlasmicUndefinedDataError"
                  ) {
                    return true;
                  }
                  throw e;
                }
              })() ? (
                <div
                  data-plasmic-name={"gridPhoneReserve"}
                  data-plasmic-override={overrides.gridPhoneReserve}
                  className={classNames(
                    projectcss.all,
                    sty.gridPhoneReserve,
                    "grid_phonereservation"
                  )}
                  dir={"rtl"}
                >
                  <div
                    className={classNames(projectcss.all, sty.freeBox__erOk9)}
                  >
                    <div
                      className={classNames(projectcss.all, sty.freeBox__eCAu)}
                    >
                      <div
                        className={classNames(
                          projectcss.all,
                          sty.freeBox__wVwgi
                        )}
                      >
                        <h2
                          className={classNames(
                            projectcss.all,
                            projectcss.h2,
                            projectcss.__wab_text,
                            sty.h2__tRfFm
                          )}
                        >
                          {
                            "\u0645\u0627\u0698\u0648\u0644 \u0646\u0648\u0628\u062a \u062f\u0647\u06cc \u062a\u0644\u0641\u0646\u06cc"
                          }
                        </h2>
                      </div>
                    </div>
                  </div>
                  <div
                    className={classNames(projectcss.all, sty.freeBox__asH6E)}
                  />

                  <div
                    className={classNames(projectcss.all, sty.freeBox__jVdmW)}
                    dir={"rtl"}
                  >
                    <div
                      className={classNames(
                        projectcss.all,
                        sty.freeBox___0Wifm
                      )}
                    >
                      <h3
                        className={classNames(
                          projectcss.all,
                          projectcss.h3,
                          projectcss.__wab_text,
                          sty.h3___4Ij4F
                        )}
                      >
                        {
                          "\u0627\u0628\u0632\u0627\u0631 \u0686\u0627\u0631\u062a \u0633\u0627\u0632 \u062a\u0644\u0641\u0646\u06cc:"
                        }
                      </h3>
                    </div>
                    <ul
                      className={classNames(
                        projectcss.all,
                        projectcss.ul,
                        sty.ul__hiyJ
                      )}
                      dir={"rtl"}
                    >
                      <li
                        className={classNames(
                          projectcss.all,
                          projectcss.li,
                          sty.li__cyMv5
                        )}
                      >
                        <div
                          className={classNames(
                            projectcss.all,
                            sty.freeBox__p2L24
                          )}
                        >
                          <div
                            className={classNames(
                              projectcss.all,
                              projectcss.__wab_text,
                              sty.text___3JuLs
                            )}
                          >
                            {
                              "\u062a\u0639\u0631\u06cc\u0641 \u06a9\u0644\u06cc\u0647 \u0645\u0631\u0627\u062d\u0644 \u0686\u0627\u0631\u062a \u062a\u0644\u0641\u0646\u06cc \u0628\u0647 \u0635\u0648\u0631\u062a \u0641\u0644\u0648\u0686\u0627\u0631\u062a"
                            }
                          </div>
                        </div>
                      </li>
                      <li
                        className={classNames(
                          projectcss.all,
                          projectcss.li,
                          sty.li__rNhbv
                        )}
                      >
                        <div
                          className={classNames(
                            projectcss.all,
                            sty.freeBox__lzsEc
                          )}
                        >
                          <div
                            className={classNames(
                              projectcss.all,
                              projectcss.__wab_text,
                              sty.text__dhOpT
                            )}
                          >
                            {
                              "\u0622\u067e\u0644\u0648\u062f \u0641\u0627\u06cc\u0644 \u0647\u0627\u06cc \u0635\u0648\u062a\u06cc \u062f\u0627\u062e\u0644 \u0633\u0627\u062e\u062a\u0627\u0631 \u06cc\u06a9\u067e\u0627\u0631\u0686\u0647 \u0645\u062f\u06cc\u0631\u06cc\u062a \u0631\u0633\u0627\u0646\u0647"
                            }
                          </div>
                        </div>
                      </li>
                      <li
                        className={classNames(
                          projectcss.all,
                          projectcss.li,
                          sty.li__hNXcP
                        )}
                      >
                        <div
                          className={classNames(
                            projectcss.all,
                            sty.freeBox__tm4SJ
                          )}
                        >
                          <div
                            className={classNames(
                              projectcss.all,
                              projectcss.__wab_text,
                              sty.text__zlZy
                            )}
                          >
                            {
                              "\u0627\u062c\u0631\u0627\u06cc \u0639\u0645\u0644\u06cc\u0627\u062a \u0647\u0627\u06cc \u0645\u0642\u0627\u06cc\u0633\u0647 \u0627\u06cc\u06cc \u0628\u0631\u0627\u06cc \u0627\u0646\u062a\u062e\u0627\u0628 \u0632\u0648\u062f\u062a\u0631\u06cc\u0646 \u0646\u0648\u0628\u062a \u062e\u0627\u0644\u06cc"
                            }
                          </div>
                        </div>
                      </li>
                      <li
                        className={classNames(
                          projectcss.all,
                          projectcss.li,
                          sty.li__mvHir
                        )}
                      >
                        <div
                          className={classNames(
                            projectcss.all,
                            sty.freeBox__zzZqH
                          )}
                        >
                          <div
                            className={classNames(
                              projectcss.all,
                              projectcss.__wab_text,
                              sty.text__qPnIk
                            )}
                          >
                            {
                              "\u062a\u0639\u0631\u06cc\u0641 \u0634\u0631\u0637 \u0648 \u062d\u0644\u0642\u0647 \u0647\u0627\u06cc \u067e\u06cc\u0634\u0631\u0641\u062a\u0647"
                            }
                          </div>
                        </div>
                      </li>
                      <li
                        className={classNames(
                          projectcss.all,
                          projectcss.li,
                          sty.li__nz0Os
                        )}
                      >
                        <div
                          className={classNames(
                            projectcss.all,
                            sty.freeBox__e2YrA
                          )}
                        >
                          <div
                            className={classNames(
                              projectcss.all,
                              projectcss.__wab_text,
                              sty.text__jiuAz
                            )}
                          >
                            {
                              "\u062b\u0628\u062a \u0644\u0627\u06af \u06a9\u0644\u06cc\u0647 \u0645\u0631\u0627\u062d\u0644 \u0627\u062c\u0631\u0627\u06cc \u0686\u0627\u0631\u062a \u062a\u0644\u0641\u0646\u06cc \u0627\u062e\u062a\u0635\u0627\u0635\u0627 \u0628\u0647 \u0627\u0632\u0627\u06cc \u0647\u0631 \u062a\u0645\u0627\u0633 \u0627\u0632 \u0647\u0631 \u0628\u06cc\u0645\u0627\u0631"
                            }
                          </div>
                        </div>
                      </li>
                      <li
                        className={classNames(
                          projectcss.all,
                          projectcss.li,
                          sty.li__a4Pc
                        )}
                      >
                        <div
                          className={classNames(
                            projectcss.all,
                            sty.freeBox___3Dktr
                          )}
                        >
                          <div
                            className={classNames(
                              projectcss.all,
                              projectcss.__wab_text,
                              sty.text___3Z4Rq
                            )}
                          >
                            {
                              "\u06af\u0632\u0627\u0631\u0634 \u0648\u0636\u0639\u06cc\u062a \u062a\u0645\u0627\u0633\u0647\u0627"
                            }
                          </div>
                        </div>
                      </li>
                      <li
                        className={classNames(
                          projectcss.all,
                          projectcss.li,
                          sty.li__nobVb
                        )}
                      >
                        <div
                          className={classNames(
                            projectcss.all,
                            sty.freeBox__fUwLx
                          )}
                        >
                          <div
                            className={classNames(
                              projectcss.all,
                              projectcss.__wab_text,
                              sty.text__soiO8
                            )}
                          >
                            {
                              "\u0627\u0645\u06a9\u0627\u0646 \u0636\u0628\u0637 \u0645\u06a9\u0627\u0644\u0645\u0627\u062a"
                            }
                          </div>
                        </div>
                      </li>
                    </ul>
                  </div>
                  <div
                    className={classNames(projectcss.all, sty.freeBox__urbU7)}
                    dir={"rtl"}
                  >
                    <h3
                      className={classNames(
                        projectcss.all,
                        projectcss.h3,
                        projectcss.__wab_text,
                        sty.h3__zhwAd
                      )}
                    >
                      {
                        "\u0648\u062c\u0648\u062f \u062a\u0639\u062f\u0627\u062f\u06cc \u0627\u0632 \u0686\u0627\u0631\u062a\u0647\u0627\u06cc \u062a\u0644\u0641\u0646\u06cc \u067e\u0631\u06a9\u0627\u0631\u0628\u0631\u062f \u0628\u0647 \u0635\u0648\u0631\u062a \u067e\u06cc\u0634\u0641\u0631\u0636:"
                      }
                    </h3>
                    <ul
                      className={classNames(
                        projectcss.all,
                        projectcss.ul,
                        sty.ul__u3NAb
                      )}
                      dir={"rtl"}
                    >
                      <li
                        className={classNames(
                          projectcss.all,
                          projectcss.li,
                          sty.li___7GQm
                        )}
                      >
                        <div
                          className={classNames(
                            projectcss.all,
                            sty.freeBox__ockrg
                          )}
                        >
                          <div
                            className={classNames(
                              projectcss.all,
                              projectcss.__wab_text,
                              sty.text__clgkf
                            )}
                          >
                            {
                              "\u067e\u06cc\u0634\u0646\u0647\u0627\u062f \u0627\u0648\u0644\u06cc\u0646 \u0646\u0648\u0628\u062a \u062e\u0627\u0644\u06cc"
                            }
                          </div>
                        </div>
                      </li>
                      <li
                        className={classNames(
                          projectcss.all,
                          projectcss.li,
                          sty.li__zbAni
                        )}
                      >
                        <div
                          className={classNames(
                            projectcss.all,
                            sty.freeBox__jbp4Y
                          )}
                        >
                          <div
                            className={classNames(
                              projectcss.all,
                              projectcss.__wab_text,
                              sty.text__ta3Kn
                            )}
                          >
                            {
                              "\u067e\u06cc\u0634\u0646\u0647\u0627\u062f \u0646\u0648\u0628\u062a \u062f\u0631 \u0635\u0648\u0631\u062a \u0645\u0646\u0627\u0633\u0628 \u0646\u0628\u0648\u062f\u0646 \u0627\u06cc\u0646 \u0646\u0648\u0628\u062a"
                            }
                          </div>
                        </div>
                      </li>
                      <li
                        className={classNames(
                          projectcss.all,
                          projectcss.li,
                          sty.li__zbqy8
                        )}
                      >
                        <div
                          className={classNames(
                            projectcss.all,
                            sty.freeBox__mXy1M
                          )}
                        >
                          <div
                            className={classNames(
                              projectcss.all,
                              projectcss.__wab_text,
                              sty.text__mU8Qn
                            )}
                          >
                            {
                              " \u06af\u0631\u0641\u062a\u0646 \u0646\u0648\u0628\u062a \u062f\u0631 \u062a\u0627\u0631\u06cc\u062e \u062e\u0627\u0635"
                            }
                          </div>
                        </div>
                      </li>
                      <li
                        className={classNames(
                          projectcss.all,
                          projectcss.li,
                          sty.li__mk4Aw
                        )}
                      >
                        <div
                          className={classNames(
                            projectcss.all,
                            sty.freeBox__ut5Jw
                          )}
                        >
                          <div
                            className={classNames(
                              projectcss.all,
                              projectcss.__wab_text,
                              sty.text__ouiai
                            )}
                          >
                            {
                              "\u0627\u0645\u06a9\u0627\u0646 \u062c\u0627\u0628\u062c\u0627\u06cc\u06cc \u0646\u0648\u0628\u062a"
                            }
                          </div>
                        </div>
                      </li>
                      <li
                        className={classNames(
                          projectcss.all,
                          projectcss.li,
                          sty.li__syc0D
                        )}
                      >
                        <div
                          className={classNames(
                            projectcss.all,
                            sty.freeBox__bcoaV
                          )}
                        >
                          <div
                            className={classNames(
                              projectcss.all,
                              projectcss.__wab_text,
                              sty.text__mxJpi
                            )}
                          >
                            {
                              "\u0627\u0645\u06a9\u0627\u0646 \u062d\u0630\u0641 \u0646\u0648\u0628\u062a"
                            }
                          </div>
                        </div>
                      </li>
                      <li
                        className={classNames(
                          projectcss.all,
                          projectcss.li,
                          sty.li___3QpDw
                        )}
                      >
                        <div
                          className={classNames(
                            projectcss.all,
                            sty.freeBox__khscN
                          )}
                        >
                          <div
                            className={classNames(
                              projectcss.all,
                              projectcss.__wab_text,
                              sty.text__cMzxV
                            )}
                          >
                            {
                              "\u0627\u0645\u06a9\u0627\u0646 \u067e\u06cc\u06af\u06cc\u0631\u06cc \u0646\u0648\u0628\u062a"
                            }
                          </div>
                        </div>
                      </li>
                      <li
                        className={classNames(
                          projectcss.all,
                          projectcss.li,
                          sty.li___53CNo
                        )}
                      >
                        <div
                          className={classNames(
                            projectcss.all,
                            sty.freeBox__bSjNa
                          )}
                        >
                          <div
                            className={classNames(
                              projectcss.all,
                              projectcss.__wab_text,
                              sty.text__vltIv
                            )}
                          >
                            {
                              "\u0627\u0645\u06a9\u0627\u0646 \u0627\u062a\u0635\u0627\u0644 \u0628\u0647 \u0627\u067e\u0631\u0627\u062a\u0648\u0631"
                            }
                          </div>
                        </div>
                      </li>
                    </ul>
                  </div>
                  <div
                    className={classNames(projectcss.all, sty.freeBox___3Uyhw)}
                    dir={"rtl"}
                  >
                    <Button
                      children2={
                        "\u0627\u0641\u0632\u0648\u062f\u0646 \u0628\u0647 \u0645\u0627\u0634\u06cc\u0646 \u062d\u0633\u0627\u0628"
                      }
                      className={classNames(
                        "__wab_instance",
                        sty.button__jgr23
                      )}
                      onClick={async event => {
                        const $steps = {};

                        $steps["updateReservationPhoneCheckIsChecked"] = true
                          ? (() => {
                              const actionArgs = {
                                variable: {
                                  objRoot: $state,
                                  variablePath: [
                                    "reservationPhoneCheck",
                                    "isChecked"
                                  ]
                                },
                                operation: 0,
                                value: true
                              };
                              return (({
                                variable,
                                value,
                                startIndex,
                                deleteCount
                              }) => {
                                if (!variable) {
                                  return;
                                }
                                const { objRoot, variablePath } = variable;

                                $stateSet(objRoot, variablePath, value);
                                return value;
                              })?.apply(null, [actionArgs]);
                            })()
                          : undefined;
                        if (
                          $steps["updateReservationPhoneCheckIsChecked"] !=
                            null &&
                          typeof $steps[
                            "updateReservationPhoneCheckIsChecked"
                          ] === "object" &&
                          typeof $steps["updateReservationPhoneCheckIsChecked"]
                            .then === "function"
                        ) {
                          $steps["updateReservationPhoneCheckIsChecked"] =
                            await $steps[
                              "updateReservationPhoneCheckIsChecked"
                            ];
                        }

                        $steps["invokeGlobalAction"] = true
                          ? (() => {
                              const actionArgs = {
                                args: [
                                  "info",
                                  "\u0645\u0627\u0698\u0648\u0644 \u0646\u0648\u0628\u062a \u062f\u0647\u06cc \u062a\u0644\u0641\u0646\u06cc \u0628\u0647 \u0645\u0627\u0634\u06cc\u0646 \u062d\u0633\u0627\u0628 \u0627\u0641\u0632\u0648\u062f\u0647 \u0634\u062f"
                                ]
                              };
                              return $globalActions[
                                "plasmic-antd5-config-provider.showNotification"
                              ]?.apply(null, [...actionArgs.args]);
                            })()
                          : undefined;
                        if (
                          $steps["invokeGlobalAction"] != null &&
                          typeof $steps["invokeGlobalAction"] === "object" &&
                          typeof $steps["invokeGlobalAction"].then ===
                            "function"
                        ) {
                          $steps["invokeGlobalAction"] = await $steps[
                            "invokeGlobalAction"
                          ];
                        }
                      }}
                    />
                  </div>
                </div>
              ) : null}
              {(() => {
                try {
                  return $state.clKioskStatus;
                } catch (e) {
                  if (
                    e instanceof TypeError ||
                    e?.plasmicType === "PlasmicUndefinedDataError"
                  ) {
                    return true;
                  }
                  throw e;
                }
              })() ? (
                <div
                  data-plasmic-name={"gridKiosk"}
                  data-plasmic-override={overrides.gridKiosk}
                  className={classNames(
                    projectcss.all,
                    sty.gridKiosk,
                    "grid_kiosk"
                  )}
                  dir={"rtl"}
                >
                  <div
                    className={classNames(projectcss.all, sty.freeBox___2Duny)}
                  >
                    <div
                      className={classNames(projectcss.all, sty.freeBox__apVc8)}
                    >
                      <div
                        className={classNames(
                          projectcss.all,
                          sty.freeBox__vdqPt
                        )}
                      >
                        <h2
                          className={classNames(
                            projectcss.all,
                            projectcss.h2,
                            projectcss.__wab_text,
                            sty.h2__d5Bga
                          )}
                        >
                          {
                            "\u0645\u0627\u0698\u0648\u0644 \u0645\u062f\u06cc\u0631\u06cc\u062a \u0635\u0641 \u0648 \u0641\u0631\u0627\u062e\u0648\u0627\u0646 \u0628\u06cc\u0645\u0627\u0631"
                          }
                        </h2>
                      </div>
                    </div>
                  </div>
                  <div
                    className={classNames(projectcss.all, sty.freeBox__t3AUq)}
                  />

                  <div
                    className={classNames(projectcss.all, sty.freeBox__bX9Hd)}
                    dir={"rtl"}
                  >
                    <div
                      className={classNames(projectcss.all, sty.freeBox__yVeIb)}
                    >
                      <h3
                        className={classNames(
                          projectcss.all,
                          projectcss.h3,
                          projectcss.__wab_text,
                          sty.h3__zi3YW
                        )}
                      >
                        {
                          "\u0646\u0631\u0645 \u0627\u0641\u0632\u0627\u0631 \u0641\u0631\u0627\u062e\u0648\u0627\u0646:"
                        }
                      </h3>
                    </div>
                    <ul
                      className={classNames(
                        projectcss.all,
                        projectcss.ul,
                        sty.ul__cJlRz
                      )}
                      dir={"rtl"}
                    >
                      <li
                        className={classNames(
                          projectcss.all,
                          projectcss.li,
                          sty.li__telNn
                        )}
                      >
                        <div
                          className={classNames(
                            projectcss.all,
                            sty.freeBox___3Lv4Z
                          )}
                        >
                          <div
                            className={classNames(
                              projectcss.all,
                              projectcss.__wab_text,
                              sty.text___3Bjw2
                            )}
                          >
                            {
                              "\u0627\u0645\u06a9\u0627\u0646 \u062a\u0639\u06cc\u06cc\u0646 \u062d\u062f\u0627\u06a9\u062b\u0631 \u0648 \u062d\u062f\u0627\u0642\u0644 \u0632\u0645\u0627\u0646 \u0642\u0627\u0628\u0644 \u0645\u0631\u0627\u062c\u0639\u0647 \u062a\u0648\u0633\u0637 \u0628\u06cc\u0645\u0627\u0631 (\u062c\u0647\u062a \u0627\u0633\u062a\u0641\u0627\u062f\u0647 \u062f\u0627\u062e\u0644 \u0641\u0631\u0627\u062e\u0648\u0627\u0646 \u0628\u06cc\u0645\u0627\u0631)"
                            }
                          </div>
                        </div>
                      </li>
                      <li
                        className={classNames(
                          projectcss.all,
                          projectcss.li,
                          sty.li__ygwbi
                        )}
                      >
                        <div
                          className={classNames(
                            projectcss.all,
                            sty.freeBox__kZnMs
                          )}
                        >
                          <div
                            className={classNames(
                              projectcss.all,
                              projectcss.__wab_text,
                              sty.text__oiD5
                            )}
                          >
                            {
                              "\u06af\u0632\u0627\u0631\u0634 \u0641\u0631\u0627\u062e\u0648\u0627\u0646\u06cc \u0628\u06cc\u0645\u0627\u0631"
                            }
                          </div>
                        </div>
                      </li>
                      <li
                        className={classNames(
                          projectcss.all,
                          projectcss.li,
                          sty.li__w4Jeh
                        )}
                      >
                        <div
                          className={classNames(
                            projectcss.all,
                            sty.freeBox__irTIh
                          )}
                        >
                          <div
                            className={classNames(
                              projectcss.all,
                              projectcss.__wab_text,
                              sty.text__oa7U4
                            )}
                          >
                            {
                              "\u0627\u0645\u06a9\u0627\u0646 \u062a\u0639\u0631\u06cc\u0641 \u0648 \u0627\u0633\u062a\u0641\u0627\u062f\u0647 \u0627\u0632 \u0641\u0631\u0627\u062e\u0648\u0627\u0646 \u0628\u0647 \u0635\u0648\u0631\u062a \u06a9\u0644\u0648\u062f \u0648 \u0644\u0648\u06a9\u0627\u0644 (\u067e\u06cc\u0634\u0646\u0647\u0627\u062f \u0645\u0627 \u0628\u0647 \u062f\u0644\u06cc\u0644 \u0645\u0634\u06a9\u0644\u0627\u062a \u0627\u0631\u062a\u0628\u0627\u0637 \u0634\u0628\u06a9\u0647 \u0627\u06cc\u06cc \u0627\u0633\u062a\u0641\u0627\u062f\u0647 \u0628\u0647 \u0635\u0648\u0631\u062a \u0644\u0648\u06a9\u0627\u0644 \u0645\u06cc \u0628\u0627\u0634\u062f)"
                            }
                          </div>
                        </div>
                      </li>
                      <li
                        className={classNames(
                          projectcss.all,
                          projectcss.li,
                          sty.li__jdFdt
                        )}
                      >
                        <div
                          className={classNames(
                            projectcss.all,
                            sty.freeBox__yVu14
                          )}
                        >
                          <div
                            className={classNames(
                              projectcss.all,
                              projectcss.__wab_text,
                              sty.text__toj7W
                            )}
                          >
                            {
                              "\u0627\u0645\u06a9\u0627\u0646 \u062a\u0639\u0631\u06cc\u0641 \u0635\u0641 \u0647\u0627\u06cc \u0641\u0631\u0627\u062e\u0648\u0627\u0646 \u0628\u0647 \u062a\u0639\u062f\u0627\u062f \u062f\u0644\u062e\u0648\u0627\u0647 \u0628\u0647 \u0647\u0645\u0631\u0627\u0647 \u0627\u0645\u06a9\u0627\u0646 \u0627\u062e\u062a\u0635\u0627\u0635\u06cc \u0633\u0627\u0632\u06cc \u0634\u0631\u0648\u0639 \u0648 \u067e\u0627\u06cc\u0627\u0646 \u0634\u0645\u0627\u0631\u0647\u060c \u067e\u0632\u0634\u06a9 \u0648 \u0628\u0627\u062c\u0647 \u062c\u0647\u062a \u062a\u0639\u0631\u06cc\u0641 \u0647\u0631 \u0646\u0648\u0639 \u0641\u0631\u0622\u06cc\u0646\u062f \u0633\u0627\u0632\u0645\u0627\u0646\u06cc"
                            }
                          </div>
                        </div>
                      </li>
                    </ul>
                  </div>
                  <div
                    className={classNames(projectcss.all, sty.freeBox__nrXM)}
                    dir={"rtl"}
                  >
                    <div
                      className={classNames(projectcss.all, sty.freeBox__dsOzJ)}
                    >
                      <h3
                        className={classNames(
                          projectcss.all,
                          projectcss.h3,
                          projectcss.__wab_text,
                          sty.h3___3T9Ch
                        )}
                      >
                        {"\u0635\u0641:"}
                      </h3>
                    </div>
                    <ul
                      className={classNames(
                        projectcss.all,
                        projectcss.ul,
                        sty.ul__hwoRh
                      )}
                      dir={"rtl"}
                    >
                      <li
                        className={classNames(
                          projectcss.all,
                          projectcss.li,
                          sty.li__jNqs0
                        )}
                      >
                        <div
                          className={classNames(
                            projectcss.all,
                            sty.freeBox__eTwVl
                          )}
                        >
                          <div
                            className={classNames(
                              projectcss.all,
                              projectcss.__wab_text,
                              sty.text__p8EjH
                            )}
                          >
                            {
                              "\u0627\u0645\u06a9\u0627\u0646 \u0645\u062d\u062f\u0648\u062f \u0633\u0627\u0632\u06cc \u0632\u0645\u0627\u0646 \u0627\u0631\u0627\u0626\u0647 \u062e\u062f\u0645\u062a \u062a\u0648\u0633\u0637 \u0647\u0631 \u0635\u0641"
                            }
                          </div>
                        </div>
                      </li>
                      <li
                        className={classNames(
                          projectcss.all,
                          projectcss.li,
                          sty.li__zCqCx
                        )}
                      >
                        <div
                          className={classNames(
                            projectcss.all,
                            sty.freeBox___3Ueby
                          )}
                        >
                          <div
                            className={classNames(
                              projectcss.all,
                              projectcss.__wab_text,
                              sty.text__g5Joc
                            )}
                          >
                            {
                              "\u0627\u0645\u06a9\u0627\u0646 \u062a\u0639\u0631\u06cc\u0641 \u0634\u0645\u0627\u0631\u0647 \u0647\u0627\u06cc \u0631\u0632\u0631\u0648 \u0628\u0631\u0627\u06cc \u0647\u0631 \u0635\u0641"
                            }
                          </div>
                        </div>
                      </li>
                      <li
                        className={classNames(
                          projectcss.all,
                          projectcss.li,
                          sty.li__md6E
                        )}
                      >
                        <div
                          className={classNames(
                            projectcss.all,
                            sty.freeBox__aTxTd
                          )}
                        >
                          <div
                            className={classNames(
                              projectcss.all,
                              projectcss.__wab_text,
                              sty.text__a0Mjg
                            )}
                          >
                            {
                              "\u0627\u0645\u06a9\u0627\u0646 \u062a\u0639\u0631\u06cc\u0641 \u0635\u0641 \u067e\u06cc\u0634\u0646\u06cc\u0627\u0632 \u0628\u0631\u0627\u06cc \u0647\u0631 \u0635\u0641 \u0641\u0631\u0627\u062e\u0648\u0627\u0646"
                            }
                          </div>
                        </div>
                      </li>
                      <li
                        className={classNames(
                          projectcss.all,
                          projectcss.li,
                          sty.li__xYufI
                        )}
                      >
                        <div
                          className={classNames(
                            projectcss.all,
                            sty.freeBox__gncky
                          )}
                        >
                          <div
                            className={classNames(
                              projectcss.all,
                              projectcss.__wab_text,
                              sty.text___8Djy9
                            )}
                          >
                            {
                              "\u0627\u0645\u06a9\u0627\u0646 \u062e\u0627\u0644\u06cc \u06a9\u0631\u062f\u0646 \u0635\u0641 \u0647\u0627 \u062c\u0647\u062a \u0634\u0631\u0648\u0639 \u0646\u0648\u0628\u062a \u062f\u0647\u06cc \u0627\u0632 \u0634\u0645\u0627\u0631\u0647 \u0635\u0641\u0631"
                            }
                          </div>
                        </div>
                      </li>
                      <li
                        className={classNames(
                          projectcss.all,
                          projectcss.li,
                          sty.li__mW0H0
                        )}
                      >
                        <div
                          className={classNames(
                            projectcss.all,
                            sty.freeBox__cUDs4
                          )}
                        >
                          <div
                            className={classNames(
                              projectcss.all,
                              projectcss.__wab_text,
                              sty.text__ioHv
                            )}
                          >
                            {
                              "\u0627\u0645\u06a9\u0627\u0646 \u062e\u0627\u0644\u06cc \u06a9\u0631\u062f\u0646 \u0635\u0641 \u0647\u0627 \u0628\u0647 \u0635\u0648\u0631\u062a \u062e\u0648\u062f\u06a9\u0627\u0631 \u062f\u0631 \u0633\u0627\u0639\u062a \u062e\u0627\u0635"
                            }
                          </div>
                        </div>
                      </li>
                      <li
                        className={classNames(
                          projectcss.all,
                          projectcss.li,
                          sty.li__l6Ieb
                        )}
                      >
                        <div
                          className={classNames(
                            projectcss.all,
                            sty.freeBox__oUdIe
                          )}
                        >
                          <div
                            className={classNames(
                              projectcss.all,
                              projectcss.__wab_text,
                              sty.text__weNiF
                            )}
                          >
                            {
                              "\u0627\u0645\u06a9\u0627\u0646 \u0627\u0631\u062c\u0627\u0639 \u0646\u0648\u0628\u062a \u0627\u0632 \u06cc\u06a9 \u0635\u0641 \u0628\u0647 \u0635\u0641 \u062f\u06cc\u06af\u0631"
                            }
                          </div>
                        </div>
                      </li>
                    </ul>
                  </div>
                  <div
                    className={classNames(projectcss.all, sty.freeBox__w46Xd)}
                    dir={"rtl"}
                  >
                    <div
                      className={classNames(projectcss.all, sty.freeBox__homVe)}
                    >
                      <h3
                        className={classNames(
                          projectcss.all,
                          projectcss.h3,
                          projectcss.__wab_text,
                          sty.h3___7PAe8
                        )}
                      >
                        {
                          "\u067e\u0634\u062a\u06cc\u0628\u0627\u0646\u06cc \u0627\u0632 \u06a9\u06cc\u0648\u0633\u06a9 \u0646\u0648\u0628\u062a \u062f\u0647\u06cc \u0648 \u0627\u0637\u0644\u0627\u0639 \u0631\u0633\u0627\u0646\u06cc \u0628\u062f\u0648\u0646 \u0645\u062d\u062f\u0648\u062f\u06cc\u062a \u062a\u0639\u062f\u0627\u062f:"
                        }
                      </h3>
                    </div>
                    <ul
                      className={classNames(
                        projectcss.all,
                        projectcss.ul,
                        sty.ul__s8Nmg
                      )}
                      dir={"rtl"}
                    >
                      <li
                        className={classNames(
                          projectcss.all,
                          projectcss.li,
                          sty.li__u8Nsv
                        )}
                      >
                        <div
                          className={classNames(
                            projectcss.all,
                            sty.freeBox__acqYw
                          )}
                        >
                          <div
                            className={classNames(
                              projectcss.all,
                              projectcss.__wab_text,
                              sty.text__raYqa
                            )}
                          >
                            {
                              "\u067e\u0634\u062a\u06cc\u0628\u0627\u0646\u06cc \u0627\u0632 \u06a9\u06cc\u0648\u0633\u06a9 \u0639\u0645\u0648\u062f\u06cc \u06cc\u0627 \u0627\u0641\u0642\u06cc"
                            }
                          </div>
                        </div>
                      </li>
                      <li
                        className={classNames(
                          projectcss.all,
                          projectcss.li,
                          sty.li__quxC
                        )}
                      >
                        <div
                          className={classNames(
                            projectcss.all,
                            sty.freeBox__i0E
                          )}
                        >
                          <div
                            className={classNames(
                              projectcss.all,
                              projectcss.__wab_text,
                              sty.text__wz9U
                            )}
                          >
                            {
                              "\u0642\u0627\u0628\u0644\u06cc\u062a \u0627\u0631\u0627\u0626\u0647 \u0627\u0648\u0644\u06cc\u0646 \u0646\u0648\u0628\u062a \u062e\u0627\u0644\u06cc \u06cc\u0627 \u0627\u0646\u062a\u062e\u0627\u0628 \u0646\u0648\u0628\u062a \u062f\u0631 \u062a\u0627\u0631\u06cc\u062e \u062e\u0627\u0635 \u0648 \u06cc\u0627 \u0647\u0631\u062f\u0648"
                            }
                          </div>
                        </div>
                      </li>
                      <li
                        className={classNames(
                          projectcss.all,
                          projectcss.li,
                          sty.li___3Duo9
                        )}
                      >
                        <div
                          className={classNames(
                            projectcss.all,
                            sty.freeBox___6BGo6
                          )}
                        >
                          <div
                            className={classNames(
                              projectcss.all,
                              projectcss.__wab_text,
                              sty.text__msHf3
                            )}
                          >
                            {
                              "\u0627\u0631\u062c\u0627\u0639 \u062e\u0648\u062f\u06a9\u0627\u0631 \u0628\u0647 \u0635\u0641 \u0647\u0627\u06cc \u067e\u06cc\u0634\u0646\u06cc\u0627\u0632 \u0628\u0627 \u062a\u0648\u062c\u0647 \u0628\u0647 \u067e\u0632\u0634\u06a9"
                            }
                          </div>
                        </div>
                      </li>
                      <li
                        className={classNames(
                          projectcss.all,
                          projectcss.li,
                          sty.li__j0U59
                        )}
                      >
                        <div
                          className={classNames(
                            projectcss.all,
                            sty.freeBox__cOdBj
                          )}
                        >
                          <div
                            className={classNames(
                              projectcss.all,
                              projectcss.__wab_text,
                              sty.text__nMtz3
                            )}
                          >
                            {
                              "\u062a\u0639\u06cc\u06cc\u0646 \u0631\u0648\u0634 \u0645\u0631\u062a\u0628 \u0633\u0627\u0632\u06cc \u0622\u06cc\u062a\u0645 \u0647\u0627\u06cc \u06a9\u06cc\u0648\u0633\u06a9 (\u067e\u0632\u0634\u06a9 \u0648 \u062e\u062f\u0645\u0627\u062a)"
                            }
                          </div>
                        </div>
                      </li>
                      <li
                        className={classNames(
                          projectcss.all,
                          projectcss.li,
                          sty.li___0DxEv
                        )}
                      >
                        <div
                          className={classNames(
                            projectcss.all,
                            sty.freeBox__clEEj
                          )}
                        >
                          <div
                            className={classNames(
                              projectcss.all,
                              projectcss.__wab_text,
                              sty.text__ocoJ6
                            )}
                          >
                            {
                              "\u062b\u0628\u062a \u0646\u0648\u0628\u062a \u062f\u0627\u062e\u0644 \u0686\u0646\u062f \u0635\u0641 \u0641\u0631\u0627\u062e\u0648\u0627\u0646 \u0648 \u0686\u0627\u067e \u0647\u0645\u0632\u0645\u0627\u0646 \u0686\u0646\u062f \u0646\u0648\u0628\u062a \u062f\u0627\u062e\u0644 \u06cc\u06a9 \u0642\u0628\u0636 (\u0628\u0627 \u0642\u0627\u0628\u0644\u06cc\u062a \u062a\u0639\u06cc\u06cc\u0646 \u067e\u06cc\u0634\u0646\u06cc\u0627\u0632)"
                            }
                          </div>
                        </div>
                      </li>
                      <li
                        className={classNames(
                          projectcss.all,
                          projectcss.li,
                          sty.li__nvNi2
                        )}
                      >
                        <div
                          className={classNames(
                            projectcss.all,
                            sty.freeBox__cneKk
                          )}
                        >
                          <div
                            className={classNames(
                              projectcss.all,
                              projectcss.__wab_text,
                              sty.text__ho0YV
                            )}
                          >
                            {
                              "\u06a9\u06cc\u0648\u0633\u06a9 \u0633\u0631\u06cc\u0639 \u0628\u0631\u0627\u06cc \u06a9\u0627\u0631 \u0627\u067e\u0631\u0627\u062a\u0648\u0631\u0647\u0627"
                            }
                          </div>
                        </div>
                      </li>
                    </ul>
                  </div>
                  <div
                    className={classNames(projectcss.all, sty.freeBox__efEcx)}
                    dir={"rtl"}
                  >
                    <h3
                      className={classNames(
                        projectcss.all,
                        projectcss.h3,
                        projectcss.__wab_text,
                        sty.h3__al1L2
                      )}
                    >
                      {
                        "\u0633\u0627\u06cc\u0631 \u0642\u0627\u0628\u0644\u06cc\u062a \u0647\u0627:"
                      }
                    </h3>
                    <ul
                      className={classNames(
                        projectcss.all,
                        projectcss.ul,
                        sty.ul__cDvd
                      )}
                      dir={"rtl"}
                    >
                      <li
                        className={classNames(
                          projectcss.all,
                          projectcss.li,
                          sty.li__m7ZmT
                        )}
                      >
                        <div
                          className={classNames(
                            projectcss.all,
                            sty.freeBox___5ICpt
                          )}
                        >
                          <div
                            className={classNames(
                              projectcss.all,
                              projectcss.__wab_text,
                              sty.text___0OExh
                            )}
                          >
                            {
                              "\u067e\u0634\u062a\u06cc\u0628\u0627\u0646\u06cc \u0627\u0632 \u062a\u0627\u0628\u0644\u0648 \u0647\u0627\u06cc \u0627\u0639\u0644\u0627\u0645 \u0648\u0636\u0639\u06cc\u062a \u0635\u0641 \u0628\u062f\u0648\u0646 \u0645\u062d\u062f\u0648\u062f\u06cc\u062a \u062a\u0639\u062f\u0627\u062f"
                            }
                          </div>
                        </div>
                      </li>
                      <li
                        className={classNames(
                          projectcss.all,
                          projectcss.li,
                          sty.li___09JjH
                        )}
                      >
                        <div
                          className={classNames(
                            projectcss.all,
                            sty.freeBox__tadIz
                          )}
                        >
                          <div
                            className={classNames(
                              projectcss.all,
                              projectcss.__wab_text,
                              sty.text__haRt
                            )}
                          >
                            {
                              "\u067e\u0634\u062a\u06cc\u0628\u0627\u0646\u06cc \u0627\u0632 \u0633\u0631\u0648\u06cc\u0633 \u067e\u06cc\u062c\u06cc\u0646\u06af \u0648 \u0627\u0639\u0644\u0627\u0645 \u0635\u0648\u062a\u06cc \u0628\u062f\u0648\u0646 \u0645\u062d\u062f\u0648\u062f\u06cc\u062a \u062a\u0639\u062f\u0627\u062f"
                            }
                          </div>
                        </div>
                      </li>
                      <li
                        className={classNames(
                          projectcss.all,
                          projectcss.li,
                          sty.li__rs90S
                        )}
                      >
                        <div
                          className={classNames(
                            projectcss.all,
                            sty.freeBox__pcyQa
                          )}
                        >
                          <div
                            className={classNames(
                              projectcss.all,
                              projectcss.__wab_text,
                              sty.text__xpUag
                            )}
                          >
                            {
                              "\u067e\u0634\u062a\u06cc\u0628\u0627\u0646\u06cc \u0627\u0632 \u0628\u0627\u062c\u0647 \u0647\u0627\u06cc \u0641\u0631\u0627\u062e\u0648\u0627\u0646\u06cc \u0646\u0631\u0645 \u0627\u0641\u0632\u0627\u0631\u06cc \u0627\u0639\u0644\u0627\u0645 \u0646\u0648\u0628\u062a \u0628\u062f\u0648\u0646 \u0645\u062d\u062f\u0648\u062f\u06cc\u062a \u062a\u0639\u062f\u0627\u062f"
                            }
                          </div>
                        </div>
                      </li>
                      <li
                        className={classNames(
                          projectcss.all,
                          projectcss.li,
                          sty.li__gGuJe
                        )}
                      >
                        <div
                          className={classNames(
                            projectcss.all,
                            sty.freeBox__jTuwh
                          )}
                        >
                          <div
                            className={classNames(
                              projectcss.all,
                              projectcss.__wab_text,
                              sty.text___9Tish
                            )}
                          >
                            {
                              "\u0646\u0638\u0631 \u0633\u0646\u062c\u06cc \u0627\u0632 \u0637\u0631\u06cc\u0642 \u062a\u0644\u0641\u0646 \u06af\u0648\u06cc\u0627 \u0628\u0627 \u067e\u0627\u0633\u062e \u0647\u0627\u06cc \u06af\u0632\u06cc\u0646\u0647 \u0627\u06cc\u06cc \u06cc\u0627 \u06af\u0631\u0641\u062a\u0646 \u0627\u0645\u062a\u06cc\u0627\u0632"
                            }
                          </div>
                        </div>
                      </li>
                      <li
                        className={classNames(
                          projectcss.all,
                          projectcss.li,
                          sty.li__zzBeR
                        )}
                      >
                        <div
                          className={classNames(
                            projectcss.all,
                            sty.freeBox__cwfUl
                          )}
                        >
                          <div
                            className={classNames(
                              projectcss.all,
                              projectcss.__wab_text,
                              sty.text__hFcI4
                            )}
                          >
                            {
                              "\u0646\u0638\u0631 \u0633\u0646\u062c\u06cc \u0627\u0632 \u0637\u0631\u06cc\u0642 \u062a\u0644\u0641\u0646 \u06af\u0648\u06cc\u0627 \u0648 \u0636\u0628\u0637 \u067e\u0627\u0633\u062e \u0628\u06cc\u0645\u0627\u0631"
                            }
                          </div>
                        </div>
                      </li>
                      <li
                        className={classNames(
                          projectcss.all,
                          projectcss.li,
                          sty.li__jyUm4
                        )}
                      >
                        <div
                          className={classNames(
                            projectcss.all,
                            sty.freeBox__fiY1L
                          )}
                        >
                          <div
                            className={classNames(
                              projectcss.all,
                              projectcss.__wab_text,
                              sty.text__x9Jo2
                            )}
                          >
                            {
                              "\u0646\u0638\u0631 \u0633\u0646\u062c\u06cc \u0627\u0632 \u0637\u0631\u06cc\u0642 \u067e\u06cc\u0627\u0645\u06a9 "
                            }
                          </div>
                        </div>
                      </li>
                    </ul>
                  </div>
                  <div
                    className={classNames(projectcss.all, sty.freeBox__fRe0M)}
                    dir={"rtl"}
                  >
                    <Button
                      children2={
                        "\u0627\u0641\u0632\u0648\u062f\u0646 \u0628\u0647 \u0645\u0627\u0634\u06cc\u0646 \u062d\u0633\u0627\u0628"
                      }
                      className={classNames(
                        "__wab_instance",
                        sty.button__y0EkJ
                      )}
                      onClick={async event => {
                        const $steps = {};

                        $steps["updateKioskResevationCheckIsChecked"] = true
                          ? (() => {
                              const actionArgs = {
                                variable: {
                                  objRoot: $state,
                                  variablePath: [
                                    "kioskResevationCheck",
                                    "isChecked"
                                  ]
                                },
                                operation: 0,
                                value: true
                              };
                              return (({
                                variable,
                                value,
                                startIndex,
                                deleteCount
                              }) => {
                                if (!variable) {
                                  return;
                                }
                                const { objRoot, variablePath } = variable;

                                $stateSet(objRoot, variablePath, value);
                                return value;
                              })?.apply(null, [actionArgs]);
                            })()
                          : undefined;
                        if (
                          $steps["updateKioskResevationCheckIsChecked"] !=
                            null &&
                          typeof $steps[
                            "updateKioskResevationCheckIsChecked"
                          ] === "object" &&
                          typeof $steps["updateKioskResevationCheckIsChecked"]
                            .then === "function"
                        ) {
                          $steps["updateKioskResevationCheckIsChecked"] =
                            await $steps["updateKioskResevationCheckIsChecked"];
                        }

                        $steps["invokeGlobalAction"] = true
                          ? (() => {
                              const actionArgs = {
                                args: [
                                  "info",
                                  "\u0645\u0627\u0698\u0648\u0644 \u0645\u062f\u06cc\u0631\u06cc\u062a \u0635\u0641 \u0648 \u0641\u0631\u0627\u062e\u0648\u0627\u0646 \u0628\u0647 \u0645\u0627\u0634\u06cc\u0646 \u062d\u0633\u0627\u0628 \u0627\u0641\u0632\u0648\u062f\u0647 \u0634\u062f"
                                ]
                              };
                              return $globalActions[
                                "plasmic-antd5-config-provider.showNotification"
                              ]?.apply(null, [...actionArgs.args]);
                            })()
                          : undefined;
                        if (
                          $steps["invokeGlobalAction"] != null &&
                          typeof $steps["invokeGlobalAction"] === "object" &&
                          typeof $steps["invokeGlobalAction"].then ===
                            "function"
                        ) {
                          $steps["invokeGlobalAction"] = await $steps[
                            "invokeGlobalAction"
                          ];
                        }
                      }}
                    />
                  </div>
                </div>
              ) : null}
              {(() => {
                try {
                  return $state.clAnnouncementState;
                } catch (e) {
                  if (
                    e instanceof TypeError ||
                    e?.plasmicType === "PlasmicUndefinedDataError"
                  ) {
                    return true;
                  }
                  throw e;
                }
              })() ? (
                <div
                  data-plasmic-name={"gridAnnouncement"}
                  data-plasmic-override={overrides.gridAnnouncement}
                  className={classNames(
                    projectcss.all,
                    sty.gridAnnouncement,
                    "grid_announcement"
                  )}
                  dir={"rtl"}
                >
                  <div
                    className={classNames(projectcss.all, sty.freeBox__e7XEy)}
                  >
                    <div
                      className={classNames(projectcss.all, sty.freeBox__eCo9H)}
                    >
                      <div
                        className={classNames(
                          projectcss.all,
                          sty.freeBox__hrYcx
                        )}
                      >
                        <h2
                          className={classNames(
                            projectcss.all,
                            projectcss.h2,
                            projectcss.__wab_text,
                            sty.h2__oOyE5
                          )}
                        >
                          {
                            "\u0645\u0627\u0698\u0648\u0644 \u0627\u0639\u0644\u0627\u0646\u0627\u062a"
                          }
                        </h2>
                      </div>
                    </div>
                  </div>
                  <div
                    className={classNames(projectcss.all, sty.freeBox___0Vc9S)}
                  />

                  <div
                    className={classNames(projectcss.all, sty.freeBox__w6T)}
                    dir={"rtl"}
                  >
                    <h3
                      className={classNames(
                        projectcss.all,
                        projectcss.h3,
                        projectcss.__wab_text,
                        sty.h3__xa6Vr
                      )}
                    >
                      {
                        "\u0627\u0645\u06a9\u0627\u0646 \u06cc\u0627\u062f\u0622\u0648\u0631\u06cc \u0646\u0648\u0628\u062a:"
                      }
                    </h3>
                    <ul
                      className={classNames(
                        projectcss.all,
                        projectcss.ul,
                        sty.ul___1P6Qt
                      )}
                      dir={"rtl"}
                    >
                      <li
                        className={classNames(
                          projectcss.all,
                          projectcss.li,
                          sty.li__ndVnf
                        )}
                      >
                        <div
                          className={classNames(
                            projectcss.all,
                            sty.freeBox__mVj7F
                          )}
                        >
                          <div
                            className={classNames(
                              projectcss.all,
                              projectcss.__wab_text,
                              sty.text___3Xg25
                            )}
                          >
                            {
                              "\u062a\u0639\u0631\u06cc\u0641 \u0628\u0627\u0632\u0647 \u0647\u0627\u06cc \u06cc\u0627\u062f\u0622\u0648\u0631\u06cc (\u0686\u0646\u062f \u062f\u0642\u06cc\u0642\u0647/\u0633\u0627\u0639\u062a \u0642\u0628\u0644 \u0627\u0632 \u0646\u0648\u0628\u062a)"
                            }
                          </div>
                        </div>
                      </li>
                      <li
                        className={classNames(
                          projectcss.all,
                          projectcss.li,
                          sty.li__xfYpu
                        )}
                      >
                        <div
                          className={classNames(
                            projectcss.all,
                            sty.freeBox___6D4OL
                          )}
                        >
                          <div
                            className={classNames(
                              projectcss.all,
                              projectcss.__wab_text,
                              sty.text__nmbf
                            )}
                          >
                            {
                              "\u062a\u0639\u0631\u06cc\u0641 \u0628\u0647 \u0627\u0632\u0627\u06cc \u0647\u0631 \u067e\u0632\u0634\u06a9 \u0648 \u062e\u062f\u0645\u062a"
                            }
                          </div>
                        </div>
                      </li>
                      <li
                        className={classNames(
                          projectcss.all,
                          projectcss.li,
                          sty.li___6CQft
                        )}
                      >
                        <div
                          className={classNames(
                            projectcss.all,
                            sty.freeBox___3Zf7A
                          )}
                        >
                          <div
                            className={classNames(
                              projectcss.all,
                              projectcss.__wab_text,
                              sty.text__kSl9S
                            )}
                          >
                            {
                              "\u062a\u0639\u0631\u06cc\u0641 \u0631\u0648\u0634 \u06cc\u0627\u062f\u0622\u0648\u0631\u06cc (\u062a\u0644\u06af\u0631\u0627\u0645\u06cc\u060c \u062a\u0644\u0641\u0646\u06cc \u0648 \u067e\u06cc\u0627\u0645\u06a9\u06cc)"
                            }
                          </div>
                        </div>
                      </li>
                    </ul>
                  </div>
                  <div
                    className={classNames(projectcss.all, sty.freeBox___3DBa7)}
                    dir={"rtl"}
                  >
                    <div
                      className={classNames(
                        projectcss.all,
                        projectcss.__wab_text,
                        sty.text___76Kom
                      )}
                    >
                      {
                        "\u0642\u0627\u0628\u0644\u06cc\u062a \u0627\u0637\u0644\u0627\u0639 \u0631\u0633\u0627\u0646\u06cc \u0646\u0648\u0628\u062a \u062b\u0628\u062a \u0634\u062f\u0647\u060c \u062c\u0627\u0628\u062c\u0627 \u0634\u062f\u0647 \u0648 \u062d\u0630\u0641 \u0634\u062f\u0647 \u0628\u0647 \u0628\u06cc\u0645\u0627\u0631\u0627\u0646 \u0628\u0647 \u0635\u0648\u0631\u062a \u0647\u0627\u06cc \u062a\u0644\u0641\u0646\u06cc\u060c \u067e\u06cc\u0627\u0645\u06a9\u06cc \u0648 \u0627\u06cc\u0645\u06cc\u0644\u06cc"
                      }
                    </div>
                  </div>
                  <div
                    className={classNames(projectcss.all, sty.freeBox__hgQAz)}
                    dir={"rtl"}
                  >
                    <div
                      className={classNames(
                        projectcss.all,
                        projectcss.__wab_text,
                        sty.text__evds
                      )}
                    >
                      {
                        "\u0627\u0645\u06a9\u0627\u0646 \u062d\u0630\u0641 \u06af\u0631\u0648\u0647\u06cc \u0646\u0648\u0628\u062a \u0647\u0627 \u0628\u0627 \u0627\u0645\u06a9\u0627\u0646 \u0627\u0637\u0644\u0627\u0639 \u0631\u0633\u0627\u0646\u06cc \u062a\u0644\u0641\u0646\u06cc\u060c \u067e\u06cc\u0627\u0645\u06a9\u06cc \u0648 \u0627\u06cc\u0645\u06cc\u0644\u06cc \u0628\u0647 \u06a9\u0644\u06cc\u0647 \u0628\u06cc\u0645\u0627\u0631\u0627\u0646 \u0628\u0647 \u0635\u0648\u0631\u062a \u062e\u0648\u062f\u06a9\u0627\u0631"
                      }
                    </div>
                  </div>
                  <div
                    className={classNames(projectcss.all, sty.freeBox__lFulh)}
                    dir={"rtl"}
                  >
                    <div
                      className={classNames(
                        projectcss.all,
                        projectcss.__wab_text,
                        sty.text__lmPrA
                      )}
                    >
                      {
                        "\u0627\u0645\u06a9\u0627\u0646 \u062c\u0627\u0628\u062c\u0627\u06cc\u06cc \u06af\u0631\u0648\u0647\u06cc \u0646\u0648\u0628\u062a \u0647\u0627 \u0628\u0647 \u0632\u0645\u0627\u0646 \u062f\u0644\u062e\u0648\u0627\u0647 \u0628\u0627 \u0627\u0645\u06a9\u0627\u0646 \u0627\u0637\u0644\u0627\u0639 \u0631\u0633\u0627\u0646\u06cc \u062a\u0644\u0641\u0646\u06cc\u060c \u067e\u06cc\u0627\u0645\u06a9\u06cc \u0648 \u0627\u06cc\u0645\u06cc\u0644\u06cc \u0628\u0647 \u06a9\u0644\u06cc\u0647 \u0628\u06cc\u0645\u0627\u0631\u0627\u0646 \u0628\u0647 \u0635\u0648\u0631\u062a \u062e\u0648\u062f\u06a9\u0627\u0631"
                      }
                    </div>
                  </div>
                  <div
                    className={classNames(projectcss.all, sty.freeBox__jIt7W)}
                    dir={"rtl"}
                  >
                    <div
                      className={classNames(
                        projectcss.all,
                        projectcss.__wab_text,
                        sty.text__tgskc
                      )}
                    >
                      {
                        "\u0627\u0645\u06a9\u0627\u0646 \u062a\u0639\u06cc\u06cc\u0646 \u0633\u0627\u0639\u062a \u0645\u062c\u0627\u0632 \u0627\u0637\u0644\u0627\u0639 \u0631\u0633\u0627\u0646\u06cc \u062a\u0644\u0641\u0646\u06cc"
                      }
                    </div>
                  </div>
                  <div
                    className={classNames(projectcss.all, sty.freeBox__jtKzx)}
                    dir={"rtl"}
                  >
                    <div
                      className={classNames(
                        projectcss.all,
                        projectcss.__wab_text,
                        sty.text__lqd7J
                      )}
                    >
                      {
                        "\u062a\u0639\u06cc\u06cc\u0646 \u062a\u0646\u0638\u06cc\u0645\u0627\u062a \u062c\u0647\u062a \u062a\u0639\u062f\u0627\u062f \u062f\u0641\u0639\u0627\u062a \u062a\u0644\u0627\u0634 \u062f\u0631 \u0635\u0648\u0631\u062a \u0639\u062f\u0645 \u062f\u0633\u062a\u0631\u0633\u06cc \u062f\u0631 \u0627\u0637\u0644\u0627\u0639 \u0631\u0633\u0627\u0646\u06cc \u062a\u0644\u0641\u0646\u06cc"
                      }
                    </div>
                  </div>
                  <div
                    className={classNames(projectcss.all, sty.freeBox__mm7Wf)}
                    dir={"rtl"}
                  >
                    <div
                      className={classNames(
                        projectcss.all,
                        projectcss.__wab_text,
                        sty.text__x57YQ
                      )}
                    >
                      {
                        "\u0627\u0645\u06a9\u0627\u0646 \u0627\u062e\u062a\u0635\u0627\u0635\u06cc \u0633\u0627\u0632\u06cc \u0645\u062a\u0646 \u067e\u06cc\u0627\u0645\u06a9 \u0647\u0627\u06cc \u0627\u0631\u0633\u0627\u0644\u06cc \u0628\u0647 \u0645\u0634\u062a\u0631\u06cc\u0627\u0646 (\u062b\u0628\u062a\u060c \u0648\u06cc\u0631\u0627\u06cc\u0634\u060c \u062d\u0630\u0641\u060c \u067e\u06cc\u06af\u06cc\u0631\u06cc\u060c \u06cc\u0627\u062f\u0622\u0648\u0631\u06cc)"
                      }
                    </div>
                  </div>
                  <div
                    className={classNames(projectcss.all, sty.freeBox__ouBfw)}
                    dir={"rtl"}
                  >
                    <div
                      className={classNames(
                        projectcss.all,
                        projectcss.__wab_text,
                        sty.text__tMoeV
                      )}
                    >
                      {
                        "\u0627\u0645\u06a9\u0627\u0646 \u0627\u062e\u062a\u0635\u0627\u0635\u06cc \u0633\u0627\u0632\u06cc \u0645\u062a\u0646 \u067e\u06cc\u0627\u0645\u06a9 (\u062b\u0628\u062a\u060c \u0648\u06cc\u0631\u0627\u06cc\u0634\u060c \u062d\u0630\u0641\u060c \u06cc\u0627\u062f\u0622\u0648\u0631\u06cc \u0646\u0648\u0628\u062a \u0648 \u0627\u0639\u0644\u0627\u0645 \u0631\u0648\u0634 \u0647\u0627\u06cc \u0646\u0648\u0628\u062a \u062f\u0647\u06cc)"
                      }
                    </div>
                  </div>
                  <div
                    className={classNames(projectcss.all, sty.freeBox__pWlcs)}
                    dir={"rtl"}
                  >
                    <div
                      className={classNames(
                        projectcss.all,
                        projectcss.__wab_text,
                        sty.text__qVkYu
                      )}
                    >
                      {
                        "\u0627\u0645\u06a9\u0627\u0646 \u0627\u062e\u062a\u0635\u0627\u0635\u06cc \u0648 \u0627\u0639\u0644\u0627\u0645 \u0644\u06cc\u0633\u062a \u0646\u0648\u0628\u062a \u0647\u0627\u06cc \u0641\u0631\u062f\u0627\u06cc \u067e\u0632\u0634\u06a9"
                      }
                    </div>
                  </div>
                  <div
                    className={classNames(projectcss.all, sty.freeBox__jp0H5)}
                    dir={"rtl"}
                  >
                    <Button
                      children2={
                        "\u0627\u0641\u0632\u0648\u062f\u0646 \u0628\u0647 \u0645\u0627\u0634\u06cc\u0646 \u062d\u0633\u0627\u0628"
                      }
                      className={classNames(
                        "__wab_instance",
                        sty.button___3UcHv
                      )}
                      onClick={async event => {
                        const $steps = {};

                        $steps["updateAnnouncementCheckIsChecked"] = true
                          ? (() => {
                              const actionArgs = {
                                variable: {
                                  objRoot: $state,
                                  variablePath: [
                                    "announcementCheck",
                                    "isChecked"
                                  ]
                                },
                                operation: 0,
                                value: true
                              };
                              return (({
                                variable,
                                value,
                                startIndex,
                                deleteCount
                              }) => {
                                if (!variable) {
                                  return;
                                }
                                const { objRoot, variablePath } = variable;

                                $stateSet(objRoot, variablePath, value);
                                return value;
                              })?.apply(null, [actionArgs]);
                            })()
                          : undefined;
                        if (
                          $steps["updateAnnouncementCheckIsChecked"] != null &&
                          typeof $steps["updateAnnouncementCheckIsChecked"] ===
                            "object" &&
                          typeof $steps["updateAnnouncementCheckIsChecked"]
                            .then === "function"
                        ) {
                          $steps["updateAnnouncementCheckIsChecked"] =
                            await $steps["updateAnnouncementCheckIsChecked"];
                        }

                        $steps["invokeGlobalAction"] = true
                          ? (() => {
                              const actionArgs = {
                                args: [
                                  "info",
                                  "\u0645\u0627\u0698\u0648\u0644 \u0627\u0639\u0644\u0627\u0646\u0627\u062a \u0628\u0647 \u0645\u0627\u0634\u06cc\u0646 \u062d\u0633\u0627\u0628 \u0627\u0641\u0632\u0648\u062f\u0647 \u0634\u062f"
                                ]
                              };
                              return $globalActions[
                                "plasmic-antd5-config-provider.showNotification"
                              ]?.apply(null, [...actionArgs.args]);
                            })()
                          : undefined;
                        if (
                          $steps["invokeGlobalAction"] != null &&
                          typeof $steps["invokeGlobalAction"] === "object" &&
                          typeof $steps["invokeGlobalAction"].then ===
                            "function"
                        ) {
                          $steps["invokeGlobalAction"] = await $steps[
                            "invokeGlobalAction"
                          ];
                        }
                      }}
                    />
                  </div>
                </div>
              ) : null}
              {(() => {
                try {
                  return $state.clCalculationState;
                } catch (e) {
                  if (
                    e instanceof TypeError ||
                    e?.plasmicType === "PlasmicUndefinedDataError"
                  ) {
                    return true;
                  }
                  throw e;
                }
              })() ? (
                <div
                  data-plasmic-name={"gridCalculation"}
                  data-plasmic-override={overrides.gridCalculation}
                  className={classNames(
                    projectcss.all,
                    sty.gridCalculation,
                    "grid_calculation"
                  )}
                  dir={"rtl"}
                >
                  <div
                    className={classNames(projectcss.all, sty.freeBox__wqXd1)}
                  >
                    <div
                      className={classNames(projectcss.all, sty.freeBox__bMWmv)}
                    >
                      <div
                        className={classNames(
                          projectcss.all,
                          sty.freeBox___9RM0F
                        )}
                      >
                        <h2
                          className={classNames(
                            projectcss.all,
                            projectcss.h2,
                            projectcss.__wab_text,
                            sty.h2___6BKdb
                          )}
                        >
                          {
                            "\u0645\u0627\u0698\u0648\u0644 \u0645\u062d\u0627\u0633\u0628\u0627\u062a"
                          }
                        </h2>
                      </div>
                    </div>
                  </div>
                  <div
                    className={classNames(projectcss.all, sty.freeBox__mqdlW)}
                  />

                  <div
                    className={classNames(projectcss.all, sty.freeBox__txTya)}
                    dir={"rtl"}
                  >
                    <div
                      className={classNames(
                        projectcss.all,
                        projectcss.__wab_text,
                        sty.text__vJreL
                      )}
                    >
                      {
                        "\u0627\u0645\u06a9\u0627\u0646 \u062a\u0639\u0631\u06cc\u0641 \u062e\u062f\u0645\u0627\u062a \u0645\u0631\u06a9\u0632 \u062f\u0631\u0645\u0627\u0646\u06cc "
                      }
                    </div>
                  </div>
                  <div
                    className={classNames(projectcss.all, sty.freeBox__yFu94)}
                    dir={"rtl"}
                  >
                    <div
                      className={classNames(
                        projectcss.all,
                        projectcss.__wab_text,
                        sty.text__mMjZs
                      )}
                    >
                      {
                        "\u0627\u0645\u06a9\u0627\u0646 \u062a\u0639\u0631\u06cc\u0641 \u0628\u06cc\u0645\u0647 \u0647\u0627\u06cc \u062a\u062d\u062a \u067e\u0648\u0634\u0634 \u0645\u0631\u06a9\u0632 \u062f\u0631\u0645\u0627\u0646\u06cc"
                      }
                    </div>
                  </div>
                  <div
                    className={classNames(projectcss.all, sty.freeBox__eKuYw)}
                    dir={"rtl"}
                  >
                    <div
                      className={classNames(
                        projectcss.all,
                        projectcss.__wab_text,
                        sty.text__skhNf
                      )}
                    >
                      {
                        "\u062a\u0639\u06cc\u06cc\u0646 \u062a\u0639\u0631\u0641\u0647 \u0647\u0631 \u062e\u062f\u0645\u062a \u0628\u0631 \u0627\u0633\u0627\u0633 \u062a\u062e\u0635\u0635 \u067e\u0632\u0634\u06a9\u060c \u0628\u06cc\u0645\u0647 \u0627\u0635\u0644\u06cc \u0648 \u062a\u06a9\u0645\u06cc\u0644\u06cc \u0648 \u062e\u062f\u0645\u062a"
                      }
                    </div>
                  </div>
                  <div
                    className={classNames(projectcss.all, sty.freeBox__tleG4)}
                    dir={"rtl"}
                  >
                    <Button
                      children2={
                        "\u0627\u0641\u0632\u0648\u062f\u0646 \u0628\u0647 \u0645\u0627\u0634\u06cc\u0646 \u062d\u0633\u0627\u0628"
                      }
                      className={classNames(
                        "__wab_instance",
                        sty.button__nNEf6
                      )}
                      onClick={async event => {
                        const $steps = {};

                        $steps["updateCalculationCheckIsChecked"] = true
                          ? (() => {
                              const actionArgs = {
                                variable: {
                                  objRoot: $state,
                                  variablePath: [
                                    "calculationCheck",
                                    "isChecked"
                                  ]
                                },
                                operation: 0,
                                value: true
                              };
                              return (({
                                variable,
                                value,
                                startIndex,
                                deleteCount
                              }) => {
                                if (!variable) {
                                  return;
                                }
                                const { objRoot, variablePath } = variable;

                                $stateSet(objRoot, variablePath, value);
                                return value;
                              })?.apply(null, [actionArgs]);
                            })()
                          : undefined;
                        if (
                          $steps["updateCalculationCheckIsChecked"] != null &&
                          typeof $steps["updateCalculationCheckIsChecked"] ===
                            "object" &&
                          typeof $steps["updateCalculationCheckIsChecked"]
                            .then === "function"
                        ) {
                          $steps["updateCalculationCheckIsChecked"] =
                            await $steps["updateCalculationCheckIsChecked"];
                        }

                        $steps["invokeGlobalAction"] = true
                          ? (() => {
                              const actionArgs = {
                                args: [
                                  "info",
                                  "\u0645\u0627\u0698\u0648\u0644 \u0645\u062d\u0627\u0633\u0628\u0627\u062a \u0628\u0647 \u0645\u0627\u0634\u06cc\u0646 \u062d\u0633\u0627\u0628 \u0627\u0641\u0632\u0648\u062f\u0647 \u0634\u062f"
                                ]
                              };
                              return $globalActions[
                                "plasmic-antd5-config-provider.showNotification"
                              ]?.apply(null, [...actionArgs.args]);
                            })()
                          : undefined;
                        if (
                          $steps["invokeGlobalAction"] != null &&
                          typeof $steps["invokeGlobalAction"] === "object" &&
                          typeof $steps["invokeGlobalAction"].then ===
                            "function"
                        ) {
                          $steps["invokeGlobalAction"] = await $steps[
                            "invokeGlobalAction"
                          ];
                        }
                      }}
                    />
                  </div>
                </div>
              ) : null}
              {(() => {
                try {
                  return $state.clOnlinepaymentState;
                } catch (e) {
                  if (
                    e instanceof TypeError ||
                    e?.plasmicType === "PlasmicUndefinedDataError"
                  ) {
                    return true;
                  }
                  throw e;
                }
              })() ? (
                <div
                  data-plasmic-name={"gridOnlinePayment"}
                  data-plasmic-override={overrides.gridOnlinePayment}
                  className={classNames(
                    projectcss.all,
                    sty.gridOnlinePayment,
                    "grid_onlinepayment"
                  )}
                  dir={"rtl"}
                >
                  <div
                    className={classNames(projectcss.all, sty.freeBox__zHroT)}
                  >
                    <div
                      className={classNames(projectcss.all, sty.freeBox__foUcv)}
                    >
                      <div
                        className={classNames(
                          projectcss.all,
                          sty.freeBox__xbmsR
                        )}
                      >
                        <h2
                          className={classNames(
                            projectcss.all,
                            projectcss.h2,
                            projectcss.__wab_text,
                            sty.h2__nbMc
                          )}
                        >
                          {
                            "\u0645\u0627\u0698\u0648\u0644 \u067e\u0631\u062f\u0627\u062e\u062a \u0622\u0646\u0644\u0627\u06cc\u0646"
                          }
                        </h2>
                      </div>
                    </div>
                  </div>
                  <div
                    className={classNames(projectcss.all, sty.freeBox__xz0M)}
                  />

                  <div
                    className={classNames(projectcss.all, sty.freeBox__f7MNk)}
                    dir={"rtl"}
                  >
                    <div
                      className={classNames(
                        projectcss.all,
                        projectcss.__wab_text,
                        sty.text__bKiXw
                      )}
                    >
                      {
                        "\u067e\u0631\u062f\u0627\u062e\u062a \u0622\u0646\u0644\u0627\u06cc\u0646 \u062f\u0631 \u0646\u0648\u0628\u062a \u062f\u0647\u06cc \u0627\u06cc\u0646\u062a\u0631\u0646\u062a\u06cc\u060c \u0627\u067e\u0644\u06cc\u06a9\u06cc\u0634\u0646 \u0648 \u0633\u0627\u06cc\u062a \u0645\u0631\u06a9\u0632"
                      }
                    </div>
                  </div>
                  <div
                    className={classNames(projectcss.all, sty.freeBox__sQ39)}
                    dir={"rtl"}
                  >
                    <div
                      className={classNames(
                        projectcss.all,
                        projectcss.__wab_text,
                        sty.text__gmGew
                      )}
                    >
                      {
                        "\u0642\u0627\u0628\u0644\u06cc\u062a \u0639\u0648\u062f\u062a \u0647\u0632\u06cc\u0646\u0647 \u067e\u0631\u062f\u0627\u062e\u062a\u06cc \u062f\u0631 \u0635\u0648\u0631\u062a \u06a9\u0646\u0633\u0644\u06cc \u0646\u0648\u0628\u062a"
                      }
                    </div>
                  </div>
                  <div
                    className={classNames(projectcss.all, sty.freeBox__ifE1N)}
                    dir={"rtl"}
                  >
                    <div
                      className={classNames(
                        projectcss.all,
                        projectcss.__wab_text,
                        sty.text__eNcx9
                      )}
                    >
                      {
                        "\u06af\u0632\u0627\u0631\u0634\u0627\u062a \u0645\u0627\u0644\u06cc "
                      }
                    </div>
                  </div>
                  <div
                    className={classNames(projectcss.all, sty.freeBox__oBuIw)}
                    dir={"rtl"}
                  >
                    <Button
                      children2={
                        "\u0627\u0641\u0632\u0648\u062f\u0646 \u0628\u0647 \u0645\u0627\u0634\u06cc\u0646 \u062d\u0633\u0627\u0628"
                      }
                      className={classNames(
                        "__wab_instance",
                        sty.button__nBoTe
                      )}
                      onClick={async event => {
                        const $steps = {};

                        $steps["updateOnlinepaymentCheckIsChecked"] = true
                          ? (() => {
                              const actionArgs = {
                                variable: {
                                  objRoot: $state,
                                  variablePath: [
                                    "onlinepaymentCheck",
                                    "isChecked"
                                  ]
                                },
                                operation: 0,
                                value: true
                              };
                              return (({
                                variable,
                                value,
                                startIndex,
                                deleteCount
                              }) => {
                                if (!variable) {
                                  return;
                                }
                                const { objRoot, variablePath } = variable;

                                $stateSet(objRoot, variablePath, value);
                                return value;
                              })?.apply(null, [actionArgs]);
                            })()
                          : undefined;
                        if (
                          $steps["updateOnlinepaymentCheckIsChecked"] != null &&
                          typeof $steps["updateOnlinepaymentCheckIsChecked"] ===
                            "object" &&
                          typeof $steps["updateOnlinepaymentCheckIsChecked"]
                            .then === "function"
                        ) {
                          $steps["updateOnlinepaymentCheckIsChecked"] =
                            await $steps["updateOnlinepaymentCheckIsChecked"];
                        }

                        $steps["invokeGlobalAction"] = true
                          ? (() => {
                              const actionArgs = {
                                args: [
                                  "info",
                                  "\u0645\u0627\u0698\u0648\u0644 \u067e\u0631\u062f\u0627\u062e\u062a \u0622\u0646\u0644\u0627\u06cc\u0646 \u0628\u0647 \u0645\u0627\u0634\u06cc\u0646 \u062d\u0633\u0627\u0628 \u0627\u0641\u0632\u0648\u062f\u0647 \u0634\u062f"
                                ]
                              };
                              return $globalActions[
                                "plasmic-antd5-config-provider.showNotification"
                              ]?.apply(null, [...actionArgs.args]);
                            })()
                          : undefined;
                        if (
                          $steps["invokeGlobalAction"] != null &&
                          typeof $steps["invokeGlobalAction"] === "object" &&
                          typeof $steps["invokeGlobalAction"].then ===
                            "function"
                        ) {
                          $steps["invokeGlobalAction"] = await $steps[
                            "invokeGlobalAction"
                          ];
                        }
                      }}
                    />
                  </div>
                </div>
              ) : null}
              {(() => {
                try {
                  return $state.clApiState;
                } catch (e) {
                  if (
                    e instanceof TypeError ||
                    e?.plasmicType === "PlasmicUndefinedDataError"
                  ) {
                    return true;
                  }
                  throw e;
                }
              })() ? (
                <div
                  data-plasmic-name={"gridApi"}
                  data-plasmic-override={overrides.gridApi}
                  className={classNames(
                    projectcss.all,
                    sty.gridApi,
                    "grid_api"
                  )}
                  dir={"rtl"}
                >
                  <div
                    className={classNames(projectcss.all, sty.freeBox__i9YOv)}
                  >
                    <div
                      className={classNames(projectcss.all, sty.freeBox__kKqb7)}
                    >
                      <div
                        className={classNames(
                          projectcss.all,
                          sty.freeBox__j4YmH
                        )}
                      >
                        <h2
                          className={classNames(
                            projectcss.all,
                            projectcss.h2,
                            projectcss.__wab_text,
                            sty.h2__lGJti
                          )}
                        >
                          {
                            "\u0645\u0627\u0698\u0648\u0644 \u0627\u0631\u062a\u0628\u0627\u0637 \u0628\u0627 \u0633\u0627\u06cc\u0631 \u0646\u0631\u0645 \u0627\u0641\u0632\u0627\u0631\u0647\u0627"
                          }
                        </h2>
                      </div>
                    </div>
                  </div>
                  <div
                    className={classNames(projectcss.all, sty.freeBox__rc06U)}
                  />

                  <div
                    className={classNames(projectcss.all, sty.freeBox__rtdMe)}
                    dir={"rtl"}
                  >
                    <div
                      className={classNames(
                        projectcss.all,
                        projectcss.__wab_text,
                        sty.text__qb5Tm
                      )}
                    >
                      {
                        "\u0627\u0645\u06a9\u0627\u0646 \u062b\u0628\u062a\u060c \u062d\u0630\u0641 \u0648 \u06cc\u0627 \u062c\u0627\u0628\u0647 \u062c\u0627\u06cc\u06cc \u0646\u0648\u0628\u062a \u0646\u0648\u0628\u062a \u0627\u0632 \u0637\u0632\u06cc\u0642  API"
                      }
                    </div>
                  </div>
                  <div
                    className={classNames(projectcss.all, sty.freeBox__esqF7)}
                    dir={"rtl"}
                  >
                    <div
                      className={classNames(
                        projectcss.all,
                        projectcss.__wab_text,
                        sty.text__zReaP
                      )}
                    >
                      {
                        "\u0627\u0645\u06a9\u0627\u0646 \u062a\u0628\u0627\u062f\u0644 \u062f\u0627\u062f\u0647 \u0628\u0627 \u0633\u0627\u06cc\u0631 \u0646\u0631\u0645 \u0627\u0641\u0632\u0627\u0631\u0647\u0627 (\u0627\u0632 \u062c\u0645\u0644\u0647 his) \u0627\u0632 \u0637\u0631\u06cc\u0642 API"
                      }
                    </div>
                  </div>
                  <div
                    className={classNames(projectcss.all, sty.freeBox__v8Y3P)}
                    dir={"rtl"}
                  >
                    <Button
                      children2={
                        "\u0627\u0641\u0632\u0648\u062f\u0646 \u0628\u0647 \u0645\u0627\u0634\u06cc\u0646 \u062d\u0633\u0627\u0628"
                      }
                      className={classNames(
                        "__wab_instance",
                        sty.button__kTxM7
                      )}
                      onClick={async event => {
                        const $steps = {};

                        $steps["updateApiCheckIsChecked"] = true
                          ? (() => {
                              const actionArgs = {
                                variable: {
                                  objRoot: $state,
                                  variablePath: ["apiCheck", "isChecked"]
                                },
                                operation: 0,
                                value: true
                              };
                              return (({
                                variable,
                                value,
                                startIndex,
                                deleteCount
                              }) => {
                                if (!variable) {
                                  return;
                                }
                                const { objRoot, variablePath } = variable;

                                $stateSet(objRoot, variablePath, value);
                                return value;
                              })?.apply(null, [actionArgs]);
                            })()
                          : undefined;
                        if (
                          $steps["updateApiCheckIsChecked"] != null &&
                          typeof $steps["updateApiCheckIsChecked"] ===
                            "object" &&
                          typeof $steps["updateApiCheckIsChecked"].then ===
                            "function"
                        ) {
                          $steps["updateApiCheckIsChecked"] = await $steps[
                            "updateApiCheckIsChecked"
                          ];
                        }

                        $steps["invokeGlobalAction"] = true
                          ? (() => {
                              const actionArgs = {
                                args: [
                                  "info",
                                  "\u0645\u0627\u0698\u0648\u0644 \u0627\u0631\u062a\u0628\u0627\u0637 \u0628\u0627 \u0633\u0627\u06cc\u0631 \u0646\u0631\u0645 \u0627\u0641\u0632\u0627\u0631 \u0647\u0627 \u0628\u0647 \u0645\u0627\u0634\u06cc\u0646 \u062d\u0633\u0627\u0628 \u0627\u0641\u0632\u0648\u062f\u0647 \u0634\u062f"
                                ]
                              };
                              return $globalActions[
                                "plasmic-antd5-config-provider.showNotification"
                              ]?.apply(null, [...actionArgs.args]);
                            })()
                          : undefined;
                        if (
                          $steps["invokeGlobalAction"] != null &&
                          typeof $steps["invokeGlobalAction"] === "object" &&
                          typeof $steps["invokeGlobalAction"].then ===
                            "function"
                        ) {
                          $steps["invokeGlobalAction"] = await $steps[
                            "invokeGlobalAction"
                          ];
                        }
                      }}
                    />
                  </div>
                </div>
              ) : null}
              {(() => {
                try {
                  return $state.clEhrState;
                } catch (e) {
                  if (
                    e instanceof TypeError ||
                    e?.plasmicType === "PlasmicUndefinedDataError"
                  ) {
                    return true;
                  }
                  throw e;
                }
              })() ? (
                <div
                  data-plasmic-name={"gridEhr"}
                  data-plasmic-override={overrides.gridEhr}
                  className={classNames(
                    projectcss.all,
                    sty.gridEhr,
                    "grid_ehr"
                  )}
                  dir={"rtl"}
                >
                  <div
                    className={classNames(projectcss.all, sty.freeBox__ohZla)}
                  >
                    <div
                      className={classNames(projectcss.all, sty.freeBox__cEavM)}
                    >
                      <div
                        className={classNames(
                          projectcss.all,
                          sty.freeBox__fHuZb
                        )}
                      >
                        <h2
                          className={classNames(
                            projectcss.all,
                            projectcss.h2,
                            projectcss.__wab_text,
                            sty.h2___2SZfS
                          )}
                        >
                          {
                            "\u0645\u0627\u0698\u0648\u0644 \u067e\u0631\u0648\u0646\u062f\u0647 \u0628\u06cc\u0645\u0627\u0631"
                          }
                        </h2>
                      </div>
                    </div>
                  </div>
                  <div
                    className={classNames(projectcss.all, sty.freeBox__cCsX3)}
                  />

                  <div
                    className={classNames(projectcss.all, sty.freeBox__lkzo)}
                    dir={"rtl"}
                  >
                    <div
                      className={classNames(
                        projectcss.all,
                        projectcss.__wab_text,
                        sty.text__iVIgK
                      )}
                    >
                      {
                        " \u0641\u0631\u0645 \u0633\u0627\u0632 \u062c\u0647\u062a \u062a\u0639\u06cc\u06cc\u0646 \u0641\u06cc\u0644\u062f\u0647\u0627\u06cc \u062f\u0644\u062e\u0648\u0627\u0647 \u0628\u0631\u0627\u06cc \u0641\u0631\u0645 \u0645\u0648\u0631\u062f \u0646\u0638\u0631"
                      }
                    </div>
                  </div>
                  <div
                    className={classNames(projectcss.all, sty.freeBox__leTua)}
                    dir={"rtl"}
                  >
                    <div
                      className={classNames(
                        projectcss.all,
                        projectcss.__wab_text,
                        sty.text__xLjEk
                      )}
                    >
                      {
                        " \u062a\u0639\u0631\u06cc\u0641 \u0641\u06cc\u0644\u062f\u0647\u0627\u06cc \u062a\u0635\u0648\u06cc\u0631\u06cc\u060c \u0645\u062a\u0646\u06cc\u060c \u0639\u062f\u062f\u06cc\u060c \u062a\u0627\u0631\u06cc\u062e\u060c \u0632\u0645\u0627\u0646\u060c \u0628\u0631\u0686\u0633\u0628\u060c \u0642\u0644\u0645 \u0646\u0648\u0631\u06cc\u060c \u0633\u0627\u0628 \u0641\u0631\u0645\u060c \u0686\u06a9 \u0628\u0627\u06a9\u0633 \u0648 \u0644\u06cc\u0633\u062a"
                      }
                    </div>
                  </div>
                  <div
                    className={classNames(projectcss.all, sty.freeBox__fp4X)}
                    dir={"rtl"}
                  >
                    <div
                      className={classNames(
                        projectcss.all,
                        projectcss.__wab_text,
                        sty.text__pneFi
                      )}
                    >
                      {
                        " \u062a\u0639\u0631\u06cc\u0641 \u0641\u06cc\u0644\u062f\u0647\u0627\u06cc \u0627\u062e\u062a\u0635\u0627\u0635\u06cc \u0647\u0631 \u0628\u06cc\u0645\u0627\u0631 \u0628\u0627 \u0627\u0633\u062a\u0641\u0627\u062f\u0647 \u0627\u0632 \u0641\u0631\u0645 \u0633\u0627\u0632"
                      }
                    </div>
                  </div>
                  <div
                    className={classNames(projectcss.all, sty.freeBox__fpQmb)}
                    dir={"rtl"}
                  >
                    <div
                      className={classNames(
                        projectcss.all,
                        projectcss.__wab_text,
                        sty.text__qvgfZ
                      )}
                    >
                      {
                        " \u062a\u0639\u0631\u06cc\u0641 \u0641\u0631\u0645 \u067e\u0631\u0648\u0646\u062f\u0647 \u0628\u06cc\u0645\u0627\u0631 \u0628\u0647 \u0627\u0632\u0627\u06cc \u0647\u0631 \u062e\u062f\u0645\u062a \u0645\u0631\u06a9\u0632 \u062f\u0631\u0645\u0627\u0646\u06cc \u0628\u0627 \u0627\u0633\u062a\u0641\u0627\u062f\u0647 \u0627\u0632 \u0641\u0631\u0645 \u0633\u0627\u0632"
                      }
                    </div>
                  </div>
                  <div
                    className={classNames(projectcss.all, sty.freeBox__d93BC)}
                    dir={"rtl"}
                  >
                    <div
                      className={classNames(
                        projectcss.all,
                        projectcss.__wab_text,
                        sty.text__aod4B
                      )}
                    >
                      {
                        " \u062b\u0628\u062a \u0627\u0637\u0644\u0627\u0639\u0627\u062a \u0641\u0631\u0645 \u067e\u0631\u0648\u0646\u062f\u0647 \u0628\u06cc\u0645\u0627\u0631 \u062f\u0627\u062e\u0644 \u0646\u0648\u0628\u062a \u0628\u0627 \u062a\u0648\u062c\u0647 \u0628\u0647 \u062e\u062f\u0645\u062a \u0647\u0627\u06cc \u0627\u062e\u062a\u0635\u0627\u0635 \u062f\u0627\u062f\u0647 \u0634\u062f\u0647"
                      }
                    </div>
                  </div>
                  <div
                    className={classNames(projectcss.all, sty.freeBox__c9AHf)}
                    dir={"rtl"}
                  >
                    <div
                      className={classNames(
                        projectcss.all,
                        projectcss.__wab_text,
                        sty.text__fJ9TG
                      )}
                    >
                      {
                        " \u0645\u0634\u0627\u0647\u062f\u0647 \u062a\u0627\u0631\u06cc\u062e\u0686\u0647 \u0627\u0637\u0644\u0627\u0639\u0627\u062a \u062b\u0628\u062a \u0634\u062f\u0647 \u062f\u0627\u062e\u0644 \u067e\u0631\u0648\u0646\u062f\u0647 \u0628\u06cc\u0645\u0627\u0631"
                      }
                    </div>
                  </div>
                  <div
                    className={classNames(projectcss.all, sty.freeBox__honw)}
                    dir={"rtl"}
                  >
                    <Button
                      children2={
                        "\u0627\u0641\u0632\u0648\u062f\u0646 \u0628\u0647 \u0645\u0627\u0634\u06cc\u0646 \u062d\u0633\u0627\u0628"
                      }
                      className={classNames(
                        "__wab_instance",
                        sty.button___6AzjZ
                      )}
                      onClick={async event => {
                        const $steps = {};

                        $steps["updateEhrCheckIsChecked"] = true
                          ? (() => {
                              const actionArgs = {
                                variable: {
                                  objRoot: $state,
                                  variablePath: ["ehrCheck", "isChecked"]
                                },
                                operation: 0,
                                value: true
                              };
                              return (({
                                variable,
                                value,
                                startIndex,
                                deleteCount
                              }) => {
                                if (!variable) {
                                  return;
                                }
                                const { objRoot, variablePath } = variable;

                                $stateSet(objRoot, variablePath, value);
                                return value;
                              })?.apply(null, [actionArgs]);
                            })()
                          : undefined;
                        if (
                          $steps["updateEhrCheckIsChecked"] != null &&
                          typeof $steps["updateEhrCheckIsChecked"] ===
                            "object" &&
                          typeof $steps["updateEhrCheckIsChecked"].then ===
                            "function"
                        ) {
                          $steps["updateEhrCheckIsChecked"] = await $steps[
                            "updateEhrCheckIsChecked"
                          ];
                        }

                        $steps["invokeGlobalAction"] = true
                          ? (() => {
                              const actionArgs = {
                                args: [
                                  "info",
                                  "\u0645\u0627\u0698\u0648\u0644 \u067e\u0631\u0648\u0646\u062f\u0647 \u0628\u06cc\u0645\u0627\u0631 \u0628\u0647 \u0645\u0627\u0634\u06cc\u0646 \u062d\u0633\u0627\u0628 \u0627\u0641\u0632\u0648\u062f\u0647 \u0634\u062f"
                                ]
                              };
                              return $globalActions[
                                "plasmic-antd5-config-provider.showNotification"
                              ]?.apply(null, [...actionArgs.args]);
                            })()
                          : undefined;
                        if (
                          $steps["invokeGlobalAction"] != null &&
                          typeof $steps["invokeGlobalAction"] === "object" &&
                          typeof $steps["invokeGlobalAction"].then ===
                            "function"
                        ) {
                          $steps["invokeGlobalAction"] = await $steps[
                            "invokeGlobalAction"
                          ];
                        }
                      }}
                    />
                  </div>
                </div>
              ) : null}
              {(() => {
                try {
                  return $state.clSpecialsiteState;
                } catch (e) {
                  if (
                    e instanceof TypeError ||
                    e?.plasmicType === "PlasmicUndefinedDataError"
                  ) {
                    return true;
                  }
                  throw e;
                }
              })() ? (
                <div
                  data-plasmic-name={"gridSpecialSite"}
                  data-plasmic-override={overrides.gridSpecialSite}
                  className={classNames(
                    projectcss.all,
                    sty.gridSpecialSite,
                    "grid_specialsite"
                  )}
                  dir={"rtl"}
                >
                  <div
                    className={classNames(projectcss.all, sty.freeBox__q66SQ)}
                  >
                    <div
                      className={classNames(projectcss.all, sty.freeBox__ids7A)}
                    >
                      <div
                        className={classNames(
                          projectcss.all,
                          sty.freeBox__qz2Rb
                        )}
                      >
                        <h2
                          className={classNames(
                            projectcss.all,
                            projectcss.h2,
                            projectcss.__wab_text,
                            sty.h2__vvPbi
                          )}
                        >
                          {
                            "\u0633\u0627\u06cc\u062a \u0627\u062e\u062a\u0635\u0627\u0635\u06cc \u0645\u0631\u06a9\u0632"
                          }
                        </h2>
                      </div>
                    </div>
                  </div>
                  <div
                    className={classNames(projectcss.all, sty.freeBox__w5D3Y)}
                  />

                  <div
                    className={classNames(projectcss.all, sty.freeBox___0Za0A)}
                    dir={"rtl"}
                  >
                    <div
                      className={classNames(
                        projectcss.all,
                        projectcss.__wab_text,
                        sty.text__qfIM
                      )}
                    >
                      {
                        "\u0627\u0645\u06a9\u0627\u0646 \u062a\u0639\u0631\u06cc\u0641 SubDomain \u0628\u0647 \u0627\u0632\u0627\u06cc \u0647\u0631 \u0645\u0631\u06a9\u0632 \u062f\u0631\u0645\u0627\u0646\u06cc \u062c\u0647\u062a \u0646\u0648\u0628\u062a \u062f\u0647\u06cc"
                      }
                    </div>
                  </div>
                  <div
                    className={classNames(projectcss.all, sty.freeBox__x4B71)}
                    dir={"rtl"}
                  >
                    <div
                      className={classNames(
                        projectcss.all,
                        projectcss.__wab_text,
                        sty.text__xPtkH
                      )}
                    >
                      {
                        "\u0627\u0645\u06a9\u0627\u0646 \u0641\u0639\u0627\u0644 \u0633\u0627\u0632\u06cc \u062f\u0627\u0645\u0646\u0647 \u0627\u062e\u062a\u0635\u0627\u0635\u06cc \u0645\u0634\u062a\u0631\u06cc \u062c\u0647\u062a \u0646\u0648\u0628\u062a \u062f\u0647\u06cc"
                      }
                    </div>
                  </div>
                  <div
                    className={classNames(projectcss.all, sty.freeBox__b6UUy)}
                    dir={"rtl"}
                  >
                    <div
                      className={classNames(
                        projectcss.all,
                        projectcss.__wab_text,
                        sty.text__pyEpv
                      )}
                    >
                      {
                        "\u0627\u0645\u06a9\u0627\u0646 \u0631\u06cc\u0628\u0631\u0646\u062f \u06a9\u0631\u062f\u0646 \u0633\u0627\u06cc\u062a \u0628\u0647 \u0634\u06a9\u0644 \u0627\u062e\u062a\u0635\u0627\u0635\u06cc \u0628\u0631\u0627\u06cc \u0645\u0631\u06a9\u0632"
                      }
                    </div>
                  </div>
                  <div
                    className={classNames(projectcss.all, sty.freeBox___8GBu9)}
                    dir={"rtl"}
                  >
                    <Button
                      children2={
                        "\u0627\u0641\u0632\u0648\u062f\u0646 \u0628\u0647 \u0645\u0627\u0634\u06cc\u0646 \u062d\u0633\u0627\u0628"
                      }
                      className={classNames(
                        "__wab_instance",
                        sty.button__qQo9I
                      )}
                      onClick={async event => {
                        const $steps = {};

                        $steps["updateSpecialSiteCheckIsChecked"] = true
                          ? (() => {
                              const actionArgs = {
                                variable: {
                                  objRoot: $state,
                                  variablePath: [
                                    "specialSiteCheck",
                                    "isChecked"
                                  ]
                                },
                                operation: 0,
                                value: true
                              };
                              return (({
                                variable,
                                value,
                                startIndex,
                                deleteCount
                              }) => {
                                if (!variable) {
                                  return;
                                }
                                const { objRoot, variablePath } = variable;

                                $stateSet(objRoot, variablePath, value);
                                return value;
                              })?.apply(null, [actionArgs]);
                            })()
                          : undefined;
                        if (
                          $steps["updateSpecialSiteCheckIsChecked"] != null &&
                          typeof $steps["updateSpecialSiteCheckIsChecked"] ===
                            "object" &&
                          typeof $steps["updateSpecialSiteCheckIsChecked"]
                            .then === "function"
                        ) {
                          $steps["updateSpecialSiteCheckIsChecked"] =
                            await $steps["updateSpecialSiteCheckIsChecked"];
                        }

                        $steps["invokeGlobalAction"] = true
                          ? (() => {
                              const actionArgs = {
                                args: [
                                  "info",
                                  "\u0645\u0627\u0632\u0648\u0644 \u0633\u0627\u06cc\u062a \u0627\u062e\u062a\u0635\u0627\u0635\u06cc \u0628\u0647 \u0645\u0627\u0634\u06cc\u0646 \u062d\u0633\u0627\u0628 \u0627\u0641\u0632\u0648\u062f\u0647 \u0634\u062f"
                                ]
                              };
                              return $globalActions[
                                "plasmic-antd5-config-provider.showNotification"
                              ]?.apply(null, [...actionArgs.args]);
                            })()
                          : undefined;
                        if (
                          $steps["invokeGlobalAction"] != null &&
                          typeof $steps["invokeGlobalAction"] === "object" &&
                          typeof $steps["invokeGlobalAction"].then ===
                            "function"
                        ) {
                          $steps["invokeGlobalAction"] = await $steps[
                            "invokeGlobalAction"
                          ];
                        }
                      }}
                    />
                  </div>
                </div>
              ) : null}
              {(() => {
                try {
                  return $state.clReferralState;
                } catch (e) {
                  if (
                    e instanceof TypeError ||
                    e?.plasmicType === "PlasmicUndefinedDataError"
                  ) {
                    return true;
                  }
                  throw e;
                }
              })() ? (
                <div
                  data-plasmic-name={"gridReferral"}
                  data-plasmic-override={overrides.gridReferral}
                  className={classNames(
                    projectcss.all,
                    sty.gridReferral,
                    "grid_referral"
                  )}
                  dir={"rtl"}
                >
                  <div
                    className={classNames(projectcss.all, sty.freeBox___7NhX)}
                  >
                    <div
                      className={classNames(
                        projectcss.all,
                        sty.freeBox___1P0Xj
                      )}
                    >
                      <div
                        className={classNames(
                          projectcss.all,
                          sty.freeBox__kxT13
                        )}
                      >
                        <h2
                          className={classNames(
                            projectcss.all,
                            projectcss.h2,
                            projectcss.__wab_text,
                            sty.h2__ul3Dd
                          )}
                        >
                          {
                            "\u0646\u0638\u0627\u0645 \u0627\u0631\u062c\u0627\u0639"
                          }
                        </h2>
                      </div>
                    </div>
                  </div>
                  <div
                    className={classNames(projectcss.all, sty.freeBox__bwaWa)}
                  />

                  <div
                    className={classNames(projectcss.all, sty.freeBox__cdPsc)}
                    dir={"rtl"}
                  >
                    <div
                      className={classNames(
                        projectcss.all,
                        projectcss.__wab_text,
                        sty.text__o5Rin
                      )}
                    >
                      {
                        "\u0646\u0638\u0627\u0645 \u0627\u0631\u062c\u0627\u0639 \u0628\u0647\u0645\u0631\u0627\u0647 \u0645\u062f\u06cc\u0631\u06cc\u062a \u0628\u0627\u0632\u062e\u0648\u0631\u062f \u0627\u0632 \u0645\u0631\u0627\u06a9\u0632 \u0627\u0631\u062c\u0627\u0639 \u062f\u0647\u0646\u062f\u0647 \u0648 \u062b\u0628\u062a \u067e\u0633\u062e\u0648\u0631\u0627\u0646\u062f \u0627\u0631\u062c\u0627\u0639"
                      }
                    </div>
                  </div>
                  <div
                    className={classNames(projectcss.all, sty.freeBox__woJyn)}
                    dir={"rtl"}
                  >
                    <Button
                      children2={
                        "\u0627\u0641\u0632\u0648\u062f\u0646 \u0628\u0647 \u0645\u0627\u0634\u06cc\u0646 \u062d\u0633\u0627\u0628"
                      }
                      className={classNames(
                        "__wab_instance",
                        sty.button__r42I5
                      )}
                      onClick={async event => {
                        const $steps = {};

                        $steps["updateReferralCheckIsChecked"] = true
                          ? (() => {
                              const actionArgs = {
                                variable: {
                                  objRoot: $state,
                                  variablePath: ["referralCheck", "isChecked"]
                                },
                                operation: 0,
                                value: true
                              };
                              return (({
                                variable,
                                value,
                                startIndex,
                                deleteCount
                              }) => {
                                if (!variable) {
                                  return;
                                }
                                const { objRoot, variablePath } = variable;

                                $stateSet(objRoot, variablePath, value);
                                return value;
                              })?.apply(null, [actionArgs]);
                            })()
                          : undefined;
                        if (
                          $steps["updateReferralCheckIsChecked"] != null &&
                          typeof $steps["updateReferralCheckIsChecked"] ===
                            "object" &&
                          typeof $steps["updateReferralCheckIsChecked"].then ===
                            "function"
                        ) {
                          $steps["updateReferralCheckIsChecked"] = await $steps[
                            "updateReferralCheckIsChecked"
                          ];
                        }

                        $steps["invokeGlobalAction"] = true
                          ? (() => {
                              const actionArgs = {
                                args: [
                                  "info",
                                  "\u0645\u0627\u0632\u0648\u0644 \u0646\u0638\u0627\u0645 \u0627\u0631\u062c\u0627\u0639 \u0628\u0647 \u0645\u0627\u0634\u06cc\u0646 \u062d\u0633\u0627\u0628 \u0627\u0641\u0632\u0648\u062f\u0647 \u0634\u062f"
                                ]
                              };
                              return $globalActions[
                                "plasmic-antd5-config-provider.showNotification"
                              ]?.apply(null, [...actionArgs.args]);
                            })()
                          : undefined;
                        if (
                          $steps["invokeGlobalAction"] != null &&
                          typeof $steps["invokeGlobalAction"] === "object" &&
                          typeof $steps["invokeGlobalAction"].then ===
                            "function"
                        ) {
                          $steps["invokeGlobalAction"] = await $steps[
                            "invokeGlobalAction"
                          ];
                        }
                      }}
                    />
                  </div>
                </div>
              ) : null}
              {(() => {
                try {
                  return $state.clDashboardState;
                } catch (e) {
                  if (
                    e instanceof TypeError ||
                    e?.plasmicType === "PlasmicUndefinedDataError"
                  ) {
                    return true;
                  }
                  throw e;
                }
              })() ? (
                <div
                  data-plasmic-name={"gridDashboard"}
                  data-plasmic-override={overrides.gridDashboard}
                  className={classNames(
                    projectcss.all,
                    sty.gridDashboard,
                    "grid_dashboard"
                  )}
                  dir={"rtl"}
                >
                  <div
                    className={classNames(projectcss.all, sty.freeBox__pqMef)}
                  >
                    <div
                      className={classNames(projectcss.all, sty.freeBox__aaIym)}
                    >
                      <div
                        className={classNames(
                          projectcss.all,
                          sty.freeBox__a239M
                        )}
                      >
                        <h2
                          className={classNames(
                            projectcss.all,
                            projectcss.h2,
                            projectcss.__wab_text,
                            sty.h2__y575C
                          )}
                        >
                          {
                            "\u062f\u0627\u0634\u0628\u0648\u0631\u062f \u06af\u0632\u0627\u0631\u0634\u0627\u062a \u0645\u062f\u06cc\u0631\u06cc\u062a\u06cc"
                          }
                        </h2>
                      </div>
                    </div>
                  </div>
                  <div
                    className={classNames(projectcss.all, sty.freeBox__gL3OO)}
                  />

                  <div
                    className={classNames(projectcss.all, sty.freeBox__tRsAr)}
                    dir={"rtl"}
                  >
                    <div
                      className={classNames(
                        projectcss.all,
                        projectcss.__wab_text,
                        sty.text___7XT4E
                      )}
                    >
                      {
                        "\u0645\u06cc\u0632 \u06a9\u0627\u0631 \u062f\u0633\u062a\u0631\u0633\u06cc \u0633\u0631\u06cc\u0639 \u0628\u0647 \u06af\u0632\u0627\u0631\u0634\u0627\u062a \u0645\u0647\u0645"
                      }
                    </div>
                  </div>
                  <div
                    className={classNames(projectcss.all, sty.freeBox__ddw7)}
                    dir={"rtl"}
                  >
                    <div
                      className={classNames(
                        projectcss.all,
                        projectcss.__wab_text,
                        sty.text___5Hhap
                      )}
                    >
                      {
                        "\u06af\u0632\u0627\u0631\u0634 \u0641\u0631\u0627\u0648\u0627\u0646\u06cc \u062a\u0639\u062f\u0627\u062f \u0628\u06cc\u0645\u0627\u0631\u0627\u0646"
                      }
                    </div>
                  </div>
                  <div
                    className={classNames(projectcss.all, sty.freeBox___6QnXa)}
                    dir={"rtl"}
                  >
                    <div
                      className={classNames(
                        projectcss.all,
                        projectcss.__wab_text,
                        sty.text__jcS0M
                      )}
                    >
                      {
                        "\u06af\u0632\u0627\u0631\u0634 \u062a\u0631\u0627\u0641\u06cc\u06a9 \u0645\u0631\u06a9\u0632"
                      }
                    </div>
                  </div>
                  <div
                    className={classNames(projectcss.all, sty.freeBox__qsMs5)}
                    dir={"rtl"}
                  >
                    <div
                      className={classNames(
                        projectcss.all,
                        projectcss.__wab_text,
                        sty.text__cVsqf
                      )}
                    >
                      {
                        "\u06af\u0632\u0627\u0631\u0634 \u0632\u0645\u0627\u0646 \u0627\u0646\u062a\u0638\u0627\u0631 \u0628\u06cc\u0645\u0627\u0631\u0627\u0646"
                      }
                    </div>
                  </div>
                  <div
                    className={classNames(projectcss.all, sty.freeBox__r7EH)}
                    dir={"rtl"}
                  >
                    <div
                      className={classNames(
                        projectcss.all,
                        projectcss.__wab_text,
                        sty.text__rzfc9
                      )}
                    >
                      {
                        "\u06af\u0632\u0627\u0631\u0634 \u0622\u0645\u0627\u0631\u06cc \u0648 \u0646\u0645\u0648\u062f\u0627\u0631\u06cc \u0646\u0648\u0628\u062a \u062f\u0647\u06cc"
                      }
                    </div>
                  </div>
                  <div
                    className={classNames(projectcss.all, sty.freeBox___2Xn28)}
                    dir={"rtl"}
                  >
                    <Button
                      children2={
                        "\u0627\u0641\u0632\u0648\u062f\u0646 \u0628\u0647 \u0645\u0627\u0634\u06cc\u0646 \u062d\u0633\u0627\u0628"
                      }
                      className={classNames(
                        "__wab_instance",
                        sty.button___0OyS2
                      )}
                      onClick={async event => {
                        const $steps = {};

                        $steps["updateDashboardCheckIsChecked"] = true
                          ? (() => {
                              const actionArgs = {
                                variable: {
                                  objRoot: $state,
                                  variablePath: ["dashboardCheck", "isChecked"]
                                },
                                operation: 0,
                                value: true
                              };
                              return (({
                                variable,
                                value,
                                startIndex,
                                deleteCount
                              }) => {
                                if (!variable) {
                                  return;
                                }
                                const { objRoot, variablePath } = variable;

                                $stateSet(objRoot, variablePath, value);
                                return value;
                              })?.apply(null, [actionArgs]);
                            })()
                          : undefined;
                        if (
                          $steps["updateDashboardCheckIsChecked"] != null &&
                          typeof $steps["updateDashboardCheckIsChecked"] ===
                            "object" &&
                          typeof $steps["updateDashboardCheckIsChecked"]
                            .then === "function"
                        ) {
                          $steps["updateDashboardCheckIsChecked"] =
                            await $steps["updateDashboardCheckIsChecked"];
                        }

                        $steps["invokeGlobalAction"] = true
                          ? (() => {
                              const actionArgs = {
                                args: [
                                  "info",
                                  "\u0645\u0627\u0698\u0648\u0644 \u062f\u0627\u0634\u0628\u0648\u0631\u062f \u0628\u0647 \u0645\u0627\u0634\u06cc\u0646 \u062d\u0633\u0627\u0628 \u0627\u0641\u0632\u0648\u062f\u0647 \u0634\u062f"
                                ]
                              };
                              return $globalActions[
                                "plasmic-antd5-config-provider.showNotification"
                              ]?.apply(null, [...actionArgs.args]);
                            })()
                          : undefined;
                        if (
                          $steps["invokeGlobalAction"] != null &&
                          typeof $steps["invokeGlobalAction"] === "object" &&
                          typeof $steps["invokeGlobalAction"].then ===
                            "function"
                        ) {
                          $steps["invokeGlobalAction"] = await $steps[
                            "invokeGlobalAction"
                          ];
                        }
                      }}
                    />
                  </div>
                </div>
              ) : null}
            </section>
            <div className={classNames(projectcss.all, sty.freeBox__xLvZl)}>
              <div className={classNames(projectcss.all, sty.freeBox__iY0Jl)}>
                <div
                  data-plasmic-name={"btnFixedCalculator"}
                  data-plasmic-override={overrides.btnFixedCalculator}
                  className={classNames(projectcss.all, sty.btnFixedCalculator)}
                  id={"btn_fixedCalculator"}
                  onClick={async event => {
                    const $steps = {};

                    $steps["runCode"] = true
                      ? (() => {
                          const actionArgs = {
                            customFunction: async () => {
                              return document
                                .querySelector(".grid_calculator")
                                .scrollIntoView({ behavior: "smooth" });
                            }
                          };
                          return (({ customFunction }) => {
                            return customFunction();
                          })?.apply(null, [actionArgs]);
                        })()
                      : undefined;
                    if (
                      $steps["runCode"] != null &&
                      typeof $steps["runCode"] === "object" &&
                      typeof $steps["runCode"].then === "function"
                    ) {
                      $steps["runCode"] = await $steps["runCode"];
                    }

                    $steps["updateBtnFixedCalculatorStatus"] = true
                      ? (() => {
                          const actionArgs = {
                            variable: {
                              objRoot: $state,
                              variablePath: ["btnFixedCalculatorStatus"]
                            },
                            operation: 0,
                            value: false
                          };
                          return (({
                            variable,
                            value,
                            startIndex,
                            deleteCount
                          }) => {
                            if (!variable) {
                              return;
                            }
                            const { objRoot, variablePath } = variable;

                            $stateSet(objRoot, variablePath, value);
                            return value;
                          })?.apply(null, [actionArgs]);
                        })()
                      : undefined;
                    if (
                      $steps["updateBtnFixedCalculatorStatus"] != null &&
                      typeof $steps["updateBtnFixedCalculatorStatus"] ===
                        "object" &&
                      typeof $steps["updateBtnFixedCalculatorStatus"].then ===
                        "function"
                    ) {
                      $steps["updateBtnFixedCalculatorStatus"] = await $steps[
                        "updateBtnFixedCalculatorStatus"
                      ];
                    }
                  }}
                >
                  <Icon6Icon
                    className={classNames(projectcss.all, sty.svg__wEuf2)}
                    role={"img"}
                  />

                  <div
                    className={classNames(
                      projectcss.all,
                      projectcss.__wab_text,
                      sty.text__xeo1P
                    )}
                  >
                    {"\u0645\u0627\u0634\u06cc\u0646 \u062d\u0633\u0627\u0628"}
                  </div>
                </div>
              </div>
            </div>
            <SideEffect
              data-plasmic-name={"sideEffectPageLoad"}
              data-plasmic-override={overrides.sideEffectPageLoad}
              className={classNames("__wab_instance", sty.sideEffectPageLoad)}
              onMount={async () => {
                const $steps = {};

                $steps["checkUser"] = true
                  ? (() => {
                      const actionArgs = {
                        args: [
                          undefined,
                          "https://apigw.paziresh24.com/v1/auth/me"
                        ]
                      };
                      return $globalActions["Fragment.apiRequest"]?.apply(
                        null,
                        [...actionArgs.args]
                      );
                    })()
                  : undefined;
                if (
                  $steps["checkUser"] != null &&
                  typeof $steps["checkUser"] === "object" &&
                  typeof $steps["checkUser"].then === "function"
                ) {
                  $steps["checkUser"] = await $steps["checkUser"];
                }

                $steps["updateUser"] =
                  $steps.checkUser.status == 200
                    ? (() => {
                        const actionArgs = {
                          variable: {
                            objRoot: $state,
                            variablePath: ["user"]
                          },
                          operation: 0,
                          value: $steps.checkUser.data.users[0]
                        };
                        return (({
                          variable,
                          value,
                          startIndex,
                          deleteCount
                        }) => {
                          if (!variable) {
                            return;
                          }
                          const { objRoot, variablePath } = variable;

                          $stateSet(objRoot, variablePath, value);
                          return value;
                        })?.apply(null, [actionArgs]);
                      })()
                    : undefined;
                if (
                  $steps["updateUser"] != null &&
                  typeof $steps["updateUser"] === "object" &&
                  typeof $steps["updateUser"].then === "function"
                ) {
                  $steps["updateUser"] = await $steps["updateUser"];
                }

                $steps["updateUser2"] =
                  $steps.checkUser.status == 200
                    ? (() => {
                        const actionArgs = {
                          variable: {
                            objRoot: $state,
                            variablePath: ["txtUserName"]
                          },
                          operation: 0,
                          value: $state.user.name + " " + $state.user.family
                        };
                        return (({
                          variable,
                          value,
                          startIndex,
                          deleteCount
                        }) => {
                          if (!variable) {
                            return;
                          }
                          const { objRoot, variablePath } = variable;

                          $stateSet(objRoot, variablePath, value);
                          return value;
                        })?.apply(null, [actionArgs]);
                      })()
                    : undefined;
                if (
                  $steps["updateUser2"] != null &&
                  typeof $steps["updateUser2"] === "object" &&
                  typeof $steps["updateUser2"].then === "function"
                ) {
                  $steps["updateUser2"] = await $steps["updateUser2"];
                }

                $steps["updateUser4"] =
                  $steps.checkUser.status != 200
                    ? (() => {
                        const actionArgs = {
                          variable: {
                            objRoot: $state,
                            variablePath: ["btnLoginShow"]
                          },
                          operation: 0,
                          value: true
                        };
                        return (({
                          variable,
                          value,
                          startIndex,
                          deleteCount
                        }) => {
                          if (!variable) {
                            return;
                          }
                          const { objRoot, variablePath } = variable;

                          $stateSet(objRoot, variablePath, value);
                          return value;
                        })?.apply(null, [actionArgs]);
                      })()
                    : undefined;
                if (
                  $steps["updateUser4"] != null &&
                  typeof $steps["updateUser4"] === "object" &&
                  typeof $steps["updateUser4"].then === "function"
                ) {
                  $steps["updateUser4"] = await $steps["updateUser4"];
                }
              }}
            />
          </div>
        ) : null}
      </div>
    </React.Fragment>
  ) as React.ReactElement | null;
}

const PlasmicDescendants = {
  root: [
    "root",
    "h1",
    "btnDashboard3",
    "lblUser",
    "btnLogin",
    "btnReservation",
    "btnReservation3",
    "btnReservation2",
    "btnAnnouncement",
    "btnCalculation",
    "btnOnlinepayment",
    "btnApi",
    "btnEhr",
    "btnSpecialsite",
    "btnSpecialsite2",
    "btnDashboard",
    "gridCalculator",
    "fragmentSlider",
    "txtResevationCount",
    "reservationCheck",
    "txtReservationInternetResult",
    "reservationPhoneCheck",
    "txtReservationPhoneResult",
    "kioskResevationCheck",
    "txtReservationKioskResult",
    "announcementCheck",
    "txtAnnouncementResult",
    "calculationCheck",
    "txtCalculationResult",
    "onlinepaymentCheck",
    "txtOnlinePaymentResult",
    "apiCheck",
    "txtapiResult",
    "ehrCheck",
    "txtReservationKioskResult6",
    "specialSiteCheck",
    "txtSpecialSiteResult",
    "referralCheck",
    "txtRefferalResult",
    "dashboardCheck",
    "txtDashboardResult",
    "txtSumInvoice",
    "sideEffectCalculator",
    "gridReservation",
    "gridPhoneReserve",
    "gridKiosk",
    "gridAnnouncement",
    "gridCalculation",
    "gridOnlinePayment",
    "gridApi",
    "gridEhr",
    "gridSpecialSite",
    "gridReferral",
    "gridDashboard",
    "btnFixedCalculator",
    "sideEffectPageLoad"
  ],
  h1: ["h1"],
  btnDashboard3: ["btnDashboard3"],
  lblUser: ["lblUser"],
  btnLogin: ["btnLogin"],
  btnReservation: ["btnReservation"],
  btnReservation3: ["btnReservation3"],
  btnReservation2: ["btnReservation2"],
  btnAnnouncement: ["btnAnnouncement"],
  btnCalculation: ["btnCalculation"],
  btnOnlinepayment: ["btnOnlinepayment"],
  btnApi: ["btnApi"],
  btnEhr: ["btnEhr"],
  btnSpecialsite: ["btnSpecialsite"],
  btnSpecialsite2: ["btnSpecialsite2"],
  btnDashboard: ["btnDashboard"],
  gridCalculator: [
    "gridCalculator",
    "fragmentSlider",
    "txtResevationCount",
    "reservationCheck",
    "txtReservationInternetResult",
    "reservationPhoneCheck",
    "txtReservationPhoneResult",
    "kioskResevationCheck",
    "txtReservationKioskResult",
    "announcementCheck",
    "txtAnnouncementResult",
    "calculationCheck",
    "txtCalculationResult",
    "onlinepaymentCheck",
    "txtOnlinePaymentResult",
    "apiCheck",
    "txtapiResult",
    "ehrCheck",
    "txtReservationKioskResult6",
    "specialSiteCheck",
    "txtSpecialSiteResult",
    "referralCheck",
    "txtRefferalResult",
    "dashboardCheck",
    "txtDashboardResult",
    "txtSumInvoice",
    "sideEffectCalculator"
  ],
  fragmentSlider: ["fragmentSlider"],
  txtResevationCount: ["txtResevationCount"],
  reservationCheck: ["reservationCheck"],
  txtReservationInternetResult: ["txtReservationInternetResult"],
  reservationPhoneCheck: ["reservationPhoneCheck"],
  txtReservationPhoneResult: ["txtReservationPhoneResult"],
  kioskResevationCheck: ["kioskResevationCheck"],
  txtReservationKioskResult: ["txtReservationKioskResult"],
  announcementCheck: ["announcementCheck"],
  txtAnnouncementResult: ["txtAnnouncementResult"],
  calculationCheck: ["calculationCheck"],
  txtCalculationResult: ["txtCalculationResult"],
  onlinepaymentCheck: ["onlinepaymentCheck"],
  txtOnlinePaymentResult: ["txtOnlinePaymentResult"],
  apiCheck: ["apiCheck"],
  txtapiResult: ["txtapiResult"],
  ehrCheck: ["ehrCheck"],
  txtReservationKioskResult6: ["txtReservationKioskResult6"],
  specialSiteCheck: ["specialSiteCheck"],
  txtSpecialSiteResult: ["txtSpecialSiteResult"],
  referralCheck: ["referralCheck"],
  txtRefferalResult: ["txtRefferalResult"],
  dashboardCheck: ["dashboardCheck"],
  txtDashboardResult: ["txtDashboardResult"],
  txtSumInvoice: ["txtSumInvoice"],
  sideEffectCalculator: ["sideEffectCalculator"],
  gridReservation: ["gridReservation"],
  gridPhoneReserve: ["gridPhoneReserve"],
  gridKiosk: ["gridKiosk"],
  gridAnnouncement: ["gridAnnouncement"],
  gridCalculation: ["gridCalculation"],
  gridOnlinePayment: ["gridOnlinePayment"],
  gridApi: ["gridApi"],
  gridEhr: ["gridEhr"],
  gridSpecialSite: ["gridSpecialSite"],
  gridReferral: ["gridReferral"],
  gridDashboard: ["gridDashboard"],
  btnFixedCalculator: ["btnFixedCalculator"],
  sideEffectPageLoad: ["sideEffectPageLoad"]
} as const;
type NodeNameType = keyof typeof PlasmicDescendants;
type DescendantsType<T extends NodeNameType> =
  (typeof PlasmicDescendants)[T][number];
type NodeDefaultElementType = {
  root: "div";
  h1: "h1";
  btnDashboard3: "div";
  lblUser: "div";
  btnLogin: typeof Button;
  btnReservation: "div";
  btnReservation3: "div";
  btnReservation2: "div";
  btnAnnouncement: "div";
  btnCalculation: "div";
  btnOnlinepayment: "div";
  btnApi: "div";
  btnEhr: "div";
  btnSpecialsite: "div";
  btnSpecialsite2: "div";
  btnDashboard: "div";
  gridCalculator: "div";
  fragmentSlider: typeof Slider;
  txtResevationCount: typeof TextInput;
  reservationCheck: typeof Checkbox;
  txtReservationInternetResult: "div";
  reservationPhoneCheck: typeof Checkbox;
  txtReservationPhoneResult: "div";
  kioskResevationCheck: typeof Checkbox;
  txtReservationKioskResult: "div";
  announcementCheck: typeof Checkbox;
  txtAnnouncementResult: "div";
  calculationCheck: typeof Checkbox;
  txtCalculationResult: "div";
  onlinepaymentCheck: typeof Checkbox;
  txtOnlinePaymentResult: "div";
  apiCheck: typeof Checkbox;
  txtapiResult: "div";
  ehrCheck: typeof Checkbox;
  txtReservationKioskResult6: "div";
  specialSiteCheck: typeof Checkbox;
  txtSpecialSiteResult: "div";
  referralCheck: typeof Checkbox;
  txtRefferalResult: "div";
  dashboardCheck: typeof Checkbox;
  txtDashboardResult: "div";
  txtSumInvoice: "div";
  sideEffectCalculator: typeof SideEffect;
  gridReservation: "div";
  gridPhoneReserve: "div";
  gridKiosk: "div";
  gridAnnouncement: "div";
  gridCalculation: "div";
  gridOnlinePayment: "div";
  gridApi: "div";
  gridEhr: "div";
  gridSpecialSite: "div";
  gridReferral: "div";
  gridDashboard: "div";
  btnFixedCalculator: "div";
  sideEffectPageLoad: typeof SideEffect;
};

type ReservedPropsType = "variants" | "args" | "overrides";
type NodeOverridesType<T extends NodeNameType> = Pick<
  PlasmicHomepage__OverridesType,
  DescendantsType<T>
>;
type NodeComponentProps<T extends NodeNameType> =
  // Explicitly specify variants, args, and overrides as objects
  {
    variants?: PlasmicHomepage__VariantsArgs;
    args?: PlasmicHomepage__ArgsType;
    overrides?: NodeOverridesType<T>;
  } & Omit<PlasmicHomepage__VariantsArgs, ReservedPropsType> & // Specify variants directly as props
    /* Specify args directly as props*/ Omit<
      PlasmicHomepage__ArgsType,
      ReservedPropsType
    > &
    /* Specify overrides for each element directly as props*/ Omit<
      NodeOverridesType<T>,
      ReservedPropsType | VariantPropType | ArgPropType
    > &
    /* Specify props for the root element*/ Omit<
      Partial<React.ComponentProps<NodeDefaultElementType[T]>>,
      ReservedPropsType | VariantPropType | ArgPropType | DescendantsType<T>
    >;

function makeNodeComponent<NodeName extends NodeNameType>(nodeName: NodeName) {
  type PropsType = NodeComponentProps<NodeName> & { key?: React.Key };
  const func = function <T extends PropsType>(
    props: T & StrictProps<T, PropsType>
  ) {
    const { variants, args, overrides } = React.useMemo(
      () =>
        deriveRenderOpts(props, {
          name: nodeName,
          descendantNames: PlasmicDescendants[nodeName],
          internalArgPropNames: PlasmicHomepage__ArgProps,
          internalVariantPropNames: PlasmicHomepage__VariantProps
        }),
      [props, nodeName]
    );
    return PlasmicHomepage__RenderFunc({
      variants,
      args,
      overrides,
      forNode: nodeName
    });
  };
  if (nodeName === "root") {
    func.displayName = "PlasmicHomepage";
  } else {
    func.displayName = `PlasmicHomepage.${nodeName}`;
  }
  return func;
}

export const PlasmicHomepage = Object.assign(
  // Top-level PlasmicHomepage renders the root element
  makeNodeComponent("root"),
  {
    // Helper components rendering sub-elements
    h1: makeNodeComponent("h1"),
    btnDashboard3: makeNodeComponent("btnDashboard3"),
    lblUser: makeNodeComponent("lblUser"),
    btnLogin: makeNodeComponent("btnLogin"),
    btnReservation: makeNodeComponent("btnReservation"),
    btnReservation3: makeNodeComponent("btnReservation3"),
    btnReservation2: makeNodeComponent("btnReservation2"),
    btnAnnouncement: makeNodeComponent("btnAnnouncement"),
    btnCalculation: makeNodeComponent("btnCalculation"),
    btnOnlinepayment: makeNodeComponent("btnOnlinepayment"),
    btnApi: makeNodeComponent("btnApi"),
    btnEhr: makeNodeComponent("btnEhr"),
    btnSpecialsite: makeNodeComponent("btnSpecialsite"),
    btnSpecialsite2: makeNodeComponent("btnSpecialsite2"),
    btnDashboard: makeNodeComponent("btnDashboard"),
    gridCalculator: makeNodeComponent("gridCalculator"),
    fragmentSlider: makeNodeComponent("fragmentSlider"),
    txtResevationCount: makeNodeComponent("txtResevationCount"),
    reservationCheck: makeNodeComponent("reservationCheck"),
    txtReservationInternetResult: makeNodeComponent(
      "txtReservationInternetResult"
    ),
    reservationPhoneCheck: makeNodeComponent("reservationPhoneCheck"),
    txtReservationPhoneResult: makeNodeComponent("txtReservationPhoneResult"),
    kioskResevationCheck: makeNodeComponent("kioskResevationCheck"),
    txtReservationKioskResult: makeNodeComponent("txtReservationKioskResult"),
    announcementCheck: makeNodeComponent("announcementCheck"),
    txtAnnouncementResult: makeNodeComponent("txtAnnouncementResult"),
    calculationCheck: makeNodeComponent("calculationCheck"),
    txtCalculationResult: makeNodeComponent("txtCalculationResult"),
    onlinepaymentCheck: makeNodeComponent("onlinepaymentCheck"),
    txtOnlinePaymentResult: makeNodeComponent("txtOnlinePaymentResult"),
    apiCheck: makeNodeComponent("apiCheck"),
    txtapiResult: makeNodeComponent("txtapiResult"),
    ehrCheck: makeNodeComponent("ehrCheck"),
    txtReservationKioskResult6: makeNodeComponent("txtReservationKioskResult6"),
    specialSiteCheck: makeNodeComponent("specialSiteCheck"),
    txtSpecialSiteResult: makeNodeComponent("txtSpecialSiteResult"),
    referralCheck: makeNodeComponent("referralCheck"),
    txtRefferalResult: makeNodeComponent("txtRefferalResult"),
    dashboardCheck: makeNodeComponent("dashboardCheck"),
    txtDashboardResult: makeNodeComponent("txtDashboardResult"),
    txtSumInvoice: makeNodeComponent("txtSumInvoice"),
    sideEffectCalculator: makeNodeComponent("sideEffectCalculator"),
    gridReservation: makeNodeComponent("gridReservation"),
    gridPhoneReserve: makeNodeComponent("gridPhoneReserve"),
    gridKiosk: makeNodeComponent("gridKiosk"),
    gridAnnouncement: makeNodeComponent("gridAnnouncement"),
    gridCalculation: makeNodeComponent("gridCalculation"),
    gridOnlinePayment: makeNodeComponent("gridOnlinePayment"),
    gridApi: makeNodeComponent("gridApi"),
    gridEhr: makeNodeComponent("gridEhr"),
    gridSpecialSite: makeNodeComponent("gridSpecialSite"),
    gridReferral: makeNodeComponent("gridReferral"),
    gridDashboard: makeNodeComponent("gridDashboard"),
    btnFixedCalculator: makeNodeComponent("btnFixedCalculator"),
    sideEffectPageLoad: makeNodeComponent("sideEffectPageLoad"),

    // Metadata about props expected for PlasmicHomepage
    internalVariantProps: PlasmicHomepage__VariantProps,
    internalArgProps: PlasmicHomepage__ArgProps,

    // Page metadata
    pageMetadata: {
      title: "ماشین حساب پذیرش24",
      description: "ماژول ها وشیوه قیمت گذاری محصولات پذیرش24",
      ogImageSrc:
        "https://site-assets.plasmic.app/49b5e4e62d4fd1407285906a0f5e6382.svg",
      canonical: ""
    }
  }
);

export default PlasmicHomepage;
/* prettier-ignore-end */
